# See LICENSE for license details.

#*****************************************************************************
# rori.S
#-----------------------------------------------------------------------------
#
# Test rori instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_IMM_OP(2, rori, 0xa21fa7bdb5bd4a32, 0x10fd3dedadea5195, 0x3);
    TEST_IMM_OP(3, rori, 0x5ff7d837a52b9c5a, 0xbd295ce2d2ffbec1, 0x1b);
    TEST_IMM_OP(4, rori, 0xc9649f05a8e1a8bb, 0xc9649f05a8e1a8bb, 0x0);
    TEST_IMM_OP(5, rori, 0x66a82523091933f9, 0x3541291848c99fcb, 0x3);
    TEST_IMM_OP(6, rori, 0xa49e21448e808c3a, 0x10a24740461d524f, 0xf);
    TEST_IMM_OP(7, rori, 0x215ea8d61ca8a514, 0x546b0e54528a10af, 0xf);
    TEST_IMM_OP(8, rori, 0x786e7525fa9c337f, 0x73a92fd4e19bfbc3, 0xb);
    TEST_IMM_OP(9, rori, 0x0f5e58105ece8fee, 0x82f6747f707af2c0, 0x1b);
    TEST_IMM_OP(10, rori, 0xfad6da0d523e882d, 0xf5adb41aa47d105b, 0x1);
    TEST_IMM_OP(11, rori, 0xde611efbf9c22090, 0xdf7f3844121bcc23, 0x15);
    TEST_IMM_OP(12, rori, 0x0000000200000000, 0x1, 0x1f);
    TEST_IMM_OP(13, rori, 0x0004000000000000, 0x2, 0xf);
    TEST_IMM_OP(14, rori, 0x0000080000000000, 0x4, 0x17);
    TEST_IMM_OP(15, rori, 0x0000010000000000, 0x8, 0x1b);
    TEST_IMM_OP(16, rori, 0x0000008000000000, 0x10, 0x1d);
    TEST_IMM_OP(17, rori, 0x0000008000000000, 0x20, 0x1e);
    TEST_IMM_OP(18, rori, 0x0000000000000040, 0x40, 0x0);
    TEST_IMM_OP(19, rori, 0x0080000000000000, 0x80, 0x10);
    TEST_IMM_OP(20, rori, 0x0000000000000001, 0x100, 0x8);
    TEST_IMM_OP(21, rori, 0x0000000000000020, 0x200, 0x4);
    TEST_IMM_OP(22, rori, 0x0000000000000100, 0x400, 0x2);
    TEST_IMM_OP(23, rori, 0x0000000000000400, 0x800, 0x1);
    TEST_IMM_OP(24, rori, 0x0000000000000200, 0x1000, 0x3);
    TEST_IMM_OP(25, rori, 0x0004000000000000, 0x2000, 0x1b);
    TEST_IMM_OP(26, rori, 0x0000000000004000, 0x4000, 0x0);
    TEST_IMM_OP(27, rori, 0x0000000000001000, 0x8000, 0x3);
    TEST_IMM_OP(28, rori, 0x0000000000000002, 0x10000, 0xf);
    TEST_IMM_OP(29, rori, 0x0000000000000004, 0x20000, 0xf);
    TEST_IMM_OP(30, rori, 0x0000000000000080, 0x40000, 0xb);
    TEST_IMM_OP(31, rori, 0x0100000000000000, 0x80000, 0x1b);
    TEST_IMM_OP(32, rori, 0x0000000000080000, 0x100000, 0x1);
    TEST_IMM_OP(33, rori, 0x0000000000000001, 0x200000, 0x15);
    TEST_IMM_OP(34, rori, 0x0080000000000000, 0x400000, 0x1f);
    TEST_IMM_OP(35, rori, 0x0000000000000100, 0x800000, 0xf);
    TEST_IMM_OP(36, rori, 0x0000000000000002, 0x1000000, 0x17);
    TEST_IMM_OP(37, rori, 0x4000000000000000, 0x2000000, 0x1b);
    TEST_IMM_OP(38, rori, 0x2000000000000000, 0x4000000, 0x1d);
    TEST_IMM_OP(39, rori, 0x2000000000000000, 0x8000000, 0x1e);
    TEST_IMM_OP(40, rori, 0x0000000010000000, 0x10000000, 0x0);
    TEST_IMM_OP(41, rori, 0x0000000000002000, 0x20000000, 0x10);
    TEST_IMM_OP(42, rori, 0x0000000000400000, 0x40000000, 0x8);
    TEST_IMM_OP(43, rori, 0x0000000008000000, 0x80000000, 0x4);
    TEST_IMM_OP(44, rori, 0x0000000040000000, 0x100000000, 0x2);
    TEST_IMM_OP(45, rori, 0x0000000100000000, 0x200000000, 0x1);
    TEST_IMM_OP(46, rori, 0x0000000080000000, 0x400000000, 0x3);
    TEST_IMM_OP(47, rori, 0x0000000000000100, 0x800000000, 0x1b);
    TEST_IMM_OP(48, rori, 0x0000001000000000, 0x1000000000, 0x0);
    TEST_IMM_OP(49, rori, 0x0000000400000000, 0x2000000000, 0x3);
    TEST_IMM_OP(50, rori, 0x0000000000800000, 0x4000000000, 0xf);
    TEST_IMM_OP(51, rori, 0x0000000001000000, 0x8000000000, 0xf);
    TEST_IMM_OP(52, rori, 0x0000000020000000, 0x10000000000, 0xb);
    TEST_IMM_OP(53, rori, 0x0000000000004000, 0x20000000000, 0x1b);
    TEST_IMM_OP(54, rori, 0x0000020000000000, 0x40000000000, 0x1);
    TEST_IMM_OP(55, rori, 0x0000000000400000, 0x80000000000, 0x15);
    TEST_IMM_OP(56, rori, 0x0000000000002000, 0x100000000000, 0x1f);
    TEST_IMM_OP(57, rori, 0x0000000040000000, 0x200000000000, 0xf);
    TEST_IMM_OP(58, rori, 0x0000000000800000, 0x400000000000, 0x17);
    TEST_IMM_OP(59, rori, 0x0000000000100000, 0x800000000000, 0x1b);
    TEST_IMM_OP(60, rori, 0x0000000000080000, 0x1000000000000, 0x1d);
    TEST_IMM_OP(61, rori, 0x0000000000080000, 0x2000000000000, 0x1e);
    TEST_IMM_OP(62, rori, 0x0004000000000000, 0x4000000000000, 0x0);
    TEST_IMM_OP(63, rori, 0x0000000800000000, 0x8000000000000, 0x10);
    TEST_IMM_OP(64, rori, 0x0000100000000000, 0x10000000000000, 0x8);
    TEST_IMM_OP(65, rori, 0x0002000000000000, 0x20000000000000, 0x4);
    TEST_IMM_OP(66, rori, 0x0010000000000000, 0x40000000000000, 0x2);
    TEST_IMM_OP(67, rori, 0x0040000000000000, 0x80000000000000, 0x1);
    TEST_IMM_OP(68, rori, 0x0020000000000000, 0x100000000000000, 0x3);
    TEST_IMM_OP(69, rori, 0x0000000040000000, 0x200000000000000, 0x1b);
    TEST_IMM_OP(70, rori, 0x0400000000000000, 0x400000000000000, 0x0);
    TEST_IMM_OP(71, rori, 0x0100000000000000, 0x800000000000000, 0x3);
    TEST_IMM_OP(72, rori, 0x0000200000000000, 0x1000000000000000, 0xf);
    TEST_IMM_OP(73, rori, 0x0000400000000000, 0x2000000000000000, 0xf);
    TEST_IMM_OP(74, rori, 0x0008000000000000, 0x4000000000000000, 0xb);
    TEST_IMM_OP(75, rori, 0x0000001000000000, 0x8000000000000000, 0x1b);
    TEST_IMM_OP(76, rori, 0x0000000000000000, 0x0, 0x1);
    TEST_IMM_OP(77, rori, 0xfffff7ffffffffff, 0xfffffffffffffffe, 0x15);
    TEST_IMM_OP(78, rori, 0xfffffffbffffffff, 0xfffffffffffffffd, 0x1f);
    TEST_IMM_OP(79, rori, 0xfff7ffffffffffff, 0xfffffffffffffffb, 0xf);
    TEST_IMM_OP(80, rori, 0xffffefffffffffff, 0xfffffffffffffff7, 0x17);
    TEST_IMM_OP(81, rori, 0xfffffdffffffffff, 0xffffffffffffffef, 0x1b);
    TEST_IMM_OP(82, rori, 0xfffffeffffffffff, 0xffffffffffffffdf, 0x1d);
    TEST_IMM_OP(83, rori, 0xfffffeffffffffff, 0xffffffffffffffbf, 0x1e);
    TEST_IMM_OP(84, rori, 0xffffffffffffff7f, 0xffffffffffffff7f, 0x0);
    TEST_IMM_OP(85, rori, 0xfeffffffffffffff, 0xfffffffffffffeff, 0x10);
    TEST_IMM_OP(86, rori, 0xfffffffffffffffd, 0xfffffffffffffdff, 0x8);
    TEST_IMM_OP(87, rori, 0xffffffffffffffbf, 0xfffffffffffffbff, 0x4);
    TEST_IMM_OP(88, rori, 0xfffffffffffffdff, 0xfffffffffffff7ff, 0x2);
    TEST_IMM_OP(89, rori, 0xfffffffffffff7ff, 0xffffffffffffefff, 0x1);
    TEST_IMM_OP(90, rori, 0xfffffffffffffbff, 0xffffffffffffdfff, 0x3);
    TEST_IMM_OP(91, rori, 0xfff7ffffffffffff, 0xffffffffffffbfff, 0x1b);
    TEST_IMM_OP(92, rori, 0xffffffffffff7fff, 0xffffffffffff7fff, 0x0);
    TEST_IMM_OP(93, rori, 0xffffffffffffdfff, 0xfffffffffffeffff, 0x3);
    TEST_IMM_OP(94, rori, 0xfffffffffffffffb, 0xfffffffffffdffff, 0xf);
    TEST_IMM_OP(95, rori, 0xfffffffffffffff7, 0xfffffffffffbffff, 0xf);
    TEST_IMM_OP(96, rori, 0xfffffffffffffeff, 0xfffffffffff7ffff, 0xb);
    TEST_IMM_OP(97, rori, 0xfdffffffffffffff, 0xffffffffffefffff, 0x1b);
    TEST_IMM_OP(98, rori, 0xffffffffffefffff, 0xffffffffffdfffff, 0x1);
    TEST_IMM_OP(99, rori, 0xfffffffffffffffd, 0xffffffffffbfffff, 0x15);
    TEST_IMM_OP(100, rori, 0xfeffffffffffffff, 0xffffffffff7fffff, 0x1f);
    TEST_IMM_OP(101, rori, 0xfffffffffffffdff, 0xfffffffffeffffff, 0xf);
    TEST_IMM_OP(102, rori, 0xfffffffffffffffb, 0xfffffffffdffffff, 0x17);
    TEST_IMM_OP(103, rori, 0x7fffffffffffffff, 0xfffffffffbffffff, 0x1b);
    TEST_IMM_OP(104, rori, 0xbfffffffffffffff, 0xfffffffff7ffffff, 0x1d);
    TEST_IMM_OP(105, rori, 0xbfffffffffffffff, 0xffffffffefffffff, 0x1e);
    TEST_IMM_OP(106, rori, 0xffffffffdfffffff, 0xffffffffdfffffff, 0x0);
    TEST_IMM_OP(107, rori, 0xffffffffffffbfff, 0xffffffffbfffffff, 0x10);
    TEST_IMM_OP(108, rori, 0xffffffffff7fffff, 0xffffffff7fffffff, 0x8);
    TEST_IMM_OP(109, rori, 0xffffffffefffffff, 0xfffffffeffffffff, 0x4);
    TEST_IMM_OP(110, rori, 0xffffffff7fffffff, 0xfffffffdffffffff, 0x2);
    TEST_IMM_OP(111, rori, 0xfffffffdffffffff, 0xfffffffbffffffff, 0x1);
    TEST_IMM_OP(112, rori, 0xfffffffeffffffff, 0xfffffff7ffffffff, 0x3);
    TEST_IMM_OP(113, rori, 0xfffffffffffffdff, 0xffffffefffffffff, 0x1b);
    TEST_IMM_OP(114, rori, 0xffffffdfffffffff, 0xffffffdfffffffff, 0x0);
    TEST_IMM_OP(115, rori, 0xfffffff7ffffffff, 0xffffffbfffffffff, 0x3);
    TEST_IMM_OP(116, rori, 0xfffffffffeffffff, 0xffffff7fffffffff, 0xf);
    TEST_IMM_OP(117, rori, 0xfffffffffdffffff, 0xfffffeffffffffff, 0xf);
    TEST_IMM_OP(118, rori, 0xffffffffbfffffff, 0xfffffdffffffffff, 0xb);
    TEST_IMM_OP(119, rori, 0xffffffffffff7fff, 0xfffffbffffffffff, 0x1b);
    TEST_IMM_OP(120, rori, 0xfffffbffffffffff, 0xfffff7ffffffffff, 0x1);
    TEST_IMM_OP(121, rori, 0xffffffffff7fffff, 0xffffefffffffffff, 0x15);
    TEST_IMM_OP(122, rori, 0xffffffffffffbfff, 0xffffdfffffffffff, 0x1f);
    TEST_IMM_OP(123, rori, 0xffffffff7fffffff, 0xffffbfffffffffff, 0xf);
    TEST_IMM_OP(124, rori, 0xfffffffffeffffff, 0xffff7fffffffffff, 0x17);
    TEST_IMM_OP(125, rori, 0xffffffffffdfffff, 0xfffeffffffffffff, 0x1b);
    TEST_IMM_OP(126, rori, 0xffffffffffefffff, 0xfffdffffffffffff, 0x1d);
    TEST_IMM_OP(127, rori, 0xffffffffffefffff, 0xfffbffffffffffff, 0x1e);
    TEST_IMM_OP(128, rori, 0xfff7ffffffffffff, 0xfff7ffffffffffff, 0x0);
    TEST_IMM_OP(129, rori, 0xffffffefffffffff, 0xffefffffffffffff, 0x10);
    TEST_IMM_OP(130, rori, 0xffffdfffffffffff, 0xffdfffffffffffff, 0x8);
    TEST_IMM_OP(131, rori, 0xfffbffffffffffff, 0xffbfffffffffffff, 0x4);
    TEST_IMM_OP(132, rori, 0xff7fffffffffffff, 0xff7fffffffffffff, 0x0);
    TEST_IMM_OP(133, rori, 0xfeffffffffffffff, 0xfeffffffffffffff, 0x0);
    TEST_IMM_OP(134, rori, 0xfdffffffffffffff, 0xfdffffffffffffff, 0x0);
    TEST_IMM_OP(135, rori, 0xfbffffffffffffff, 0xfbffffffffffffff, 0x0);
    TEST_IMM_OP(136, rori, 0xf7ffffffffffffff, 0xf7ffffffffffffff, 0x0);
    TEST_IMM_OP(137, rori, 0xefffffffffffffff, 0xefffffffffffffff, 0x0);
    TEST_IMM_OP(138, rori, 0xdfffffffffffffff, 0xdfffffffffffffff, 0x0);
    TEST_IMM_OP(139, rori, 0xbfffffffffffffff, 0xbfffffffffffffff, 0x0);
    TEST_IMM_OP(140, rori, 0x7fffffffffffffff, 0x7fffffffffffffff, 0x0);
    TEST_IMM_OP(141, rori, 0xffffffffffffffff, 0xffffffffffffffff, 0x0);
    TEST_IMM_OP(142, rori, 0x0000000000000001, 0x1, 0x0);
    TEST_IMM_OP(143, rori, 0x0000000000000002, 0x2, 0x0);
    TEST_IMM_OP(144, rori, 0x0000000000000004, 0x4, 0x0);
    TEST_IMM_OP(145, rori, 0x0000000000000008, 0x8, 0x0);
    TEST_IMM_OP(146, rori, 0x0000000000000010, 0x10, 0x0);
    TEST_IMM_OP(147, rori, 0x0000000000000020, 0x20, 0x0);
    TEST_IMM_OP(148, rori, 0x0000000000000040, 0x40, 0x0);
    TEST_IMM_OP(149, rori, 0x0000000000000080, 0x80, 0x0);
    TEST_IMM_OP(150, rori, 0x0000000000000100, 0x100, 0x0);
    TEST_IMM_OP(151, rori, 0x0000000000000200, 0x200, 0x0);
    TEST_IMM_OP(152, rori, 0x0000000000000400, 0x400, 0x0);
    TEST_IMM_OP(153, rori, 0x0000000000000800, 0x800, 0x0);
    TEST_IMM_OP(154, rori, 0x0000000000001000, 0x1000, 0x0);
    TEST_IMM_OP(155, rori, 0x0000000000002000, 0x2000, 0x0);
    TEST_IMM_OP(156, rori, 0x0000000000004000, 0x4000, 0x0);
    TEST_IMM_OP(157, rori, 0x0000000000008000, 0x8000, 0x0);
    TEST_IMM_OP(158, rori, 0x0000000000010000, 0x10000, 0x0);
    TEST_IMM_OP(159, rori, 0x0000000000020000, 0x20000, 0x0);
    TEST_IMM_OP(160, rori, 0x0000000000040000, 0x40000, 0x0);
    TEST_IMM_OP(161, rori, 0x0000000000080000, 0x80000, 0x0);
    TEST_IMM_OP(162, rori, 0x0000000000100000, 0x100000, 0x0);
    TEST_IMM_OP(163, rori, 0x0000000000200000, 0x200000, 0x0);
    TEST_IMM_OP(164, rori, 0x0000000000400000, 0x400000, 0x0);
    TEST_IMM_OP(165, rori, 0x0000000000800000, 0x800000, 0x0);
    TEST_IMM_OP(166, rori, 0x0000000001000000, 0x1000000, 0x0);
    TEST_IMM_OP(167, rori, 0x0000000002000000, 0x2000000, 0x0);
    TEST_IMM_OP(168, rori, 0x0000000004000000, 0x4000000, 0x0);
    TEST_IMM_OP(169, rori, 0x0000000008000000, 0x8000000, 0x0);
    TEST_IMM_OP(170, rori, 0x0000000010000000, 0x10000000, 0x0);
    TEST_IMM_OP(171, rori, 0x0000000020000000, 0x20000000, 0x0);
    TEST_IMM_OP(172, rori, 0x0000000040000000, 0x40000000, 0x0);
    TEST_IMM_OP(173, rori, 0x0000000080000000, 0x80000000, 0x0);
    TEST_IMM_OP(174, rori, 0x0000000100000000, 0x100000000, 0x0);
    TEST_IMM_OP(175, rori, 0x0000000200000000, 0x200000000, 0x0);
    TEST_IMM_OP(176, rori, 0x0000000400000000, 0x400000000, 0x0);
    TEST_IMM_OP(177, rori, 0x0000000800000000, 0x800000000, 0x0);
    TEST_IMM_OP(178, rori, 0x0000001000000000, 0x1000000000, 0x0);
    TEST_IMM_OP(179, rori, 0x0000002000000000, 0x2000000000, 0x0);
    TEST_IMM_OP(180, rori, 0x0000004000000000, 0x4000000000, 0x0);
    TEST_IMM_OP(181, rori, 0x0000008000000000, 0x8000000000, 0x0);
    TEST_IMM_OP(182, rori, 0x0000010000000000, 0x10000000000, 0x0);
    TEST_IMM_OP(183, rori, 0x0000020000000000, 0x20000000000, 0x0);
    TEST_IMM_OP(184, rori, 0x0000040000000000, 0x40000000000, 0x0);
    TEST_IMM_OP(185, rori, 0x0000080000000000, 0x80000000000, 0x0);
    TEST_IMM_OP(186, rori, 0x0000100000000000, 0x100000000000, 0x0);
    TEST_IMM_OP(187, rori, 0x0000200000000000, 0x200000000000, 0x0);
    TEST_IMM_OP(188, rori, 0x0000400000000000, 0x400000000000, 0x0);
    TEST_IMM_OP(189, rori, 0x0000800000000000, 0x800000000000, 0x0);
    TEST_IMM_OP(190, rori, 0x0001000000000000, 0x1000000000000, 0x0);
    TEST_IMM_OP(191, rori, 0x0002000000000000, 0x2000000000000, 0x0);
    TEST_IMM_OP(192, rori, 0x0004000000000000, 0x4000000000000, 0x0);
    TEST_IMM_OP(193, rori, 0x0008000000000000, 0x8000000000000, 0x0);
    TEST_IMM_OP(194, rori, 0x0010000000000000, 0x10000000000000, 0x0);
    TEST_IMM_OP(195, rori, 0x0020000000000000, 0x20000000000000, 0x0);
    TEST_IMM_OP(196, rori, 0x0040000000000000, 0x40000000000000, 0x0);
    TEST_IMM_OP(197, rori, 0x0080000000000000, 0x80000000000000, 0x0);
    TEST_IMM_OP(198, rori, 0x0100000000000000, 0x100000000000000, 0x0);
    TEST_IMM_OP(199, rori, 0x0200000000000000, 0x200000000000000, 0x0);
    TEST_IMM_OP(200, rori, 0x0400000000000000, 0x400000000000000, 0x0);
    TEST_IMM_OP(201, rori, 0x0800000000000000, 0x800000000000000, 0x0);
    TEST_IMM_OP(202, rori, 0x1000000000000000, 0x1000000000000000, 0x0);
    TEST_IMM_OP(203, rori, 0x2000000000000000, 0x2000000000000000, 0x0);
    TEST_IMM_OP(204, rori, 0x4000000000000000, 0x4000000000000000, 0x0);
    TEST_IMM_OP(205, rori, 0x8000000000000000, 0x8000000000000000, 0x0);
    TEST_IMM_OP(206, rori, 0x0000000000000000, 0x0, 0x0);
    TEST_IMM_OP(207, rori, 0xfffffffffffffffe, 0xfffffffffffffffe, 0x0);
    TEST_IMM_OP(208, rori, 0xfffffffffffffffd, 0xfffffffffffffffd, 0x0);
    TEST_IMM_OP(209, rori, 0xfffffffffffffffb, 0xfffffffffffffffb, 0x0);
    TEST_IMM_OP(210, rori, 0xfffffffffffffff7, 0xfffffffffffffff7, 0x0);
    TEST_IMM_OP(211, rori, 0xffffffffffffffef, 0xffffffffffffffef, 0x0);
    TEST_IMM_OP(212, rori, 0xffffffffffffffdf, 0xffffffffffffffdf, 0x0);
    TEST_IMM_OP(213, rori, 0xffffffffffffffbf, 0xffffffffffffffbf, 0x0);
    TEST_IMM_OP(214, rori, 0xffffffffffffff7f, 0xffffffffffffff7f, 0x0);
    TEST_IMM_OP(215, rori, 0xfffffffffffffeff, 0xfffffffffffffeff, 0x0);
    TEST_IMM_OP(216, rori, 0xfffffffffffffdff, 0xfffffffffffffdff, 0x0);
    TEST_IMM_OP(217, rori, 0xfffffffffffffbff, 0xfffffffffffffbff, 0x0);
    TEST_IMM_OP(218, rori, 0xfffffffffffff7ff, 0xfffffffffffff7ff, 0x0);
    TEST_IMM_OP(219, rori, 0xffffffffffffefff, 0xffffffffffffefff, 0x0);
    TEST_IMM_OP(220, rori, 0xffffffffffffdfff, 0xffffffffffffdfff, 0x0);
    TEST_IMM_OP(221, rori, 0xffffffffffffbfff, 0xffffffffffffbfff, 0x0);
    TEST_IMM_OP(222, rori, 0xffffffffffff7fff, 0xffffffffffff7fff, 0x0);
    TEST_IMM_OP(223, rori, 0xfffffffffffeffff, 0xfffffffffffeffff, 0x0);
    TEST_IMM_OP(224, rori, 0xfffffffffffdffff, 0xfffffffffffdffff, 0x0);
    TEST_IMM_OP(225, rori, 0xfffffffffffbffff, 0xfffffffffffbffff, 0x0);
    TEST_IMM_OP(226, rori, 0xfffffffffff7ffff, 0xfffffffffff7ffff, 0x0);
    TEST_IMM_OP(227, rori, 0xffffffffffefffff, 0xffffffffffefffff, 0x0);
    TEST_IMM_OP(228, rori, 0xffffffffffdfffff, 0xffffffffffdfffff, 0x0);
    TEST_IMM_OP(229, rori, 0xffffffffffbfffff, 0xffffffffffbfffff, 0x0);
    TEST_IMM_OP(230, rori, 0xffffffffff7fffff, 0xffffffffff7fffff, 0x0);
    TEST_IMM_OP(231, rori, 0xfffffffffeffffff, 0xfffffffffeffffff, 0x0);
    TEST_IMM_OP(232, rori, 0xfffffffffdffffff, 0xfffffffffdffffff, 0x0);
    TEST_IMM_OP(233, rori, 0xfffffffffbffffff, 0xfffffffffbffffff, 0x0);
    TEST_IMM_OP(234, rori, 0xfffffffff7ffffff, 0xfffffffff7ffffff, 0x0);
    TEST_IMM_OP(235, rori, 0xffffffffefffffff, 0xffffffffefffffff, 0x0);
    TEST_IMM_OP(236, rori, 0xffffffffdfffffff, 0xffffffffdfffffff, 0x0);
    TEST_IMM_OP(237, rori, 0xffffffffbfffffff, 0xffffffffbfffffff, 0x0);
    TEST_IMM_OP(238, rori, 0xffffffff7fffffff, 0xffffffff7fffffff, 0x0);
    TEST_IMM_OP(239, rori, 0xfffffffeffffffff, 0xfffffffeffffffff, 0x0);
    TEST_IMM_OP(240, rori, 0xfffffffdffffffff, 0xfffffffdffffffff, 0x0);
    TEST_IMM_OP(241, rori, 0xfffffffbffffffff, 0xfffffffbffffffff, 0x0);
    TEST_IMM_OP(242, rori, 0xfffffff7ffffffff, 0xfffffff7ffffffff, 0x0);
    TEST_IMM_OP(243, rori, 0xffffffefffffffff, 0xffffffefffffffff, 0x0);
    TEST_IMM_OP(244, rori, 0xffffffdfffffffff, 0xffffffdfffffffff, 0x0);
    TEST_IMM_OP(245, rori, 0xffffffbfffffffff, 0xffffffbfffffffff, 0x0);
    TEST_IMM_OP(246, rori, 0xffffff7fffffffff, 0xffffff7fffffffff, 0x0);
    TEST_IMM_OP(247, rori, 0xfffffeffffffffff, 0xfffffeffffffffff, 0x0);
    TEST_IMM_OP(248, rori, 0xfffffdffffffffff, 0xfffffdffffffffff, 0x0);
    TEST_IMM_OP(249, rori, 0xfffffbffffffffff, 0xfffffbffffffffff, 0x0);
    TEST_IMM_OP(250, rori, 0xfffff7ffffffffff, 0xfffff7ffffffffff, 0x0);
    TEST_IMM_OP(251, rori, 0xffffefffffffffff, 0xffffefffffffffff, 0x0);
    TEST_IMM_OP(252, rori, 0xffffdfffffffffff, 0xffffdfffffffffff, 0x0);
    TEST_IMM_OP(253, rori, 0xffffbfffffffffff, 0xffffbfffffffffff, 0x0);
    TEST_IMM_OP(254, rori, 0xffff7fffffffffff, 0xffff7fffffffffff, 0x0);
    TEST_IMM_OP(255, rori, 0xfffeffffffffffff, 0xfffeffffffffffff, 0x0);
    TEST_IMM_OP(256, rori, 0xfffdffffffffffff, 0xfffdffffffffffff, 0x0);
    TEST_IMM_OP(257, rori, 0xfffbffffffffffff, 0xfffbffffffffffff, 0x0);
    TEST_IMM_OP(258, rori, 0xfff7ffffffffffff, 0xfff7ffffffffffff, 0x0);
    TEST_IMM_OP(259, rori, 0xffefffffffffffff, 0xffefffffffffffff, 0x0);
    TEST_IMM_OP(260, rori, 0xffdfffffffffffff, 0xffdfffffffffffff, 0x0);
    TEST_IMM_OP(261, rori, 0xffbfffffffffffff, 0xffbfffffffffffff, 0x0);
    TEST_IMM_OP(262, rori, 0xffff7fffffffffff, 0xff7fffffffffffff, 0x8);
    TEST_IMM_OP(263, rori, 0xffefffffffffffff, 0xfeffffffffffffff, 0x4);
    TEST_IMM_OP(264, rori, 0xff7fffffffffffff, 0xfdffffffffffffff, 0x2);
    TEST_IMM_OP(265, rori, 0xfdffffffffffffff, 0xfbffffffffffffff, 0x1);
    TEST_IMM_OP(266, rori, 0xfeffffffffffffff, 0xf7ffffffffffffff, 0x3);
    TEST_IMM_OP(267, rori, 0xfffffffdffffffff, 0xefffffffffffffff, 0x1b);
    TEST_IMM_OP(268, rori, 0xdfffffffffffffff, 0xdfffffffffffffff, 0x0);
    TEST_IMM_OP(269, rori, 0xf7ffffffffffffff, 0xbfffffffffffffff, 0x3);
    TEST_IMM_OP(270, rori, 0xfffeffffffffffff, 0x7fffffffffffffff, 0xf);
    TEST_IMM_OP(271, rori, 0xffffffffffffffff, 0xffffffffffffffff, 0xf);

TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

