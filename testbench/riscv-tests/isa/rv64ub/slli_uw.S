# See LICENSE for license details.

#*****************************************************************************
# slli_uw.S
#-----------------------------------------------------------------------------
#
# Test slli_uw instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_IMM_OP(2, slli.uw, 0x000000056f528ca8, 0x10fd3dedadea5195, 0x3);
    TEST_IMM_OP(3, slli.uw, 0x0697fdf608000000, 0xbd295ce2d2ffbec1, 0x1b);
    TEST_IMM_OP(4, slli.uw, 0x00000000a8e1a8bb, 0xc9649f05a8e1a8bb, 0x0);
    TEST_IMM_OP(5, slli.uw, 0x00000002464cfe58, 0x3541291848c99fcb, 0x3);
    TEST_IMM_OP(6, slli.uw, 0x0000230ea9278000, 0x10a24740461d524f, 0xf);
    TEST_IMM_OP(7, slli.uw, 0x0000294508578000, 0x546b0e54528a10af, 0xf);
    TEST_IMM_OP(8, slli.uw, 0x0000070cdfde1800, 0x73a92fd4e19bfbc3, 0xb);
    TEST_IMM_OP(9, slli.uw, 0x0383d79600000000, 0x82f6747f707af2c0, 0x1b);
    TEST_IMM_OP(10, slli.uw, 0x0000000148fa20b6, 0xf5adb41aa47d105b, 0x1);
    TEST_IMM_OP(11, slli.uw, 0x0002437984600000, 0xdf7f3844121bcc23, 0x15);
    TEST_IMM_OP(12, slli.uw, 0x0000000080000000, 0x1, 0x1f);
    TEST_IMM_OP(13, slli.uw, 0x0000000000010000, 0x2, 0xf);
    TEST_IMM_OP(14, slli.uw, 0x0000000002000000, 0x4, 0x17);
    TEST_IMM_OP(15, slli.uw, 0x0000000040000000, 0x8, 0x1b);
    TEST_IMM_OP(16, slli.uw, 0x0000000200000000, 0x10, 0x1d);
    TEST_IMM_OP(17, slli.uw, 0x0000000800000000, 0x20, 0x1e);
    TEST_IMM_OP(18, slli.uw, 0x0000000000000040, 0x40, 0x0);
    TEST_IMM_OP(19, slli.uw, 0x0000000000800000, 0x80, 0x10);
    TEST_IMM_OP(20, slli.uw, 0x0000000000010000, 0x100, 0x8);
    TEST_IMM_OP(21, slli.uw, 0x0000000000002000, 0x200, 0x4);
    TEST_IMM_OP(22, slli.uw, 0x0000000000001000, 0x400, 0x2);
    TEST_IMM_OP(23, slli.uw, 0x0000000000001000, 0x800, 0x1);
    TEST_IMM_OP(24, slli.uw, 0x0000000000008000, 0x1000, 0x3);
    TEST_IMM_OP(25, slli.uw, 0x0000010000000000, 0x2000, 0x1b);
    TEST_IMM_OP(26, slli.uw, 0x0000000000004000, 0x4000, 0x0);
    TEST_IMM_OP(27, slli.uw, 0x0000000000040000, 0x8000, 0x3);
    TEST_IMM_OP(28, slli.uw, 0x0000000080000000, 0x10000, 0xf);
    TEST_IMM_OP(29, slli.uw, 0x0000000100000000, 0x20000, 0xf);
    TEST_IMM_OP(30, slli.uw, 0x0000000020000000, 0x40000, 0xb);
    TEST_IMM_OP(31, slli.uw, 0x0000400000000000, 0x80000, 0x1b);
    TEST_IMM_OP(32, slli.uw, 0x0000000000200000, 0x100000, 0x1);
    TEST_IMM_OP(33, slli.uw, 0x0000040000000000, 0x200000, 0x15);
    TEST_IMM_OP(34, slli.uw, 0x0020000000000000, 0x400000, 0x1f);
    TEST_IMM_OP(35, slli.uw, 0x0000004000000000, 0x800000, 0xf);
    TEST_IMM_OP(36, slli.uw, 0x0000800000000000, 0x1000000, 0x17);
    TEST_IMM_OP(37, slli.uw, 0x0010000000000000, 0x2000000, 0x1b);
    TEST_IMM_OP(38, slli.uw, 0x0080000000000000, 0x4000000, 0x1d);
    TEST_IMM_OP(39, slli.uw, 0x0200000000000000, 0x8000000, 0x1e);
    TEST_IMM_OP(40, slli.uw, 0x0000000010000000, 0x10000000, 0x0);
    TEST_IMM_OP(41, slli.uw, 0x0000200000000000, 0x20000000, 0x10);
    TEST_IMM_OP(42, slli.uw, 0x0000004000000000, 0x40000000, 0x8);
    TEST_IMM_OP(43, slli.uw, 0x0000000800000000, 0x80000000, 0x4);
    TEST_IMM_OP(44, slli.uw, 0x0000000000000000, 0x100000000, 0x2);
    TEST_IMM_OP(45, slli.uw, 0x0000000000000000, 0x200000000, 0x1);
    TEST_IMM_OP(46, slli.uw, 0x0000000000000000, 0x400000000, 0x3);
    TEST_IMM_OP(47, slli.uw, 0x0000000000000000, 0x800000000, 0x1b);
    TEST_IMM_OP(48, slli.uw, 0x0000000000000000, 0x1000000000, 0x0);
    TEST_IMM_OP(49, slli.uw, 0x0000000000000000, 0x2000000000, 0x3);
    TEST_IMM_OP(50, slli.uw, 0x0000000000000000, 0x4000000000, 0xf);
    TEST_IMM_OP(51, slli.uw, 0x0000000000000000, 0x8000000000, 0xf);
    TEST_IMM_OP(52, slli.uw, 0x0000000000000000, 0x10000000000, 0xb);
    TEST_IMM_OP(53, slli.uw, 0x0000000000000000, 0x20000000000, 0x1b);
    TEST_IMM_OP(54, slli.uw, 0x0000000000000000, 0x40000000000, 0x1);
    TEST_IMM_OP(55, slli.uw, 0x0000000000000000, 0x80000000000, 0x15);
    TEST_IMM_OP(56, slli.uw, 0x0000000000000000, 0x100000000000, 0x1f);
    TEST_IMM_OP(57, slli.uw, 0x0000000000000000, 0x200000000000, 0xf);
    TEST_IMM_OP(58, slli.uw, 0x0000000000000000, 0x400000000000, 0x17);
    TEST_IMM_OP(59, slli.uw, 0x0000000000000000, 0x800000000000, 0x1b);
    TEST_IMM_OP(60, slli.uw, 0x0000000000000000, 0x1000000000000, 0x1d);
    TEST_IMM_OP(61, slli.uw, 0x0000000000000000, 0x2000000000000, 0x1e);
    TEST_IMM_OP(62, slli.uw, 0x0000000000000000, 0x4000000000000, 0x0);
    TEST_IMM_OP(63, slli.uw, 0x0000000000000000, 0x8000000000000, 0x10);
    TEST_IMM_OP(64, slli.uw, 0x0000000000000000, 0x10000000000000, 0x8);
    TEST_IMM_OP(65, slli.uw, 0x0000000000000000, 0x20000000000000, 0x4);
    TEST_IMM_OP(66, slli.uw, 0x0000000000000000, 0x40000000000000, 0x2);
    TEST_IMM_OP(67, slli.uw, 0x0000000000000000, 0x80000000000000, 0x1);
    TEST_IMM_OP(68, slli.uw, 0x0000000000000000, 0x100000000000000, 0x3);
    TEST_IMM_OP(69, slli.uw, 0x0000000000000000, 0x200000000000000, 0x1b);
    TEST_IMM_OP(70, slli.uw, 0x0000000000000000, 0x400000000000000, 0x0);
    TEST_IMM_OP(71, slli.uw, 0x0000000000000000, 0x800000000000000, 0x3);
    TEST_IMM_OP(72, slli.uw, 0x0000000000000000, 0x1000000000000000, 0xf);
    TEST_IMM_OP(73, slli.uw, 0x0000000000000000, 0x2000000000000000, 0xf);
    TEST_IMM_OP(74, slli.uw, 0x0000000000000000, 0x4000000000000000, 0xb);
    TEST_IMM_OP(75, slli.uw, 0x0000000000000000, 0x8000000000000000, 0x1b);
    TEST_IMM_OP(76, slli.uw, 0x0000000000000000, 0x0, 0x1);
    TEST_IMM_OP(77, slli.uw, 0x001fffffffc00000, 0xfffffffffffffffe, 0x15);
    TEST_IMM_OP(78, slli.uw, 0x7ffffffe80000000, 0xfffffffffffffffd, 0x1f);
    TEST_IMM_OP(79, slli.uw, 0x00007ffffffd8000, 0xfffffffffffffffb, 0xf);
    TEST_IMM_OP(80, slli.uw, 0x007ffffffb800000, 0xfffffffffffffff7, 0x17);
    TEST_IMM_OP(81, slli.uw, 0x07ffffff78000000, 0xffffffffffffffef, 0x1b);
    TEST_IMM_OP(82, slli.uw, 0x1ffffffbe0000000, 0xffffffffffffffdf, 0x1d);
    TEST_IMM_OP(83, slli.uw, 0x3fffffefc0000000, 0xffffffffffffffbf, 0x1e);
    TEST_IMM_OP(84, slli.uw, 0x00000000ffffff7f, 0xffffffffffffff7f, 0x0);
    TEST_IMM_OP(85, slli.uw, 0x0000fffffeff0000, 0xfffffffffffffeff, 0x10);
    TEST_IMM_OP(86, slli.uw, 0x000000fffffdff00, 0xfffffffffffffdff, 0x8);
    TEST_IMM_OP(87, slli.uw, 0x0000000fffffbff0, 0xfffffffffffffbff, 0x4);
    TEST_IMM_OP(88, slli.uw, 0x00000003ffffdffc, 0xfffffffffffff7ff, 0x2);
    TEST_IMM_OP(89, slli.uw, 0x00000001ffffdffe, 0xffffffffffffefff, 0x1);
    TEST_IMM_OP(90, slli.uw, 0x00000007fffefff8, 0xffffffffffffdfff, 0x3);
    TEST_IMM_OP(91, slli.uw, 0x07fffdfff8000000, 0xffffffffffffbfff, 0x1b);
    TEST_IMM_OP(92, slli.uw, 0x00000000ffff7fff, 0xffffffffffff7fff, 0x0);
    TEST_IMM_OP(93, slli.uw, 0x00000007fff7fff8, 0xfffffffffffeffff, 0x3);
    TEST_IMM_OP(94, slli.uw, 0x00007ffeffff8000, 0xfffffffffffdffff, 0xf);
    TEST_IMM_OP(95, slli.uw, 0x00007ffdffff8000, 0xfffffffffffbffff, 0xf);
    TEST_IMM_OP(96, slli.uw, 0x000007ffbffff800, 0xfffffffffff7ffff, 0xb);
    TEST_IMM_OP(97, slli.uw, 0x07ff7ffff8000000, 0xffffffffffefffff, 0x1b);
    TEST_IMM_OP(98, slli.uw, 0x00000001ffbffffe, 0xffffffffffdfffff, 0x1);
    TEST_IMM_OP(99, slli.uw, 0x001ff7ffffe00000, 0xffffffffffbfffff, 0x15);
    TEST_IMM_OP(100, slli.uw, 0x7fbfffff80000000, 0xffffffffff7fffff, 0x1f);
    TEST_IMM_OP(101, slli.uw, 0x00007f7fffff8000, 0xfffffffffeffffff, 0xf);
    TEST_IMM_OP(102, slli.uw, 0x007effffff800000, 0xfffffffffdffffff, 0x17);
    TEST_IMM_OP(103, slli.uw, 0x07dffffff8000000, 0xfffffffffbffffff, 0x1b);
    TEST_IMM_OP(104, slli.uw, 0x1effffffe0000000, 0xfffffffff7ffffff, 0x1d);
    TEST_IMM_OP(105, slli.uw, 0x3bffffffc0000000, 0xffffffffefffffff, 0x1e);
    TEST_IMM_OP(106, slli.uw, 0x00000000dfffffff, 0xffffffffdfffffff, 0x0);
    TEST_IMM_OP(107, slli.uw, 0x0000bfffffff0000, 0xffffffffbfffffff, 0x10);
    TEST_IMM_OP(108, slli.uw, 0x0000007fffffff00, 0xffffffff7fffffff, 0x8);
    TEST_IMM_OP(109, slli.uw, 0x0000000ffffffff0, 0xfffffffeffffffff, 0x4);
    TEST_IMM_OP(110, slli.uw, 0x00000003fffffffc, 0xfffffffdffffffff, 0x2);
    TEST_IMM_OP(111, slli.uw, 0x00000001fffffffe, 0xfffffffbffffffff, 0x1);
    TEST_IMM_OP(112, slli.uw, 0x00000007fffffff8, 0xfffffff7ffffffff, 0x3);
    TEST_IMM_OP(113, slli.uw, 0x07fffffff8000000, 0xffffffefffffffff, 0x1b);
    TEST_IMM_OP(114, slli.uw, 0x00000000ffffffff, 0xffffffdfffffffff, 0x0);
    TEST_IMM_OP(115, slli.uw, 0x00000007fffffff8, 0xffffffbfffffffff, 0x3);
    TEST_IMM_OP(116, slli.uw, 0x00007fffffff8000, 0xffffff7fffffffff, 0xf);
    TEST_IMM_OP(117, slli.uw, 0x00007fffffff8000, 0xfffffeffffffffff, 0xf);
    TEST_IMM_OP(118, slli.uw, 0x000007fffffff800, 0xfffffdffffffffff, 0xb);
    TEST_IMM_OP(119, slli.uw, 0x07fffffff8000000, 0xfffffbffffffffff, 0x1b);
    TEST_IMM_OP(120, slli.uw, 0x00000001fffffffe, 0xfffff7ffffffffff, 0x1);
    TEST_IMM_OP(121, slli.uw, 0x001fffffffe00000, 0xffffefffffffffff, 0x15);
    TEST_IMM_OP(122, slli.uw, 0x7fffffff80000000, 0xffffdfffffffffff, 0x1f);
    TEST_IMM_OP(123, slli.uw, 0x00007fffffff8000, 0xffffbfffffffffff, 0xf);
    TEST_IMM_OP(124, slli.uw, 0x007fffffff800000, 0xffff7fffffffffff, 0x17);
    TEST_IMM_OP(125, slli.uw, 0x07fffffff8000000, 0xfffeffffffffffff, 0x1b);
    TEST_IMM_OP(126, slli.uw, 0x1fffffffe0000000, 0xfffdffffffffffff, 0x1d);
    TEST_IMM_OP(127, slli.uw, 0x3fffffffc0000000, 0xfffbffffffffffff, 0x1e);
    TEST_IMM_OP(128, slli.uw, 0x00000000ffffffff, 0xfff7ffffffffffff, 0x0);
    TEST_IMM_OP(129, slli.uw, 0x0000ffffffff0000, 0xffefffffffffffff, 0x10);
    TEST_IMM_OP(130, slli.uw, 0x000000ffffffff00, 0xffdfffffffffffff, 0x8);
    TEST_IMM_OP(131, slli.uw, 0x0000000ffffffff0, 0xffbfffffffffffff, 0x4);
    TEST_IMM_OP(132, slli.uw, 0x00000000ffffffff, 0xff7fffffffffffff, 0x0);
    TEST_IMM_OP(133, slli.uw, 0x00000000ffffffff, 0xfeffffffffffffff, 0x0);
    TEST_IMM_OP(134, slli.uw, 0x00000000ffffffff, 0xfdffffffffffffff, 0x0);
    TEST_IMM_OP(135, slli.uw, 0x00000000ffffffff, 0xfbffffffffffffff, 0x0);
    TEST_IMM_OP(136, slli.uw, 0x00000000ffffffff, 0xf7ffffffffffffff, 0x0);
    TEST_IMM_OP(137, slli.uw, 0x00000000ffffffff, 0xefffffffffffffff, 0x0);
    TEST_IMM_OP(138, slli.uw, 0x00000000ffffffff, 0xdfffffffffffffff, 0x0);
    TEST_IMM_OP(139, slli.uw, 0x00000000ffffffff, 0xbfffffffffffffff, 0x0);
    TEST_IMM_OP(140, slli.uw, 0x00000000ffffffff, 0x7fffffffffffffff, 0x0);
    TEST_IMM_OP(141, slli.uw, 0x00000000ffffffff, 0xffffffffffffffff, 0x0);
    TEST_IMM_OP(142, slli.uw, 0x0000000000000001, 0x1, 0x0);
    TEST_IMM_OP(143, slli.uw, 0x0000000000000002, 0x2, 0x0);
    TEST_IMM_OP(144, slli.uw, 0x0000000000000004, 0x4, 0x0);
    TEST_IMM_OP(145, slli.uw, 0x0000000000000008, 0x8, 0x0);
    TEST_IMM_OP(146, slli.uw, 0x0000000000000010, 0x10, 0x0);
    TEST_IMM_OP(147, slli.uw, 0x0000000000000020, 0x20, 0x0);
    TEST_IMM_OP(148, slli.uw, 0x0000000000000040, 0x40, 0x0);
    TEST_IMM_OP(149, slli.uw, 0x0000000000000080, 0x80, 0x0);
    TEST_IMM_OP(150, slli.uw, 0x0000000000000100, 0x100, 0x0);
    TEST_IMM_OP(151, slli.uw, 0x0000000000000200, 0x200, 0x0);
    TEST_IMM_OP(152, slli.uw, 0x0000000000000400, 0x400, 0x0);
    TEST_IMM_OP(153, slli.uw, 0x0000000000000800, 0x800, 0x0);
    TEST_IMM_OP(154, slli.uw, 0x0000000000001000, 0x1000, 0x0);
    TEST_IMM_OP(155, slli.uw, 0x0000000000002000, 0x2000, 0x0);
    TEST_IMM_OP(156, slli.uw, 0x0000000000004000, 0x4000, 0x0);
    TEST_IMM_OP(157, slli.uw, 0x0000000000008000, 0x8000, 0x0);
    TEST_IMM_OP(158, slli.uw, 0x0000000000010000, 0x10000, 0x0);
    TEST_IMM_OP(159, slli.uw, 0x0000000000020000, 0x20000, 0x0);
    TEST_IMM_OP(160, slli.uw, 0x0000000000040000, 0x40000, 0x0);
    TEST_IMM_OP(161, slli.uw, 0x0000000000080000, 0x80000, 0x0);
    TEST_IMM_OP(162, slli.uw, 0x0000000000100000, 0x100000, 0x0);
    TEST_IMM_OP(163, slli.uw, 0x0000000000200000, 0x200000, 0x0);
    TEST_IMM_OP(164, slli.uw, 0x0000000000400000, 0x400000, 0x0);
    TEST_IMM_OP(165, slli.uw, 0x0000000000800000, 0x800000, 0x0);
    TEST_IMM_OP(166, slli.uw, 0x0000000001000000, 0x1000000, 0x0);
    TEST_IMM_OP(167, slli.uw, 0x0000000002000000, 0x2000000, 0x0);
    TEST_IMM_OP(168, slli.uw, 0x0000000004000000, 0x4000000, 0x0);
    TEST_IMM_OP(169, slli.uw, 0x0000000008000000, 0x8000000, 0x0);
    TEST_IMM_OP(170, slli.uw, 0x0000000010000000, 0x10000000, 0x0);
    TEST_IMM_OP(171, slli.uw, 0x0000000020000000, 0x20000000, 0x0);
    TEST_IMM_OP(172, slli.uw, 0x0000000040000000, 0x40000000, 0x0);
    TEST_IMM_OP(173, slli.uw, 0x0000000080000000, 0x80000000, 0x0);
    TEST_IMM_OP(174, slli.uw, 0x0000000000000000, 0x100000000, 0x0);
    TEST_IMM_OP(175, slli.uw, 0x0000000000000000, 0x200000000, 0x0);
    TEST_IMM_OP(176, slli.uw, 0x0000000000000000, 0x400000000, 0x0);
    TEST_IMM_OP(177, slli.uw, 0x0000000000000000, 0x800000000, 0x0);
    TEST_IMM_OP(178, slli.uw, 0x0000000000000000, 0x1000000000, 0x0);
    TEST_IMM_OP(179, slli.uw, 0x0000000000000000, 0x2000000000, 0x0);
    TEST_IMM_OP(180, slli.uw, 0x0000000000000000, 0x4000000000, 0x0);
    TEST_IMM_OP(181, slli.uw, 0x0000000000000000, 0x8000000000, 0x0);
    TEST_IMM_OP(182, slli.uw, 0x0000000000000000, 0x10000000000, 0x0);
    TEST_IMM_OP(183, slli.uw, 0x0000000000000000, 0x20000000000, 0x0);
    TEST_IMM_OP(184, slli.uw, 0x0000000000000000, 0x40000000000, 0x0);
    TEST_IMM_OP(185, slli.uw, 0x0000000000000000, 0x80000000000, 0x0);
    TEST_IMM_OP(186, slli.uw, 0x0000000000000000, 0x100000000000, 0x0);
    TEST_IMM_OP(187, slli.uw, 0x0000000000000000, 0x200000000000, 0x0);
    TEST_IMM_OP(188, slli.uw, 0x0000000000000000, 0x400000000000, 0x0);
    TEST_IMM_OP(189, slli.uw, 0x0000000000000000, 0x800000000000, 0x0);
    TEST_IMM_OP(190, slli.uw, 0x0000000000000000, 0x1000000000000, 0x0);
    TEST_IMM_OP(191, slli.uw, 0x0000000000000000, 0x2000000000000, 0x0);
    TEST_IMM_OP(192, slli.uw, 0x0000000000000000, 0x4000000000000, 0x0);
    TEST_IMM_OP(193, slli.uw, 0x0000000000000000, 0x8000000000000, 0x0);
    TEST_IMM_OP(194, slli.uw, 0x0000000000000000, 0x10000000000000, 0x0);
    TEST_IMM_OP(195, slli.uw, 0x0000000000000000, 0x20000000000000, 0x0);
    TEST_IMM_OP(196, slli.uw, 0x0000000000000000, 0x40000000000000, 0x0);
    TEST_IMM_OP(197, slli.uw, 0x0000000000000000, 0x80000000000000, 0x0);
    TEST_IMM_OP(198, slli.uw, 0x0000000000000000, 0x100000000000000, 0x0);
    TEST_IMM_OP(199, slli.uw, 0x0000000000000000, 0x200000000000000, 0x0);
    TEST_IMM_OP(200, slli.uw, 0x0000000000000000, 0x400000000000000, 0x0);
    TEST_IMM_OP(201, slli.uw, 0x0000000000000000, 0x800000000000000, 0x0);
    TEST_IMM_OP(202, slli.uw, 0x0000000000000000, 0x1000000000000000, 0x0);
    TEST_IMM_OP(203, slli.uw, 0x0000000000000000, 0x2000000000000000, 0x0);
    TEST_IMM_OP(204, slli.uw, 0x0000000000000000, 0x4000000000000000, 0x0);
    TEST_IMM_OP(205, slli.uw, 0x0000000000000000, 0x8000000000000000, 0x0);
    TEST_IMM_OP(206, slli.uw, 0x0000000000000000, 0x0, 0x0);
    TEST_IMM_OP(207, slli.uw, 0x00000000fffffffe, 0xfffffffffffffffe, 0x0);
    TEST_IMM_OP(208, slli.uw, 0x00000000fffffffd, 0xfffffffffffffffd, 0x0);
    TEST_IMM_OP(209, slli.uw, 0x00000000fffffffb, 0xfffffffffffffffb, 0x0);
    TEST_IMM_OP(210, slli.uw, 0x00000000fffffff7, 0xfffffffffffffff7, 0x0);
    TEST_IMM_OP(211, slli.uw, 0x00000000ffffffef, 0xffffffffffffffef, 0x0);
    TEST_IMM_OP(212, slli.uw, 0x00000000ffffffdf, 0xffffffffffffffdf, 0x0);
    TEST_IMM_OP(213, slli.uw, 0x00000000ffffffbf, 0xffffffffffffffbf, 0x0);
    TEST_IMM_OP(214, slli.uw, 0x00000000ffffff7f, 0xffffffffffffff7f, 0x0);
    TEST_IMM_OP(215, slli.uw, 0x00000000fffffeff, 0xfffffffffffffeff, 0x0);
    TEST_IMM_OP(216, slli.uw, 0x00000000fffffdff, 0xfffffffffffffdff, 0x0);
    TEST_IMM_OP(217, slli.uw, 0x00000000fffffbff, 0xfffffffffffffbff, 0x0);
    TEST_IMM_OP(218, slli.uw, 0x00000000fffff7ff, 0xfffffffffffff7ff, 0x0);
    TEST_IMM_OP(219, slli.uw, 0x00000000ffffefff, 0xffffffffffffefff, 0x0);
    TEST_IMM_OP(220, slli.uw, 0x00000000ffffdfff, 0xffffffffffffdfff, 0x0);
    TEST_IMM_OP(221, slli.uw, 0x00000000ffffbfff, 0xffffffffffffbfff, 0x0);
    TEST_IMM_OP(222, slli.uw, 0x00000000ffff7fff, 0xffffffffffff7fff, 0x0);
    TEST_IMM_OP(223, slli.uw, 0x00000000fffeffff, 0xfffffffffffeffff, 0x0);
    TEST_IMM_OP(224, slli.uw, 0x00000000fffdffff, 0xfffffffffffdffff, 0x0);
    TEST_IMM_OP(225, slli.uw, 0x00000000fffbffff, 0xfffffffffffbffff, 0x0);
    TEST_IMM_OP(226, slli.uw, 0x00000000fff7ffff, 0xfffffffffff7ffff, 0x0);
    TEST_IMM_OP(227, slli.uw, 0x00000000ffefffff, 0xffffffffffefffff, 0x0);
    TEST_IMM_OP(228, slli.uw, 0x00000000ffdfffff, 0xffffffffffdfffff, 0x0);
    TEST_IMM_OP(229, slli.uw, 0x00000000ffbfffff, 0xffffffffffbfffff, 0x0);
    TEST_IMM_OP(230, slli.uw, 0x00000000ff7fffff, 0xffffffffff7fffff, 0x0);
    TEST_IMM_OP(231, slli.uw, 0x00000000feffffff, 0xfffffffffeffffff, 0x0);
    TEST_IMM_OP(232, slli.uw, 0x00000000fdffffff, 0xfffffffffdffffff, 0x0);
    TEST_IMM_OP(233, slli.uw, 0x00000000fbffffff, 0xfffffffffbffffff, 0x0);
    TEST_IMM_OP(234, slli.uw, 0x00000000f7ffffff, 0xfffffffff7ffffff, 0x0);
    TEST_IMM_OP(235, slli.uw, 0x00000000efffffff, 0xffffffffefffffff, 0x0);
    TEST_IMM_OP(236, slli.uw, 0x00000000dfffffff, 0xffffffffdfffffff, 0x0);
    TEST_IMM_OP(237, slli.uw, 0x00000000bfffffff, 0xffffffffbfffffff, 0x0);
    TEST_IMM_OP(238, slli.uw, 0x000000007fffffff, 0xffffffff7fffffff, 0x0);
    TEST_IMM_OP(239, slli.uw, 0x00000000ffffffff, 0xfffffffeffffffff, 0x0);
    TEST_IMM_OP(240, slli.uw, 0x00000000ffffffff, 0xfffffffdffffffff, 0x0);
    TEST_IMM_OP(241, slli.uw, 0x00000000ffffffff, 0xfffffffbffffffff, 0x0);
    TEST_IMM_OP(242, slli.uw, 0x00000000ffffffff, 0xfffffff7ffffffff, 0x0);
    TEST_IMM_OP(243, slli.uw, 0x00000000ffffffff, 0xffffffefffffffff, 0x0);
    TEST_IMM_OP(244, slli.uw, 0x00000000ffffffff, 0xffffffdfffffffff, 0x0);
    TEST_IMM_OP(245, slli.uw, 0x00000000ffffffff, 0xffffffbfffffffff, 0x0);
    TEST_IMM_OP(246, slli.uw, 0x00000000ffffffff, 0xffffff7fffffffff, 0x0);
    TEST_IMM_OP(247, slli.uw, 0x00000000ffffffff, 0xfffffeffffffffff, 0x0);
    TEST_IMM_OP(248, slli.uw, 0x00000000ffffffff, 0xfffffdffffffffff, 0x0);
    TEST_IMM_OP(249, slli.uw, 0x00000000ffffffff, 0xfffffbffffffffff, 0x0);
    TEST_IMM_OP(250, slli.uw, 0x00000000ffffffff, 0xfffff7ffffffffff, 0x0);
    TEST_IMM_OP(251, slli.uw, 0x00000000ffffffff, 0xffffefffffffffff, 0x0);
    TEST_IMM_OP(252, slli.uw, 0x00000000ffffffff, 0xffffdfffffffffff, 0x0);
    TEST_IMM_OP(253, slli.uw, 0x00000000ffffffff, 0xffffbfffffffffff, 0x0);
    TEST_IMM_OP(254, slli.uw, 0x00000000ffffffff, 0xffff7fffffffffff, 0x0);
    TEST_IMM_OP(255, slli.uw, 0x00000000ffffffff, 0xfffeffffffffffff, 0x0);
    TEST_IMM_OP(256, slli.uw, 0x00000000ffffffff, 0xfffdffffffffffff, 0x0);
    TEST_IMM_OP(257, slli.uw, 0x00000000ffffffff, 0xfffbffffffffffff, 0x0);
    TEST_IMM_OP(258, slli.uw, 0x00000000ffffffff, 0xfff7ffffffffffff, 0x0);
    TEST_IMM_OP(259, slli.uw, 0x00000000ffffffff, 0xffefffffffffffff, 0x0);
    TEST_IMM_OP(260, slli.uw, 0x00000000ffffffff, 0xffdfffffffffffff, 0x0);
    TEST_IMM_OP(261, slli.uw, 0x00000000ffffffff, 0xffbfffffffffffff, 0x0);
    TEST_IMM_OP(262, slli.uw, 0x000000ffffffff00, 0xff7fffffffffffff, 0x8);
    TEST_IMM_OP(263, slli.uw, 0x0000000ffffffff0, 0xfeffffffffffffff, 0x4);
    TEST_IMM_OP(264, slli.uw, 0x00000003fffffffc, 0xfdffffffffffffff, 0x2);
    TEST_IMM_OP(265, slli.uw, 0x00000001fffffffe, 0xfbffffffffffffff, 0x1);
    TEST_IMM_OP(266, slli.uw, 0x00000007fffffff8, 0xf7ffffffffffffff, 0x3);
    TEST_IMM_OP(267, slli.uw, 0x07fffffff8000000, 0xefffffffffffffff, 0x1b);
    TEST_IMM_OP(268, slli.uw, 0x00000000ffffffff, 0xdfffffffffffffff, 0x0);
    TEST_IMM_OP(269, slli.uw, 0x00000007fffffff8, 0xbfffffffffffffff, 0x3);
    TEST_IMM_OP(270, slli.uw, 0x00007fffffff8000, 0x7fffffffffffffff, 0xf);
    TEST_IMM_OP(271, slli.uw, 0x00007fffffff8000, 0xffffffffffffffff, 0xf);

TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

