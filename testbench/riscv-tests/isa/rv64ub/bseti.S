# See LICENSE for license details.

#*****************************************************************************
# bseti.S
#-----------------------------------------------------------------------------
#
# Test bseti instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_IMM_OP(2, bseti, 0x10fd3dedadea519d, 0x10fd3dedadea5195, 0x3);
    TEST_IMM_OP(3, bseti, 0xbd295ce2daffbec1, 0xbd295ce2d2ffbec1, 0x1b);
    TEST_IMM_OP(4, bseti, 0xc9649f05a8e1a8bb, 0xc9649f05a8e1a8bb, 0x0);
    TEST_IMM_OP(5, bseti, 0x3541291848c99fcb, 0x3541291848c99fcb, 0x3);
    TEST_IMM_OP(6, bseti, 0x10a24740461dd24f, 0x10a24740461d524f, 0xf);
    TEST_IMM_OP(7, bseti, 0x546b0e54528a90af, 0x546b0e54528a10af, 0xf);
    TEST_IMM_OP(8, bseti, 0x73a92fd4e19bfbc3, 0x73a92fd4e19bfbc3, 0xb);
    TEST_IMM_OP(9, bseti, 0x82f6747f787af2c0, 0x82f6747f707af2c0, 0x1b);
    TEST_IMM_OP(10, bseti, 0xf5adb41aa47d105b, 0xf5adb41aa47d105b, 0x1);
    TEST_IMM_OP(11, bseti, 0xdf7f3844123bcc23, 0xdf7f3844121bcc23, 0x15);
    TEST_IMM_OP(12, bseti, 0x0000000080000001, 0x1, 0x1f);
    TEST_IMM_OP(13, bseti, 0x0000000000008002, 0x2, 0xf);
    TEST_IMM_OP(14, bseti, 0x0000000000800004, 0x4, 0x17);
    TEST_IMM_OP(15, bseti, 0x0000000008000008, 0x8, 0x1b);
    TEST_IMM_OP(16, bseti, 0x0000000020000010, 0x10, 0x1d);
    TEST_IMM_OP(17, bseti, 0x0000000040000020, 0x20, 0x1e);
    TEST_IMM_OP(18, bseti, 0x0000000000000041, 0x40, 0x0);
    TEST_IMM_OP(19, bseti, 0x0000000000010080, 0x80, 0x10);
    TEST_IMM_OP(20, bseti, 0x0000000000000100, 0x100, 0x8);
    TEST_IMM_OP(21, bseti, 0x0000000000000210, 0x200, 0x4);
    TEST_IMM_OP(22, bseti, 0x0000000000000404, 0x400, 0x2);
    TEST_IMM_OP(23, bseti, 0x0000000000000802, 0x800, 0x1);
    TEST_IMM_OP(24, bseti, 0x0000000000001008, 0x1000, 0x3);
    TEST_IMM_OP(25, bseti, 0x0000000008002000, 0x2000, 0x1b);
    TEST_IMM_OP(26, bseti, 0x0000000000004001, 0x4000, 0x0);
    TEST_IMM_OP(27, bseti, 0x0000000000008008, 0x8000, 0x3);
    TEST_IMM_OP(28, bseti, 0x0000000000018000, 0x10000, 0xf);
    TEST_IMM_OP(29, bseti, 0x0000000000028000, 0x20000, 0xf);
    TEST_IMM_OP(30, bseti, 0x0000000000040800, 0x40000, 0xb);
    TEST_IMM_OP(31, bseti, 0x0000000008080000, 0x80000, 0x1b);
    TEST_IMM_OP(32, bseti, 0x0000000000100002, 0x100000, 0x1);
    TEST_IMM_OP(33, bseti, 0x0000000000200000, 0x200000, 0x15);
    TEST_IMM_OP(34, bseti, 0x0000000080400000, 0x400000, 0x1f);
    TEST_IMM_OP(35, bseti, 0x0000000000808000, 0x800000, 0xf);
    TEST_IMM_OP(36, bseti, 0x0000000001800000, 0x1000000, 0x17);
    TEST_IMM_OP(37, bseti, 0x000000000a000000, 0x2000000, 0x1b);
    TEST_IMM_OP(38, bseti, 0x0000000024000000, 0x4000000, 0x1d);
    TEST_IMM_OP(39, bseti, 0x0000000048000000, 0x8000000, 0x1e);
    TEST_IMM_OP(40, bseti, 0x0000000010000001, 0x10000000, 0x0);
    TEST_IMM_OP(41, bseti, 0x0000000020010000, 0x20000000, 0x10);
    TEST_IMM_OP(42, bseti, 0x0000000040000100, 0x40000000, 0x8);
    TEST_IMM_OP(43, bseti, 0x0000000080000010, 0x80000000, 0x4);
    TEST_IMM_OP(44, bseti, 0x0000000100000004, 0x100000000, 0x2);
    TEST_IMM_OP(45, bseti, 0x0000000200000002, 0x200000000, 0x1);
    TEST_IMM_OP(46, bseti, 0x0000000400000008, 0x400000000, 0x3);
    TEST_IMM_OP(47, bseti, 0x0000000808000000, 0x800000000, 0x1b);
    TEST_IMM_OP(48, bseti, 0x0000001000000001, 0x1000000000, 0x0);
    TEST_IMM_OP(49, bseti, 0x0000002000000008, 0x2000000000, 0x3);
    TEST_IMM_OP(50, bseti, 0x0000004000008000, 0x4000000000, 0xf);
    TEST_IMM_OP(51, bseti, 0x0000008000008000, 0x8000000000, 0xf);
    TEST_IMM_OP(52, bseti, 0x0000010000000800, 0x10000000000, 0xb);
    TEST_IMM_OP(53, bseti, 0x0000020008000000, 0x20000000000, 0x1b);
    TEST_IMM_OP(54, bseti, 0x0000040000000002, 0x40000000000, 0x1);
    TEST_IMM_OP(55, bseti, 0x0000080000200000, 0x80000000000, 0x15);
    TEST_IMM_OP(56, bseti, 0x0000100080000000, 0x100000000000, 0x1f);
    TEST_IMM_OP(57, bseti, 0x0000200000008000, 0x200000000000, 0xf);
    TEST_IMM_OP(58, bseti, 0x0000400000800000, 0x400000000000, 0x17);
    TEST_IMM_OP(59, bseti, 0x0000800008000000, 0x800000000000, 0x1b);
    TEST_IMM_OP(60, bseti, 0x0001000020000000, 0x1000000000000, 0x1d);
    TEST_IMM_OP(61, bseti, 0x0002000040000000, 0x2000000000000, 0x1e);
    TEST_IMM_OP(62, bseti, 0x0004000000000001, 0x4000000000000, 0x0);
    TEST_IMM_OP(63, bseti, 0x0008000000010000, 0x8000000000000, 0x10);
    TEST_IMM_OP(64, bseti, 0x0010000000000100, 0x10000000000000, 0x8);
    TEST_IMM_OP(65, bseti, 0x0020000000000010, 0x20000000000000, 0x4);
    TEST_IMM_OP(66, bseti, 0x0040000000000004, 0x40000000000000, 0x2);
    TEST_IMM_OP(67, bseti, 0x0080000000000002, 0x80000000000000, 0x1);
    TEST_IMM_OP(68, bseti, 0x0100000000000008, 0x100000000000000, 0x3);
    TEST_IMM_OP(69, bseti, 0x0200000008000000, 0x200000000000000, 0x1b);
    TEST_IMM_OP(70, bseti, 0x0400000000000001, 0x400000000000000, 0x0);
    TEST_IMM_OP(71, bseti, 0x0800000000000008, 0x800000000000000, 0x3);
    TEST_IMM_OP(72, bseti, 0x1000000000008000, 0x1000000000000000, 0xf);
    TEST_IMM_OP(73, bseti, 0x2000000000008000, 0x2000000000000000, 0xf);
    TEST_IMM_OP(74, bseti, 0x4000000000000800, 0x4000000000000000, 0xb);
    TEST_IMM_OP(75, bseti, 0x8000000008000000, 0x8000000000000000, 0x1b);
    TEST_IMM_OP(76, bseti, 0x0000000000000002, 0x0, 0x1);
    TEST_IMM_OP(77, bseti, 0xfffffffffffffffe, 0xfffffffffffffffe, 0x15);
    TEST_IMM_OP(78, bseti, 0xfffffffffffffffd, 0xfffffffffffffffd, 0x1f);
    TEST_IMM_OP(79, bseti, 0xfffffffffffffffb, 0xfffffffffffffffb, 0xf);
    TEST_IMM_OP(80, bseti, 0xfffffffffffffff7, 0xfffffffffffffff7, 0x17);
    TEST_IMM_OP(81, bseti, 0xffffffffffffffef, 0xffffffffffffffef, 0x1b);
    TEST_IMM_OP(82, bseti, 0xffffffffffffffdf, 0xffffffffffffffdf, 0x1d);
    TEST_IMM_OP(83, bseti, 0xffffffffffffffbf, 0xffffffffffffffbf, 0x1e);
    TEST_IMM_OP(84, bseti, 0xffffffffffffff7f, 0xffffffffffffff7f, 0x0);
    TEST_IMM_OP(85, bseti, 0xfffffffffffffeff, 0xfffffffffffffeff, 0x10);
    TEST_IMM_OP(86, bseti, 0xfffffffffffffdff, 0xfffffffffffffdff, 0x8);
    TEST_IMM_OP(87, bseti, 0xfffffffffffffbff, 0xfffffffffffffbff, 0x4);
    TEST_IMM_OP(88, bseti, 0xfffffffffffff7ff, 0xfffffffffffff7ff, 0x2);
    TEST_IMM_OP(89, bseti, 0xffffffffffffefff, 0xffffffffffffefff, 0x1);
    TEST_IMM_OP(90, bseti, 0xffffffffffffdfff, 0xffffffffffffdfff, 0x3);
    TEST_IMM_OP(91, bseti, 0xffffffffffffbfff, 0xffffffffffffbfff, 0x1b);
    TEST_IMM_OP(92, bseti, 0xffffffffffff7fff, 0xffffffffffff7fff, 0x0);
    TEST_IMM_OP(93, bseti, 0xfffffffffffeffff, 0xfffffffffffeffff, 0x3);
    TEST_IMM_OP(94, bseti, 0xfffffffffffdffff, 0xfffffffffffdffff, 0xf);
    TEST_IMM_OP(95, bseti, 0xfffffffffffbffff, 0xfffffffffffbffff, 0xf);
    TEST_IMM_OP(96, bseti, 0xfffffffffff7ffff, 0xfffffffffff7ffff, 0xb);
    TEST_IMM_OP(97, bseti, 0xffffffffffefffff, 0xffffffffffefffff, 0x1b);
    TEST_IMM_OP(98, bseti, 0xffffffffffdfffff, 0xffffffffffdfffff, 0x1);
    TEST_IMM_OP(99, bseti, 0xffffffffffbfffff, 0xffffffffffbfffff, 0x15);
    TEST_IMM_OP(100, bseti, 0xffffffffff7fffff, 0xffffffffff7fffff, 0x1f);
    TEST_IMM_OP(101, bseti, 0xfffffffffeffffff, 0xfffffffffeffffff, 0xf);
    TEST_IMM_OP(102, bseti, 0xfffffffffdffffff, 0xfffffffffdffffff, 0x17);
    TEST_IMM_OP(103, bseti, 0xfffffffffbffffff, 0xfffffffffbffffff, 0x1b);
    TEST_IMM_OP(104, bseti, 0xfffffffff7ffffff, 0xfffffffff7ffffff, 0x1d);
    TEST_IMM_OP(105, bseti, 0xffffffffefffffff, 0xffffffffefffffff, 0x1e);
    TEST_IMM_OP(106, bseti, 0xffffffffdfffffff, 0xffffffffdfffffff, 0x0);
    TEST_IMM_OP(107, bseti, 0xffffffffbfffffff, 0xffffffffbfffffff, 0x10);
    TEST_IMM_OP(108, bseti, 0xffffffff7fffffff, 0xffffffff7fffffff, 0x8);
    TEST_IMM_OP(109, bseti, 0xfffffffeffffffff, 0xfffffffeffffffff, 0x4);
    TEST_IMM_OP(110, bseti, 0xfffffffdffffffff, 0xfffffffdffffffff, 0x2);
    TEST_IMM_OP(111, bseti, 0xfffffffbffffffff, 0xfffffffbffffffff, 0x1);
    TEST_IMM_OP(112, bseti, 0xfffffff7ffffffff, 0xfffffff7ffffffff, 0x3);
    TEST_IMM_OP(113, bseti, 0xffffffefffffffff, 0xffffffefffffffff, 0x1b);
    TEST_IMM_OP(114, bseti, 0xffffffdfffffffff, 0xffffffdfffffffff, 0x0);
    TEST_IMM_OP(115, bseti, 0xffffffbfffffffff, 0xffffffbfffffffff, 0x3);
    TEST_IMM_OP(116, bseti, 0xffffff7fffffffff, 0xffffff7fffffffff, 0xf);
    TEST_IMM_OP(117, bseti, 0xfffffeffffffffff, 0xfffffeffffffffff, 0xf);
    TEST_IMM_OP(118, bseti, 0xfffffdffffffffff, 0xfffffdffffffffff, 0xb);
    TEST_IMM_OP(119, bseti, 0xfffffbffffffffff, 0xfffffbffffffffff, 0x1b);
    TEST_IMM_OP(120, bseti, 0xfffff7ffffffffff, 0xfffff7ffffffffff, 0x1);
    TEST_IMM_OP(121, bseti, 0xffffefffffffffff, 0xffffefffffffffff, 0x15);
    TEST_IMM_OP(122, bseti, 0xffffdfffffffffff, 0xffffdfffffffffff, 0x1f);
    TEST_IMM_OP(123, bseti, 0xffffbfffffffffff, 0xffffbfffffffffff, 0xf);
    TEST_IMM_OP(124, bseti, 0xffff7fffffffffff, 0xffff7fffffffffff, 0x17);
    TEST_IMM_OP(125, bseti, 0xfffeffffffffffff, 0xfffeffffffffffff, 0x1b);
    TEST_IMM_OP(126, bseti, 0xfffdffffffffffff, 0xfffdffffffffffff, 0x1d);
    TEST_IMM_OP(127, bseti, 0xfffbffffffffffff, 0xfffbffffffffffff, 0x1e);
    TEST_IMM_OP(128, bseti, 0xfff7ffffffffffff, 0xfff7ffffffffffff, 0x0);
    TEST_IMM_OP(129, bseti, 0xffefffffffffffff, 0xffefffffffffffff, 0x10);
    TEST_IMM_OP(130, bseti, 0xffdfffffffffffff, 0xffdfffffffffffff, 0x8);
    TEST_IMM_OP(131, bseti, 0xffbfffffffffffff, 0xffbfffffffffffff, 0x4);
    TEST_IMM_OP(132, bseti, 0xff7fffffffffffff, 0xff7fffffffffffff, 0x0);
    TEST_IMM_OP(133, bseti, 0xfeffffffffffffff, 0xfeffffffffffffff, 0x0);
    TEST_IMM_OP(134, bseti, 0xfdffffffffffffff, 0xfdffffffffffffff, 0x0);
    TEST_IMM_OP(135, bseti, 0xfbffffffffffffff, 0xfbffffffffffffff, 0x0);
    TEST_IMM_OP(136, bseti, 0xf7ffffffffffffff, 0xf7ffffffffffffff, 0x0);
    TEST_IMM_OP(137, bseti, 0xefffffffffffffff, 0xefffffffffffffff, 0x0);
    TEST_IMM_OP(138, bseti, 0xdfffffffffffffff, 0xdfffffffffffffff, 0x0);
    TEST_IMM_OP(139, bseti, 0xbfffffffffffffff, 0xbfffffffffffffff, 0x0);
    TEST_IMM_OP(140, bseti, 0x7fffffffffffffff, 0x7fffffffffffffff, 0x0);
    TEST_IMM_OP(141, bseti, 0xffffffffffffffff, 0xffffffffffffffff, 0x0);
    TEST_IMM_OP(142, bseti, 0x0000000000000001, 0x1, 0x0);
    TEST_IMM_OP(143, bseti, 0x0000000000000003, 0x2, 0x0);
    TEST_IMM_OP(144, bseti, 0x0000000000000005, 0x4, 0x0);
    TEST_IMM_OP(145, bseti, 0x0000000000000009, 0x8, 0x0);
    TEST_IMM_OP(146, bseti, 0x0000000000000011, 0x10, 0x0);
    TEST_IMM_OP(147, bseti, 0x0000000000000021, 0x20, 0x0);
    TEST_IMM_OP(148, bseti, 0x0000000000000041, 0x40, 0x0);
    TEST_IMM_OP(149, bseti, 0x0000000000000081, 0x80, 0x0);
    TEST_IMM_OP(150, bseti, 0x0000000000000101, 0x100, 0x0);
    TEST_IMM_OP(151, bseti, 0x0000000000000201, 0x200, 0x0);
    TEST_IMM_OP(152, bseti, 0x0000000000000401, 0x400, 0x0);
    TEST_IMM_OP(153, bseti, 0x0000000000000801, 0x800, 0x0);
    TEST_IMM_OP(154, bseti, 0x0000000000001001, 0x1000, 0x0);
    TEST_IMM_OP(155, bseti, 0x0000000000002001, 0x2000, 0x0);
    TEST_IMM_OP(156, bseti, 0x0000000000004001, 0x4000, 0x0);
    TEST_IMM_OP(157, bseti, 0x0000000000008001, 0x8000, 0x0);
    TEST_IMM_OP(158, bseti, 0x0000000000010001, 0x10000, 0x0);
    TEST_IMM_OP(159, bseti, 0x0000000000020001, 0x20000, 0x0);
    TEST_IMM_OP(160, bseti, 0x0000000000040001, 0x40000, 0x0);
    TEST_IMM_OP(161, bseti, 0x0000000000080001, 0x80000, 0x0);
    TEST_IMM_OP(162, bseti, 0x0000000000100001, 0x100000, 0x0);
    TEST_IMM_OP(163, bseti, 0x0000000000200001, 0x200000, 0x0);
    TEST_IMM_OP(164, bseti, 0x0000000000400001, 0x400000, 0x0);
    TEST_IMM_OP(165, bseti, 0x0000000000800001, 0x800000, 0x0);
    TEST_IMM_OP(166, bseti, 0x0000000001000001, 0x1000000, 0x0);
    TEST_IMM_OP(167, bseti, 0x0000000002000001, 0x2000000, 0x0);
    TEST_IMM_OP(168, bseti, 0x0000000004000001, 0x4000000, 0x0);
    TEST_IMM_OP(169, bseti, 0x0000000008000001, 0x8000000, 0x0);
    TEST_IMM_OP(170, bseti, 0x0000000010000001, 0x10000000, 0x0);
    TEST_IMM_OP(171, bseti, 0x0000000020000001, 0x20000000, 0x0);
    TEST_IMM_OP(172, bseti, 0x0000000040000001, 0x40000000, 0x0);
    TEST_IMM_OP(173, bseti, 0x0000000080000001, 0x80000000, 0x0);
    TEST_IMM_OP(174, bseti, 0x0000000100000001, 0x100000000, 0x0);
    TEST_IMM_OP(175, bseti, 0x0000000200000001, 0x200000000, 0x0);
    TEST_IMM_OP(176, bseti, 0x0000000400000001, 0x400000000, 0x0);
    TEST_IMM_OP(177, bseti, 0x0000000800000001, 0x800000000, 0x0);
    TEST_IMM_OP(178, bseti, 0x0000001000000001, 0x1000000000, 0x0);
    TEST_IMM_OP(179, bseti, 0x0000002000000001, 0x2000000000, 0x0);
    TEST_IMM_OP(180, bseti, 0x0000004000000001, 0x4000000000, 0x0);
    TEST_IMM_OP(181, bseti, 0x0000008000000001, 0x8000000000, 0x0);
    TEST_IMM_OP(182, bseti, 0x0000010000000001, 0x10000000000, 0x0);
    TEST_IMM_OP(183, bseti, 0x0000020000000001, 0x20000000000, 0x0);
    TEST_IMM_OP(184, bseti, 0x0000040000000001, 0x40000000000, 0x0);
    TEST_IMM_OP(185, bseti, 0x0000080000000001, 0x80000000000, 0x0);
    TEST_IMM_OP(186, bseti, 0x0000100000000001, 0x100000000000, 0x0);
    TEST_IMM_OP(187, bseti, 0x0000200000000001, 0x200000000000, 0x0);
    TEST_IMM_OP(188, bseti, 0x0000400000000001, 0x400000000000, 0x0);
    TEST_IMM_OP(189, bseti, 0x0000800000000001, 0x800000000000, 0x0);
    TEST_IMM_OP(190, bseti, 0x0001000000000001, 0x1000000000000, 0x0);
    TEST_IMM_OP(191, bseti, 0x0002000000000001, 0x2000000000000, 0x0);
    TEST_IMM_OP(192, bseti, 0x0004000000000001, 0x4000000000000, 0x0);
    TEST_IMM_OP(193, bseti, 0x0008000000000001, 0x8000000000000, 0x0);
    TEST_IMM_OP(194, bseti, 0x0010000000000001, 0x10000000000000, 0x0);
    TEST_IMM_OP(195, bseti, 0x0020000000000001, 0x20000000000000, 0x0);
    TEST_IMM_OP(196, bseti, 0x0040000000000001, 0x40000000000000, 0x0);
    TEST_IMM_OP(197, bseti, 0x0080000000000001, 0x80000000000000, 0x0);
    TEST_IMM_OP(198, bseti, 0x0100000000000001, 0x100000000000000, 0x0);
    TEST_IMM_OP(199, bseti, 0x0200000000000001, 0x200000000000000, 0x0);
    TEST_IMM_OP(200, bseti, 0x0400000000000001, 0x400000000000000, 0x0);
    TEST_IMM_OP(201, bseti, 0x0800000000000001, 0x800000000000000, 0x0);
    TEST_IMM_OP(202, bseti, 0x1000000000000001, 0x1000000000000000, 0x0);
    TEST_IMM_OP(203, bseti, 0x2000000000000001, 0x2000000000000000, 0x0);
    TEST_IMM_OP(204, bseti, 0x4000000000000001, 0x4000000000000000, 0x0);
    TEST_IMM_OP(205, bseti, 0x8000000000000001, 0x8000000000000000, 0x0);
    TEST_IMM_OP(206, bseti, 0x0000000000000001, 0x0, 0x0);
    TEST_IMM_OP(207, bseti, 0xffffffffffffffff, 0xfffffffffffffffe, 0x0);
    TEST_IMM_OP(208, bseti, 0xfffffffffffffffd, 0xfffffffffffffffd, 0x0);
    TEST_IMM_OP(209, bseti, 0xfffffffffffffffb, 0xfffffffffffffffb, 0x0);
    TEST_IMM_OP(210, bseti, 0xfffffffffffffff7, 0xfffffffffffffff7, 0x0);
    TEST_IMM_OP(211, bseti, 0xffffffffffffffef, 0xffffffffffffffef, 0x0);
    TEST_IMM_OP(212, bseti, 0xffffffffffffffdf, 0xffffffffffffffdf, 0x0);
    TEST_IMM_OP(213, bseti, 0xffffffffffffffbf, 0xffffffffffffffbf, 0x0);
    TEST_IMM_OP(214, bseti, 0xffffffffffffff7f, 0xffffffffffffff7f, 0x0);
    TEST_IMM_OP(215, bseti, 0xfffffffffffffeff, 0xfffffffffffffeff, 0x0);
    TEST_IMM_OP(216, bseti, 0xfffffffffffffdff, 0xfffffffffffffdff, 0x0);
    TEST_IMM_OP(217, bseti, 0xfffffffffffffbff, 0xfffffffffffffbff, 0x0);
    TEST_IMM_OP(218, bseti, 0xfffffffffffff7ff, 0xfffffffffffff7ff, 0x0);
    TEST_IMM_OP(219, bseti, 0xffffffffffffefff, 0xffffffffffffefff, 0x0);
    TEST_IMM_OP(220, bseti, 0xffffffffffffdfff, 0xffffffffffffdfff, 0x0);
    TEST_IMM_OP(221, bseti, 0xffffffffffffbfff, 0xffffffffffffbfff, 0x0);
    TEST_IMM_OP(222, bseti, 0xffffffffffff7fff, 0xffffffffffff7fff, 0x0);
    TEST_IMM_OP(223, bseti, 0xfffffffffffeffff, 0xfffffffffffeffff, 0x0);
    TEST_IMM_OP(224, bseti, 0xfffffffffffdffff, 0xfffffffffffdffff, 0x0);
    TEST_IMM_OP(225, bseti, 0xfffffffffffbffff, 0xfffffffffffbffff, 0x0);
    TEST_IMM_OP(226, bseti, 0xfffffffffff7ffff, 0xfffffffffff7ffff, 0x0);
    TEST_IMM_OP(227, bseti, 0xffffffffffefffff, 0xffffffffffefffff, 0x0);
    TEST_IMM_OP(228, bseti, 0xffffffffffdfffff, 0xffffffffffdfffff, 0x0);
    TEST_IMM_OP(229, bseti, 0xffffffffffbfffff, 0xffffffffffbfffff, 0x0);
    TEST_IMM_OP(230, bseti, 0xffffffffff7fffff, 0xffffffffff7fffff, 0x0);
    TEST_IMM_OP(231, bseti, 0xfffffffffeffffff, 0xfffffffffeffffff, 0x0);
    TEST_IMM_OP(232, bseti, 0xfffffffffdffffff, 0xfffffffffdffffff, 0x0);
    TEST_IMM_OP(233, bseti, 0xfffffffffbffffff, 0xfffffffffbffffff, 0x0);
    TEST_IMM_OP(234, bseti, 0xfffffffff7ffffff, 0xfffffffff7ffffff, 0x0);
    TEST_IMM_OP(235, bseti, 0xffffffffefffffff, 0xffffffffefffffff, 0x0);
    TEST_IMM_OP(236, bseti, 0xffffffffdfffffff, 0xffffffffdfffffff, 0x0);
    TEST_IMM_OP(237, bseti, 0xffffffffbfffffff, 0xffffffffbfffffff, 0x0);
    TEST_IMM_OP(238, bseti, 0xffffffff7fffffff, 0xffffffff7fffffff, 0x0);
    TEST_IMM_OP(239, bseti, 0xfffffffeffffffff, 0xfffffffeffffffff, 0x0);
    TEST_IMM_OP(240, bseti, 0xfffffffdffffffff, 0xfffffffdffffffff, 0x0);
    TEST_IMM_OP(241, bseti, 0xfffffffbffffffff, 0xfffffffbffffffff, 0x0);
    TEST_IMM_OP(242, bseti, 0xfffffff7ffffffff, 0xfffffff7ffffffff, 0x0);
    TEST_IMM_OP(243, bseti, 0xffffffefffffffff, 0xffffffefffffffff, 0x0);
    TEST_IMM_OP(244, bseti, 0xffffffdfffffffff, 0xffffffdfffffffff, 0x0);
    TEST_IMM_OP(245, bseti, 0xffffffbfffffffff, 0xffffffbfffffffff, 0x0);
    TEST_IMM_OP(246, bseti, 0xffffff7fffffffff, 0xffffff7fffffffff, 0x0);
    TEST_IMM_OP(247, bseti, 0xfffffeffffffffff, 0xfffffeffffffffff, 0x0);
    TEST_IMM_OP(248, bseti, 0xfffffdffffffffff, 0xfffffdffffffffff, 0x0);
    TEST_IMM_OP(249, bseti, 0xfffffbffffffffff, 0xfffffbffffffffff, 0x0);
    TEST_IMM_OP(250, bseti, 0xfffff7ffffffffff, 0xfffff7ffffffffff, 0x0);
    TEST_IMM_OP(251, bseti, 0xffffefffffffffff, 0xffffefffffffffff, 0x0);
    TEST_IMM_OP(252, bseti, 0xffffdfffffffffff, 0xffffdfffffffffff, 0x0);
    TEST_IMM_OP(253, bseti, 0xffffbfffffffffff, 0xffffbfffffffffff, 0x0);
    TEST_IMM_OP(254, bseti, 0xffff7fffffffffff, 0xffff7fffffffffff, 0x0);
    TEST_IMM_OP(255, bseti, 0xfffeffffffffffff, 0xfffeffffffffffff, 0x0);
    TEST_IMM_OP(256, bseti, 0xfffdffffffffffff, 0xfffdffffffffffff, 0x0);
    TEST_IMM_OP(257, bseti, 0xfffbffffffffffff, 0xfffbffffffffffff, 0x0);
    TEST_IMM_OP(258, bseti, 0xfff7ffffffffffff, 0xfff7ffffffffffff, 0x0);
    TEST_IMM_OP(259, bseti, 0xffefffffffffffff, 0xffefffffffffffff, 0x0);
    TEST_IMM_OP(260, bseti, 0xffdfffffffffffff, 0xffdfffffffffffff, 0x0);
    TEST_IMM_OP(261, bseti, 0xffbfffffffffffff, 0xffbfffffffffffff, 0x0);
    TEST_IMM_OP(262, bseti, 0xff7fffffffffffff, 0xff7fffffffffffff, 0x8);
    TEST_IMM_OP(263, bseti, 0xfeffffffffffffff, 0xfeffffffffffffff, 0x4);
    TEST_IMM_OP(264, bseti, 0xfdffffffffffffff, 0xfdffffffffffffff, 0x2);
    TEST_IMM_OP(265, bseti, 0xfbffffffffffffff, 0xfbffffffffffffff, 0x1);
    TEST_IMM_OP(266, bseti, 0xf7ffffffffffffff, 0xf7ffffffffffffff, 0x3);
    TEST_IMM_OP(267, bseti, 0xefffffffffffffff, 0xefffffffffffffff, 0x1b);
    TEST_IMM_OP(268, bseti, 0xdfffffffffffffff, 0xdfffffffffffffff, 0x0);
    TEST_IMM_OP(269, bseti, 0xbfffffffffffffff, 0xbfffffffffffffff, 0x3);
    TEST_IMM_OP(270, bseti, 0x7fffffffffffffff, 0x7fffffffffffffff, 0xf);
    TEST_IMM_OP(271, bseti, 0xffffffffffffffff, 0xffffffffffffffff, 0xf);

TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

