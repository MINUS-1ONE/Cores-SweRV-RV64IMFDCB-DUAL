# See LICENSE for license details.

#*****************************************************************************
# bclr.S
#-----------------------------------------------------------------------------
#
# Test bclr instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_RR_OP(2, bclr, 0x10fd3de5adea5195, 0x10fd3dedadea5195, 0xdf7f3844121bcc23);
    TEST_RR_OP(3, bclr, 0xbd295ce2d2ffbec1, 0xbd295ce2d2ffbec1, 0xf5adb41aa47d105b);
    TEST_RR_OP(4, bclr, 0xc9649f05a8e1a8ba, 0xc9649f05a8e1a8bb, 0x82f6747f707af2c0);
    TEST_RR_OP(5, bclr, 0x3541291848c99fc3, 0x3541291848c99fcb, 0x73a92fd4e19bfbc3);
    TEST_RR_OP(6, bclr, 0x10a24740461d524f, 0x10a24740461d524f, 0x546b0e54528a10af);
    TEST_RR_OP(7, bclr, 0x546b0e54528a10af, 0x546b0e54528a10af, 0x10a24740461d524f);
    TEST_RR_OP(8, bclr, 0x73a92fd4e19bf3c3, 0x73a92fd4e19bfbc3, 0x3541291848c99fcb);
    TEST_RR_OP(9, bclr, 0x82f6747f707af2c0, 0x82f6747f707af2c0, 0xc9649f05a8e1a8bb);
    TEST_RR_OP(10, bclr, 0xf5adb41aa47d1059, 0xf5adb41aa47d105b, 0xbd295ce2d2ffbec1);
    TEST_RR_OP(11, bclr, 0xdf7f3844121bcc23, 0xdf7f3844121bcc23, 0x10fd3dedadea5195);
    TEST_RR_OP(12, bclr, 0x0000000000000001, 0x1, 0xffffffffffffffff);
    TEST_RR_OP(13, bclr, 0x0000000000000002, 0x2, 0x7fffffffffffffff);
    TEST_RR_OP(14, bclr, 0x0000000000000004, 0x4, 0xbfffffffffffffff);
    TEST_RR_OP(15, bclr, 0x0000000000000008, 0x8, 0xdfffffffffffffff);
    TEST_RR_OP(16, bclr, 0x0000000000000010, 0x10, 0xefffffffffffffff);
    TEST_RR_OP(17, bclr, 0x0000000000000020, 0x20, 0xf7ffffffffffffff);
    TEST_RR_OP(18, bclr, 0x0000000000000040, 0x40, 0xfbffffffffffffff);
    TEST_RR_OP(19, bclr, 0x0000000000000080, 0x80, 0xfdffffffffffffff);
    TEST_RR_OP(20, bclr, 0x0000000000000100, 0x100, 0xfeffffffffffffff);
    TEST_RR_OP(21, bclr, 0x0000000000000200, 0x200, 0xff7fffffffffffff);
    TEST_RR_OP(22, bclr, 0x0000000000000400, 0x400, 0xffbfffffffffffff);
    TEST_RR_OP(23, bclr, 0x0000000000000800, 0x800, 0xffdfffffffffffff);
    TEST_RR_OP(24, bclr, 0x0000000000001000, 0x1000, 0xffefffffffffffff);
    TEST_RR_OP(25, bclr, 0x0000000000002000, 0x2000, 0xfff7ffffffffffff);
    TEST_RR_OP(26, bclr, 0x0000000000004000, 0x4000, 0xfffbffffffffffff);
    TEST_RR_OP(27, bclr, 0x0000000000008000, 0x8000, 0xfffdffffffffffff);
    TEST_RR_OP(28, bclr, 0x0000000000010000, 0x10000, 0xfffeffffffffffff);
    TEST_RR_OP(29, bclr, 0x0000000000020000, 0x20000, 0xffff7fffffffffff);
    TEST_RR_OP(30, bclr, 0x0000000000040000, 0x40000, 0xffffbfffffffffff);
    TEST_RR_OP(31, bclr, 0x0000000000080000, 0x80000, 0xffffdfffffffffff);
    TEST_RR_OP(32, bclr, 0x0000000000100000, 0x100000, 0xffffefffffffffff);
    TEST_RR_OP(33, bclr, 0x0000000000200000, 0x200000, 0xfffff7ffffffffff);
    TEST_RR_OP(34, bclr, 0x0000000000400000, 0x400000, 0xfffffbffffffffff);
    TEST_RR_OP(35, bclr, 0x0000000000800000, 0x800000, 0xfffffdffffffffff);
    TEST_RR_OP(36, bclr, 0x0000000001000000, 0x1000000, 0xfffffeffffffffff);
    TEST_RR_OP(37, bclr, 0x0000000002000000, 0x2000000, 0xffffff7fffffffff);
    TEST_RR_OP(38, bclr, 0x0000000004000000, 0x4000000, 0xffffffbfffffffff);
    TEST_RR_OP(39, bclr, 0x0000000008000000, 0x8000000, 0xffffffdfffffffff);
    TEST_RR_OP(40, bclr, 0x0000000010000000, 0x10000000, 0xffffffefffffffff);
    TEST_RR_OP(41, bclr, 0x0000000020000000, 0x20000000, 0xfffffff7ffffffff);
    TEST_RR_OP(42, bclr, 0x0000000040000000, 0x40000000, 0xfffffffbffffffff);
    TEST_RR_OP(43, bclr, 0x0000000080000000, 0x80000000, 0xfffffffdffffffff);
    TEST_RR_OP(44, bclr, 0x0000000100000000, 0x100000000, 0xfffffffeffffffff);
    TEST_RR_OP(45, bclr, 0x0000000200000000, 0x200000000, 0xffffffff7fffffff);
    TEST_RR_OP(46, bclr, 0x0000000400000000, 0x400000000, 0xffffffffbfffffff);
    TEST_RR_OP(47, bclr, 0x0000000800000000, 0x800000000, 0xffffffffdfffffff);
    TEST_RR_OP(48, bclr, 0x0000001000000000, 0x1000000000, 0xffffffffefffffff);
    TEST_RR_OP(49, bclr, 0x0000002000000000, 0x2000000000, 0xfffffffff7ffffff);
    TEST_RR_OP(50, bclr, 0x0000004000000000, 0x4000000000, 0xfffffffffbffffff);
    TEST_RR_OP(51, bclr, 0x0000008000000000, 0x8000000000, 0xfffffffffdffffff);
    TEST_RR_OP(52, bclr, 0x0000010000000000, 0x10000000000, 0xfffffffffeffffff);
    TEST_RR_OP(53, bclr, 0x0000020000000000, 0x20000000000, 0xffffffffff7fffff);
    TEST_RR_OP(54, bclr, 0x0000040000000000, 0x40000000000, 0xffffffffffbfffff);
    TEST_RR_OP(55, bclr, 0x0000080000000000, 0x80000000000, 0xffffffffffdfffff);
    TEST_RR_OP(56, bclr, 0x0000100000000000, 0x100000000000, 0xffffffffffefffff);
    TEST_RR_OP(57, bclr, 0x0000200000000000, 0x200000000000, 0xfffffffffff7ffff);
    TEST_RR_OP(58, bclr, 0x0000400000000000, 0x400000000000, 0xfffffffffffbffff);
    TEST_RR_OP(59, bclr, 0x0000800000000000, 0x800000000000, 0xfffffffffffdffff);
    TEST_RR_OP(60, bclr, 0x0001000000000000, 0x1000000000000, 0xfffffffffffeffff);
    TEST_RR_OP(61, bclr, 0x0002000000000000, 0x2000000000000, 0xffffffffffff7fff);
    TEST_RR_OP(62, bclr, 0x0004000000000000, 0x4000000000000, 0xffffffffffffbfff);
    TEST_RR_OP(63, bclr, 0x0008000000000000, 0x8000000000000, 0xffffffffffffdfff);
    TEST_RR_OP(64, bclr, 0x0010000000000000, 0x10000000000000, 0xffffffffffffefff);
    TEST_RR_OP(65, bclr, 0x0020000000000000, 0x20000000000000, 0xfffffffffffff7ff);
    TEST_RR_OP(66, bclr, 0x0040000000000000, 0x40000000000000, 0xfffffffffffffbff);
    TEST_RR_OP(67, bclr, 0x0080000000000000, 0x80000000000000, 0xfffffffffffffdff);
    TEST_RR_OP(68, bclr, 0x0100000000000000, 0x100000000000000, 0xfffffffffffffeff);
    TEST_RR_OP(69, bclr, 0x0200000000000000, 0x200000000000000, 0xffffffffffffff7f);
    TEST_RR_OP(70, bclr, 0x0400000000000000, 0x400000000000000, 0xffffffffffffffbf);
    TEST_RR_OP(71, bclr, 0x0800000000000000, 0x800000000000000, 0xffffffffffffffdf);
    TEST_RR_OP(72, bclr, 0x1000000000000000, 0x1000000000000000, 0xffffffffffffffef);
    TEST_RR_OP(73, bclr, 0x2000000000000000, 0x2000000000000000, 0xfffffffffffffff7);
    TEST_RR_OP(74, bclr, 0x4000000000000000, 0x4000000000000000, 0xfffffffffffffffb);
    TEST_RR_OP(75, bclr, 0x8000000000000000, 0x8000000000000000, 0xfffffffffffffffd);
    TEST_RR_OP(76, bclr, 0x0000000000000000, 0x0, 0xfffffffffffffffe);
    TEST_RR_OP(77, bclr, 0xfffffffffffffffe, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(78, bclr, 0xfffffffffffffffc, 0xfffffffffffffffd, 0x8000000000000000);
    TEST_RR_OP(79, bclr, 0xfffffffffffffffa, 0xfffffffffffffffb, 0x4000000000000000);
    TEST_RR_OP(80, bclr, 0xfffffffffffffff6, 0xfffffffffffffff7, 0x2000000000000000);
    TEST_RR_OP(81, bclr, 0xffffffffffffffee, 0xffffffffffffffef, 0x1000000000000000);
    TEST_RR_OP(82, bclr, 0xffffffffffffffde, 0xffffffffffffffdf, 0x800000000000000);
    TEST_RR_OP(83, bclr, 0xffffffffffffffbe, 0xffffffffffffffbf, 0x400000000000000);
    TEST_RR_OP(84, bclr, 0xffffffffffffff7e, 0xffffffffffffff7f, 0x200000000000000);
    TEST_RR_OP(85, bclr, 0xfffffffffffffefe, 0xfffffffffffffeff, 0x100000000000000);
    TEST_RR_OP(86, bclr, 0xfffffffffffffdfe, 0xfffffffffffffdff, 0x80000000000000);
    TEST_RR_OP(87, bclr, 0xfffffffffffffbfe, 0xfffffffffffffbff, 0x40000000000000);
    TEST_RR_OP(88, bclr, 0xfffffffffffff7fe, 0xfffffffffffff7ff, 0x20000000000000);
    TEST_RR_OP(89, bclr, 0xffffffffffffeffe, 0xffffffffffffefff, 0x10000000000000);
    TEST_RR_OP(90, bclr, 0xffffffffffffdffe, 0xffffffffffffdfff, 0x8000000000000);
    TEST_RR_OP(91, bclr, 0xffffffffffffbffe, 0xffffffffffffbfff, 0x4000000000000);
    TEST_RR_OP(92, bclr, 0xffffffffffff7ffe, 0xffffffffffff7fff, 0x2000000000000);
    TEST_RR_OP(93, bclr, 0xfffffffffffefffe, 0xfffffffffffeffff, 0x1000000000000);
    TEST_RR_OP(94, bclr, 0xfffffffffffdfffe, 0xfffffffffffdffff, 0x800000000000);
    TEST_RR_OP(95, bclr, 0xfffffffffffbfffe, 0xfffffffffffbffff, 0x400000000000);
    TEST_RR_OP(96, bclr, 0xfffffffffff7fffe, 0xfffffffffff7ffff, 0x200000000000);
    TEST_RR_OP(97, bclr, 0xffffffffffeffffe, 0xffffffffffefffff, 0x100000000000);
    TEST_RR_OP(98, bclr, 0xffffffffffdffffe, 0xffffffffffdfffff, 0x80000000000);
    TEST_RR_OP(99, bclr, 0xffffffffffbffffe, 0xffffffffffbfffff, 0x40000000000);
    TEST_RR_OP(100, bclr, 0xffffffffff7ffffe, 0xffffffffff7fffff, 0x20000000000);
    TEST_RR_OP(101, bclr, 0xfffffffffefffffe, 0xfffffffffeffffff, 0x10000000000);
    TEST_RR_OP(102, bclr, 0xfffffffffdfffffe, 0xfffffffffdffffff, 0x8000000000);
    TEST_RR_OP(103, bclr, 0xfffffffffbfffffe, 0xfffffffffbffffff, 0x4000000000);
    TEST_RR_OP(104, bclr, 0xfffffffff7fffffe, 0xfffffffff7ffffff, 0x2000000000);
    TEST_RR_OP(105, bclr, 0xffffffffeffffffe, 0xffffffffefffffff, 0x1000000000);
    TEST_RR_OP(106, bclr, 0xffffffffdffffffe, 0xffffffffdfffffff, 0x800000000);
    TEST_RR_OP(107, bclr, 0xffffffffbffffffe, 0xffffffffbfffffff, 0x400000000);
    TEST_RR_OP(108, bclr, 0xffffffff7ffffffe, 0xffffffff7fffffff, 0x200000000);
    TEST_RR_OP(109, bclr, 0xfffffffefffffffe, 0xfffffffeffffffff, 0x100000000);
    TEST_RR_OP(110, bclr, 0xfffffffdfffffffe, 0xfffffffdffffffff, 0x80000000);
    TEST_RR_OP(111, bclr, 0xfffffffbfffffffe, 0xfffffffbffffffff, 0x40000000);
    TEST_RR_OP(112, bclr, 0xfffffff7fffffffe, 0xfffffff7ffffffff, 0x20000000);
    TEST_RR_OP(113, bclr, 0xffffffeffffffffe, 0xffffffefffffffff, 0x10000000);
    TEST_RR_OP(114, bclr, 0xffffffdffffffffe, 0xffffffdfffffffff, 0x8000000);
    TEST_RR_OP(115, bclr, 0xffffffbffffffffe, 0xffffffbfffffffff, 0x4000000);
    TEST_RR_OP(116, bclr, 0xffffff7ffffffffe, 0xffffff7fffffffff, 0x2000000);
    TEST_RR_OP(117, bclr, 0xfffffefffffffffe, 0xfffffeffffffffff, 0x1000000);
    TEST_RR_OP(118, bclr, 0xfffffdfffffffffe, 0xfffffdffffffffff, 0x800000);
    TEST_RR_OP(119, bclr, 0xfffffbfffffffffe, 0xfffffbffffffffff, 0x400000);
    TEST_RR_OP(120, bclr, 0xfffff7fffffffffe, 0xfffff7ffffffffff, 0x200000);
    TEST_RR_OP(121, bclr, 0xffffeffffffffffe, 0xffffefffffffffff, 0x100000);
    TEST_RR_OP(122, bclr, 0xffffdffffffffffe, 0xffffdfffffffffff, 0x80000);
    TEST_RR_OP(123, bclr, 0xffffbffffffffffe, 0xffffbfffffffffff, 0x40000);
    TEST_RR_OP(124, bclr, 0xffff7ffffffffffe, 0xffff7fffffffffff, 0x20000);
    TEST_RR_OP(125, bclr, 0xfffefffffffffffe, 0xfffeffffffffffff, 0x10000);
    TEST_RR_OP(126, bclr, 0xfffdfffffffffffe, 0xfffdffffffffffff, 0x8000);
    TEST_RR_OP(127, bclr, 0xfffbfffffffffffe, 0xfffbffffffffffff, 0x4000);
    TEST_RR_OP(128, bclr, 0xfff7fffffffffffe, 0xfff7ffffffffffff, 0x2000);
    TEST_RR_OP(129, bclr, 0xffeffffffffffffe, 0xffefffffffffffff, 0x1000);
    TEST_RR_OP(130, bclr, 0xffdffffffffffffe, 0xffdfffffffffffff, 0x800);
    TEST_RR_OP(131, bclr, 0xffbffffffffffffe, 0xffbfffffffffffff, 0x400);
    TEST_RR_OP(132, bclr, 0xff7ffffffffffffe, 0xff7fffffffffffff, 0x200);
    TEST_RR_OP(133, bclr, 0xfefffffffffffffe, 0xfeffffffffffffff, 0x100);
    TEST_RR_OP(134, bclr, 0xfdfffffffffffffe, 0xfdffffffffffffff, 0x80);
    TEST_RR_OP(135, bclr, 0xfbfffffffffffffe, 0xfbffffffffffffff, 0x40);
    TEST_RR_OP(136, bclr, 0xf7fffffeffffffff, 0xf7ffffffffffffff, 0x20);
    TEST_RR_OP(137, bclr, 0xeffffffffffeffff, 0xefffffffffffffff, 0x10);
    TEST_RR_OP(138, bclr, 0xdffffffffffffeff, 0xdfffffffffffffff, 0x8);
    TEST_RR_OP(139, bclr, 0xbfffffffffffffef, 0xbfffffffffffffff, 0x4);
    TEST_RR_OP(140, bclr, 0x7ffffffffffffffb, 0x7fffffffffffffff, 0x2);
    TEST_RR_OP(141, bclr, 0xfffffffffffffffd, 0xffffffffffffffff, 0x1);
    TEST_RR_OP(142, bclr, 0x0000000000000000, 0x1, 0x0);
    TEST_RR_OP(143, bclr, 0x0000000000000002, 0x2, 0x0);
    TEST_RR_OP(144, bclr, 0x0000000000000004, 0x4, 0x0);
    TEST_RR_OP(145, bclr, 0x0000000000000008, 0x8, 0x0);
    TEST_RR_OP(146, bclr, 0x0000000000000010, 0x10, 0x0);
    TEST_RR_OP(147, bclr, 0x0000000000000020, 0x20, 0x0);
    TEST_RR_OP(148, bclr, 0x0000000000000040, 0x40, 0x0);
    TEST_RR_OP(149, bclr, 0x0000000000000080, 0x80, 0x0);
    TEST_RR_OP(150, bclr, 0x0000000000000100, 0x100, 0x0);
    TEST_RR_OP(151, bclr, 0x0000000000000200, 0x200, 0x0);
    TEST_RR_OP(152, bclr, 0x0000000000000400, 0x400, 0x0);
    TEST_RR_OP(153, bclr, 0x0000000000000800, 0x800, 0x0);
    TEST_RR_OP(154, bclr, 0x0000000000001000, 0x1000, 0x0);
    TEST_RR_OP(155, bclr, 0x0000000000002000, 0x2000, 0x0);
    TEST_RR_OP(156, bclr, 0x0000000000004000, 0x4000, 0x0);
    TEST_RR_OP(157, bclr, 0x0000000000008000, 0x8000, 0x0);
    TEST_RR_OP(158, bclr, 0x0000000000010000, 0x10000, 0x0);
    TEST_RR_OP(159, bclr, 0x0000000000020000, 0x20000, 0x0);
    TEST_RR_OP(160, bclr, 0x0000000000040000, 0x40000, 0x0);
    TEST_RR_OP(161, bclr, 0x0000000000080000, 0x80000, 0x0);
    TEST_RR_OP(162, bclr, 0x0000000000100000, 0x100000, 0x0);
    TEST_RR_OP(163, bclr, 0x0000000000200000, 0x200000, 0x0);
    TEST_RR_OP(164, bclr, 0x0000000000400000, 0x400000, 0x0);
    TEST_RR_OP(165, bclr, 0x0000000000800000, 0x800000, 0x0);
    TEST_RR_OP(166, bclr, 0x0000000001000000, 0x1000000, 0x0);
    TEST_RR_OP(167, bclr, 0x0000000002000000, 0x2000000, 0x0);
    TEST_RR_OP(168, bclr, 0x0000000004000000, 0x4000000, 0x0);
    TEST_RR_OP(169, bclr, 0x0000000008000000, 0x8000000, 0x0);
    TEST_RR_OP(170, bclr, 0x0000000010000000, 0x10000000, 0x0);
    TEST_RR_OP(171, bclr, 0x0000000020000000, 0x20000000, 0x0);
    TEST_RR_OP(172, bclr, 0x0000000040000000, 0x40000000, 0x0);
    TEST_RR_OP(173, bclr, 0x0000000080000000, 0x80000000, 0x0);
    TEST_RR_OP(174, bclr, 0x0000000100000000, 0x100000000, 0x0);
    TEST_RR_OP(175, bclr, 0x0000000200000000, 0x200000000, 0x0);
    TEST_RR_OP(176, bclr, 0x0000000400000000, 0x400000000, 0x0);
    TEST_RR_OP(177, bclr, 0x0000000800000000, 0x800000000, 0x0);
    TEST_RR_OP(178, bclr, 0x0000001000000000, 0x1000000000, 0x0);
    TEST_RR_OP(179, bclr, 0x0000002000000000, 0x2000000000, 0x0);
    TEST_RR_OP(180, bclr, 0x0000004000000000, 0x4000000000, 0x0);
    TEST_RR_OP(181, bclr, 0x0000008000000000, 0x8000000000, 0x0);
    TEST_RR_OP(182, bclr, 0x0000010000000000, 0x10000000000, 0x0);
    TEST_RR_OP(183, bclr, 0x0000020000000000, 0x20000000000, 0x0);
    TEST_RR_OP(184, bclr, 0x0000040000000000, 0x40000000000, 0x0);
    TEST_RR_OP(185, bclr, 0x0000080000000000, 0x80000000000, 0x0);
    TEST_RR_OP(186, bclr, 0x0000100000000000, 0x100000000000, 0x0);
    TEST_RR_OP(187, bclr, 0x0000200000000000, 0x200000000000, 0x0);
    TEST_RR_OP(188, bclr, 0x0000400000000000, 0x400000000000, 0x0);
    TEST_RR_OP(189, bclr, 0x0000800000000000, 0x800000000000, 0x0);
    TEST_RR_OP(190, bclr, 0x0001000000000000, 0x1000000000000, 0x0);
    TEST_RR_OP(191, bclr, 0x0002000000000000, 0x2000000000000, 0x0);
    TEST_RR_OP(192, bclr, 0x0004000000000000, 0x4000000000000, 0x0);
    TEST_RR_OP(193, bclr, 0x0008000000000000, 0x8000000000000, 0x0);
    TEST_RR_OP(194, bclr, 0x0010000000000000, 0x10000000000000, 0x0);
    TEST_RR_OP(195, bclr, 0x0020000000000000, 0x20000000000000, 0x0);
    TEST_RR_OP(196, bclr, 0x0040000000000000, 0x40000000000000, 0x0);
    TEST_RR_OP(197, bclr, 0x0080000000000000, 0x80000000000000, 0x0);
    TEST_RR_OP(198, bclr, 0x0100000000000000, 0x100000000000000, 0x0);
    TEST_RR_OP(199, bclr, 0x0200000000000000, 0x200000000000000, 0x0);
    TEST_RR_OP(200, bclr, 0x0400000000000000, 0x400000000000000, 0x0);
    TEST_RR_OP(201, bclr, 0x0800000000000000, 0x800000000000000, 0x0);
    TEST_RR_OP(202, bclr, 0x1000000000000000, 0x1000000000000000, 0x0);
    TEST_RR_OP(203, bclr, 0x2000000000000000, 0x2000000000000000, 0x0);
    TEST_RR_OP(204, bclr, 0x4000000000000000, 0x4000000000000000, 0x0);
    TEST_RR_OP(205, bclr, 0x8000000000000000, 0x8000000000000000, 0x0);
    TEST_RR_OP(206, bclr, 0x0000000000000000, 0x0, 0x0);
    TEST_RR_OP(207, bclr, 0xfffffffffffffffe, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(208, bclr, 0xfffffffffffffffc, 0xfffffffffffffffd, 0x0);
    TEST_RR_OP(209, bclr, 0xfffffffffffffffa, 0xfffffffffffffffb, 0x0);
    TEST_RR_OP(210, bclr, 0xfffffffffffffff6, 0xfffffffffffffff7, 0x0);
    TEST_RR_OP(211, bclr, 0xffffffffffffffee, 0xffffffffffffffef, 0x0);
    TEST_RR_OP(212, bclr, 0xffffffffffffffde, 0xffffffffffffffdf, 0x0);
    TEST_RR_OP(213, bclr, 0xffffffffffffffbe, 0xffffffffffffffbf, 0x0);
    TEST_RR_OP(214, bclr, 0xffffffffffffff7e, 0xffffffffffffff7f, 0x0);
    TEST_RR_OP(215, bclr, 0xfffffffffffffefe, 0xfffffffffffffeff, 0x0);
    TEST_RR_OP(216, bclr, 0xfffffffffffffdfe, 0xfffffffffffffdff, 0x0);
    TEST_RR_OP(217, bclr, 0xfffffffffffffbfe, 0xfffffffffffffbff, 0x0);
    TEST_RR_OP(218, bclr, 0xfffffffffffff7fe, 0xfffffffffffff7ff, 0x0);
    TEST_RR_OP(219, bclr, 0xffffffffffffeffe, 0xffffffffffffefff, 0x0);
    TEST_RR_OP(220, bclr, 0xffffffffffffdffe, 0xffffffffffffdfff, 0x0);
    TEST_RR_OP(221, bclr, 0xffffffffffffbffe, 0xffffffffffffbfff, 0x0);
    TEST_RR_OP(222, bclr, 0xffffffffffff7ffe, 0xffffffffffff7fff, 0x0);
    TEST_RR_OP(223, bclr, 0xfffffffffffefffe, 0xfffffffffffeffff, 0x0);
    TEST_RR_OP(224, bclr, 0xfffffffffffdfffe, 0xfffffffffffdffff, 0x0);
    TEST_RR_OP(225, bclr, 0xfffffffffffbfffe, 0xfffffffffffbffff, 0x0);
    TEST_RR_OP(226, bclr, 0xfffffffffff7fffe, 0xfffffffffff7ffff, 0x0);
    TEST_RR_OP(227, bclr, 0xffffffffffeffffe, 0xffffffffffefffff, 0x0);
    TEST_RR_OP(228, bclr, 0xffffffffffdffffe, 0xffffffffffdfffff, 0x0);
    TEST_RR_OP(229, bclr, 0xffffffffffbffffe, 0xffffffffffbfffff, 0x0);
    TEST_RR_OP(230, bclr, 0xffffffffff7ffffe, 0xffffffffff7fffff, 0x0);
    TEST_RR_OP(231, bclr, 0xfffffffffefffffe, 0xfffffffffeffffff, 0x0);
    TEST_RR_OP(232, bclr, 0xfffffffffdfffffe, 0xfffffffffdffffff, 0x0);
    TEST_RR_OP(233, bclr, 0xfffffffffbfffffe, 0xfffffffffbffffff, 0x0);
    TEST_RR_OP(234, bclr, 0xfffffffff7fffffe, 0xfffffffff7ffffff, 0x0);
    TEST_RR_OP(235, bclr, 0xffffffffeffffffe, 0xffffffffefffffff, 0x0);
    TEST_RR_OP(236, bclr, 0xffffffffdffffffe, 0xffffffffdfffffff, 0x0);
    TEST_RR_OP(237, bclr, 0xffffffffbffffffe, 0xffffffffbfffffff, 0x0);
    TEST_RR_OP(238, bclr, 0xffffffff7ffffffe, 0xffffffff7fffffff, 0x0);
    TEST_RR_OP(239, bclr, 0xfffffffefffffffe, 0xfffffffeffffffff, 0x0);
    TEST_RR_OP(240, bclr, 0xfffffffdfffffffe, 0xfffffffdffffffff, 0x0);
    TEST_RR_OP(241, bclr, 0xfffffffbfffffffe, 0xfffffffbffffffff, 0x0);
    TEST_RR_OP(242, bclr, 0xfffffff7fffffffe, 0xfffffff7ffffffff, 0x0);
    TEST_RR_OP(243, bclr, 0xffffffeffffffffe, 0xffffffefffffffff, 0x0);
    TEST_RR_OP(244, bclr, 0xffffffdffffffffe, 0xffffffdfffffffff, 0x0);
    TEST_RR_OP(245, bclr, 0xffffffbffffffffe, 0xffffffbfffffffff, 0x0);
    TEST_RR_OP(246, bclr, 0xffffff7ffffffffe, 0xffffff7fffffffff, 0x0);
    TEST_RR_OP(247, bclr, 0xfffffefffffffffe, 0xfffffeffffffffff, 0x0);
    TEST_RR_OP(248, bclr, 0xfffffdfffffffffe, 0xfffffdffffffffff, 0x0);
    TEST_RR_OP(249, bclr, 0xfffffbfffffffffe, 0xfffffbffffffffff, 0x0);
    TEST_RR_OP(250, bclr, 0xfffff7fffffffffe, 0xfffff7ffffffffff, 0x0);
    TEST_RR_OP(251, bclr, 0xffffeffffffffffe, 0xffffefffffffffff, 0x0);
    TEST_RR_OP(252, bclr, 0xffffdffffffffffe, 0xffffdfffffffffff, 0x0);
    TEST_RR_OP(253, bclr, 0xffffbffffffffffe, 0xffffbfffffffffff, 0x0);
    TEST_RR_OP(254, bclr, 0xffff7ffffffffffe, 0xffff7fffffffffff, 0x0);
    TEST_RR_OP(255, bclr, 0xfffefffffffffffe, 0xfffeffffffffffff, 0x0);
    TEST_RR_OP(256, bclr, 0xfffdfffffffffffe, 0xfffdffffffffffff, 0x0);
    TEST_RR_OP(257, bclr, 0xfffbfffffffffffe, 0xfffbffffffffffff, 0x0);
    TEST_RR_OP(258, bclr, 0xfff7fffffffffffe, 0xfff7ffffffffffff, 0x0);
    TEST_RR_OP(259, bclr, 0xffeffffffffffffe, 0xffefffffffffffff, 0x0);
    TEST_RR_OP(260, bclr, 0xffdffffffffffffe, 0xffdfffffffffffff, 0x0);
    TEST_RR_OP(261, bclr, 0xffbffffffffffffe, 0xffbfffffffffffff, 0x0);
    TEST_RR_OP(262, bclr, 0xff7ffffffffffffe, 0xff7fffffffffffff, 0x0);
    TEST_RR_OP(263, bclr, 0xfefffffffffffffe, 0xfeffffffffffffff, 0x0);
    TEST_RR_OP(264, bclr, 0xfdfffffffffffffe, 0xfdffffffffffffff, 0x0);
    TEST_RR_OP(265, bclr, 0xfbfffffffffffffe, 0xfbffffffffffffff, 0x0);
    TEST_RR_OP(266, bclr, 0xf7fffffffffffffe, 0xf7ffffffffffffff, 0x0);
    TEST_RR_OP(267, bclr, 0xeffffffffffffffe, 0xefffffffffffffff, 0x0);
    TEST_RR_OP(268, bclr, 0xdffffffffffffffe, 0xdfffffffffffffff, 0x0);
    TEST_RR_OP(269, bclr, 0xbffffffffffffffe, 0xbfffffffffffffff, 0x0);
    TEST_RR_OP(270, bclr, 0x7ffffffffffffffe, 0x7fffffffffffffff, 0x0);
    TEST_RR_OP(271, bclr, 0xfffffffffffffffe, 0xffffffffffffffff, 0x0);

TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

