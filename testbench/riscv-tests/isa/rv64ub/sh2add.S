# See LICENSE for license details.

#*****************************************************************************
# sh2add.S
#-----------------------------------------------------------------------------
#
# Test sh2add instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_RR_OP(2, sh2add, 0x23742ffac9c51277, 0x10fd3dedadea5195, 0xdf7f3844121bcc23);
    TEST_RR_OP(3, sh2add, 0xea5327a5f07c0b5f, 0xbd295ce2d2ffbec1, 0xf5adb41aa47d105b);
    TEST_RR_OP(4, sh2add, 0xa888f096140195ac, 0xc9649f05a8e1a8bb, 0x82f6747f707af2c0);
    TEST_RR_OP(5, sh2add, 0x48add43604c27aef, 0x3541291848c99fcb, 0x73a92fd4e19bfbc3);
    TEST_RR_OP(6, sh2add, 0x96f42b556aff59eb, 0x10a24740461d524f, 0x546b0e54528a10af);
    TEST_RR_OP(7, sh2add, 0x624e80919045950b, 0x546b0e54528a10af, 0x10a24740461d524f);
    TEST_RR_OP(8, sh2add, 0x03e5e86bcf398ed7, 0x73a92fd4e19bfbc3, 0x3541291848c99fcb);
    TEST_RR_OP(9, sh2add, 0xd53e71036acd73bb, 0x82f6747f707af2c0, 0xc9649f05a8e1a8bb);
    TEST_RR_OP(10, sh2add, 0x93e02d4d64f4002d, 0xf5adb41aa47d105b, 0xbd295ce2d2ffbec1);
    TEST_RR_OP(11, sh2add, 0x8efa1efdf6598221, 0xdf7f3844121bcc23, 0x10fd3dedadea5195);
    TEST_RR_OP(12, sh2add, 0x0000000000000003, 0x1, 0xffffffffffffffff);
    TEST_RR_OP(13, sh2add, 0x8000000000000007, 0x2, 0x7fffffffffffffff);
    TEST_RR_OP(14, sh2add, 0xc00000000000000f, 0x4, 0xbfffffffffffffff);
    TEST_RR_OP(15, sh2add, 0xe00000000000001f, 0x8, 0xdfffffffffffffff);
    TEST_RR_OP(16, sh2add, 0xf00000000000003f, 0x10, 0xefffffffffffffff);
    TEST_RR_OP(17, sh2add, 0xf80000000000007f, 0x20, 0xf7ffffffffffffff);
    TEST_RR_OP(18, sh2add, 0xfc000000000000ff, 0x40, 0xfbffffffffffffff);
    TEST_RR_OP(19, sh2add, 0xfe000000000001ff, 0x80, 0xfdffffffffffffff);
    TEST_RR_OP(20, sh2add, 0xff000000000003ff, 0x100, 0xfeffffffffffffff);
    TEST_RR_OP(21, sh2add, 0xff800000000007ff, 0x200, 0xff7fffffffffffff);
    TEST_RR_OP(22, sh2add, 0xffc0000000000fff, 0x400, 0xffbfffffffffffff);
    TEST_RR_OP(23, sh2add, 0xffe0000000001fff, 0x800, 0xffdfffffffffffff);
    TEST_RR_OP(24, sh2add, 0xfff0000000003fff, 0x1000, 0xffefffffffffffff);
    TEST_RR_OP(25, sh2add, 0xfff8000000007fff, 0x2000, 0xfff7ffffffffffff);
    TEST_RR_OP(26, sh2add, 0xfffc00000000ffff, 0x4000, 0xfffbffffffffffff);
    TEST_RR_OP(27, sh2add, 0xfffe00000001ffff, 0x8000, 0xfffdffffffffffff);
    TEST_RR_OP(28, sh2add, 0xffff00000003ffff, 0x10000, 0xfffeffffffffffff);
    TEST_RR_OP(29, sh2add, 0xffff80000007ffff, 0x20000, 0xffff7fffffffffff);
    TEST_RR_OP(30, sh2add, 0xffffc000000fffff, 0x40000, 0xffffbfffffffffff);
    TEST_RR_OP(31, sh2add, 0xffffe000001fffff, 0x80000, 0xffffdfffffffffff);
    TEST_RR_OP(32, sh2add, 0xfffff000003fffff, 0x100000, 0xffffefffffffffff);
    TEST_RR_OP(33, sh2add, 0xfffff800007fffff, 0x200000, 0xfffff7ffffffffff);
    TEST_RR_OP(34, sh2add, 0xfffffc0000ffffff, 0x400000, 0xfffffbffffffffff);
    TEST_RR_OP(35, sh2add, 0xfffffe0001ffffff, 0x800000, 0xfffffdffffffffff);
    TEST_RR_OP(36, sh2add, 0xffffff0003ffffff, 0x1000000, 0xfffffeffffffffff);
    TEST_RR_OP(37, sh2add, 0xffffff8007ffffff, 0x2000000, 0xffffff7fffffffff);
    TEST_RR_OP(38, sh2add, 0xffffffc00fffffff, 0x4000000, 0xffffffbfffffffff);
    TEST_RR_OP(39, sh2add, 0xffffffe01fffffff, 0x8000000, 0xffffffdfffffffff);
    TEST_RR_OP(40, sh2add, 0xfffffff03fffffff, 0x10000000, 0xffffffefffffffff);
    TEST_RR_OP(41, sh2add, 0xfffffff87fffffff, 0x20000000, 0xfffffff7ffffffff);
    TEST_RR_OP(42, sh2add, 0xfffffffcffffffff, 0x40000000, 0xfffffffbffffffff);
    TEST_RR_OP(43, sh2add, 0xffffffffffffffff, 0x80000000, 0xfffffffdffffffff);
    TEST_RR_OP(44, sh2add, 0x00000002ffffffff, 0x100000000, 0xfffffffeffffffff);
    TEST_RR_OP(45, sh2add, 0x000000077fffffff, 0x200000000, 0xffffffff7fffffff);
    TEST_RR_OP(46, sh2add, 0x0000000fbfffffff, 0x400000000, 0xffffffffbfffffff);
    TEST_RR_OP(47, sh2add, 0x0000001fdfffffff, 0x800000000, 0xffffffffdfffffff);
    TEST_RR_OP(48, sh2add, 0x0000003fefffffff, 0x1000000000, 0xffffffffefffffff);
    TEST_RR_OP(49, sh2add, 0x0000007ff7ffffff, 0x2000000000, 0xfffffffff7ffffff);
    TEST_RR_OP(50, sh2add, 0x000000fffbffffff, 0x4000000000, 0xfffffffffbffffff);
    TEST_RR_OP(51, sh2add, 0x000001fffdffffff, 0x8000000000, 0xfffffffffdffffff);
    TEST_RR_OP(52, sh2add, 0x000003fffeffffff, 0x10000000000, 0xfffffffffeffffff);
    TEST_RR_OP(53, sh2add, 0x000007ffff7fffff, 0x20000000000, 0xffffffffff7fffff);
    TEST_RR_OP(54, sh2add, 0x00000fffffbfffff, 0x40000000000, 0xffffffffffbfffff);
    TEST_RR_OP(55, sh2add, 0x00001fffffdfffff, 0x80000000000, 0xffffffffffdfffff);
    TEST_RR_OP(56, sh2add, 0x00003fffffefffff, 0x100000000000, 0xffffffffffefffff);
    TEST_RR_OP(57, sh2add, 0x00007ffffff7ffff, 0x200000000000, 0xfffffffffff7ffff);
    TEST_RR_OP(58, sh2add, 0x0000fffffffbffff, 0x400000000000, 0xfffffffffffbffff);
    TEST_RR_OP(59, sh2add, 0x0001fffffffdffff, 0x800000000000, 0xfffffffffffdffff);
    TEST_RR_OP(60, sh2add, 0x0003fffffffeffff, 0x1000000000000, 0xfffffffffffeffff);
    TEST_RR_OP(61, sh2add, 0x0007ffffffff7fff, 0x2000000000000, 0xffffffffffff7fff);
    TEST_RR_OP(62, sh2add, 0x000fffffffffbfff, 0x4000000000000, 0xffffffffffffbfff);
    TEST_RR_OP(63, sh2add, 0x001fffffffffdfff, 0x8000000000000, 0xffffffffffffdfff);
    TEST_RR_OP(64, sh2add, 0x003fffffffffefff, 0x10000000000000, 0xffffffffffffefff);
    TEST_RR_OP(65, sh2add, 0x007ffffffffff7ff, 0x20000000000000, 0xfffffffffffff7ff);
    TEST_RR_OP(66, sh2add, 0x00fffffffffffbff, 0x40000000000000, 0xfffffffffffffbff);
    TEST_RR_OP(67, sh2add, 0x01fffffffffffdff, 0x80000000000000, 0xfffffffffffffdff);
    TEST_RR_OP(68, sh2add, 0x03fffffffffffeff, 0x100000000000000, 0xfffffffffffffeff);
    TEST_RR_OP(69, sh2add, 0x07ffffffffffff7f, 0x200000000000000, 0xffffffffffffff7f);
    TEST_RR_OP(70, sh2add, 0x0fffffffffffffbf, 0x400000000000000, 0xffffffffffffffbf);
    TEST_RR_OP(71, sh2add, 0x1fffffffffffffdf, 0x800000000000000, 0xffffffffffffffdf);
    TEST_RR_OP(72, sh2add, 0x3fffffffffffffef, 0x1000000000000000, 0xffffffffffffffef);
    TEST_RR_OP(73, sh2add, 0x7ffffffffffffff7, 0x2000000000000000, 0xfffffffffffffff7);
    TEST_RR_OP(74, sh2add, 0xfffffffffffffffb, 0x4000000000000000, 0xfffffffffffffffb);
    TEST_RR_OP(75, sh2add, 0xfffffffffffffffd, 0x8000000000000000, 0xfffffffffffffffd);
    TEST_RR_OP(76, sh2add, 0xfffffffffffffffe, 0x0, 0xfffffffffffffffe);
    TEST_RR_OP(77, sh2add, 0xfffffffffffffff8, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(78, sh2add, 0x7ffffffffffffff4, 0xfffffffffffffffd, 0x8000000000000000);
    TEST_RR_OP(79, sh2add, 0x3fffffffffffffec, 0xfffffffffffffffb, 0x4000000000000000);
    TEST_RR_OP(80, sh2add, 0x1fffffffffffffdc, 0xfffffffffffffff7, 0x2000000000000000);
    TEST_RR_OP(81, sh2add, 0x0fffffffffffffbc, 0xffffffffffffffef, 0x1000000000000000);
    TEST_RR_OP(82, sh2add, 0x07ffffffffffff7c, 0xffffffffffffffdf, 0x800000000000000);
    TEST_RR_OP(83, sh2add, 0x03fffffffffffefc, 0xffffffffffffffbf, 0x400000000000000);
    TEST_RR_OP(84, sh2add, 0x01fffffffffffdfc, 0xffffffffffffff7f, 0x200000000000000);
    TEST_RR_OP(85, sh2add, 0x00fffffffffffbfc, 0xfffffffffffffeff, 0x100000000000000);
    TEST_RR_OP(86, sh2add, 0x007ffffffffff7fc, 0xfffffffffffffdff, 0x80000000000000);
    TEST_RR_OP(87, sh2add, 0x003fffffffffeffc, 0xfffffffffffffbff, 0x40000000000000);
    TEST_RR_OP(88, sh2add, 0x001fffffffffdffc, 0xfffffffffffff7ff, 0x20000000000000);
    TEST_RR_OP(89, sh2add, 0x000fffffffffbffc, 0xffffffffffffefff, 0x10000000000000);
    TEST_RR_OP(90, sh2add, 0x0007ffffffff7ffc, 0xffffffffffffdfff, 0x8000000000000);
    TEST_RR_OP(91, sh2add, 0x0003fffffffefffc, 0xffffffffffffbfff, 0x4000000000000);
    TEST_RR_OP(92, sh2add, 0x0001fffffffdfffc, 0xffffffffffff7fff, 0x2000000000000);
    TEST_RR_OP(93, sh2add, 0x0000fffffffbfffc, 0xfffffffffffeffff, 0x1000000000000);
    TEST_RR_OP(94, sh2add, 0x00007ffffff7fffc, 0xfffffffffffdffff, 0x800000000000);
    TEST_RR_OP(95, sh2add, 0x00003fffffeffffc, 0xfffffffffffbffff, 0x400000000000);
    TEST_RR_OP(96, sh2add, 0x00001fffffdffffc, 0xfffffffffff7ffff, 0x200000000000);
    TEST_RR_OP(97, sh2add, 0x00000fffffbffffc, 0xffffffffffefffff, 0x100000000000);
    TEST_RR_OP(98, sh2add, 0x000007ffff7ffffc, 0xffffffffffdfffff, 0x80000000000);
    TEST_RR_OP(99, sh2add, 0x000003fffefffffc, 0xffffffffffbfffff, 0x40000000000);
    TEST_RR_OP(100, sh2add, 0x000001fffdfffffc, 0xffffffffff7fffff, 0x20000000000);
    TEST_RR_OP(101, sh2add, 0x000000fffbfffffc, 0xfffffffffeffffff, 0x10000000000);
    TEST_RR_OP(102, sh2add, 0x0000007ff7fffffc, 0xfffffffffdffffff, 0x8000000000);
    TEST_RR_OP(103, sh2add, 0x0000003feffffffc, 0xfffffffffbffffff, 0x4000000000);
    TEST_RR_OP(104, sh2add, 0x0000001fdffffffc, 0xfffffffff7ffffff, 0x2000000000);
    TEST_RR_OP(105, sh2add, 0x0000000fbffffffc, 0xffffffffefffffff, 0x1000000000);
    TEST_RR_OP(106, sh2add, 0x000000077ffffffc, 0xffffffffdfffffff, 0x800000000);
    TEST_RR_OP(107, sh2add, 0x00000002fffffffc, 0xffffffffbfffffff, 0x400000000);
    TEST_RR_OP(108, sh2add, 0xfffffffffffffffc, 0xffffffff7fffffff, 0x200000000);
    TEST_RR_OP(109, sh2add, 0xfffffffcfffffffc, 0xfffffffeffffffff, 0x100000000);
    TEST_RR_OP(110, sh2add, 0xfffffff87ffffffc, 0xfffffffdffffffff, 0x80000000);
    TEST_RR_OP(111, sh2add, 0xfffffff03ffffffc, 0xfffffffbffffffff, 0x40000000);
    TEST_RR_OP(112, sh2add, 0xffffffe01ffffffc, 0xfffffff7ffffffff, 0x20000000);
    TEST_RR_OP(113, sh2add, 0xffffffc00ffffffc, 0xffffffefffffffff, 0x10000000);
    TEST_RR_OP(114, sh2add, 0xffffff8007fffffc, 0xffffffdfffffffff, 0x8000000);
    TEST_RR_OP(115, sh2add, 0xffffff0003fffffc, 0xffffffbfffffffff, 0x4000000);
    TEST_RR_OP(116, sh2add, 0xfffffe0001fffffc, 0xffffff7fffffffff, 0x2000000);
    TEST_RR_OP(117, sh2add, 0xfffffc0000fffffc, 0xfffffeffffffffff, 0x1000000);
    TEST_RR_OP(118, sh2add, 0xfffff800007ffffc, 0xfffffdffffffffff, 0x800000);
    TEST_RR_OP(119, sh2add, 0xfffff000003ffffc, 0xfffffbffffffffff, 0x400000);
    TEST_RR_OP(120, sh2add, 0xffffe000001ffffc, 0xfffff7ffffffffff, 0x200000);
    TEST_RR_OP(121, sh2add, 0xffffc000000ffffc, 0xffffefffffffffff, 0x100000);
    TEST_RR_OP(122, sh2add, 0xffff80000007fffc, 0xffffdfffffffffff, 0x80000);
    TEST_RR_OP(123, sh2add, 0xffff00000003fffc, 0xffffbfffffffffff, 0x40000);
    TEST_RR_OP(124, sh2add, 0xfffe00000001fffc, 0xffff7fffffffffff, 0x20000);
    TEST_RR_OP(125, sh2add, 0xfffc00000000fffc, 0xfffeffffffffffff, 0x10000);
    TEST_RR_OP(126, sh2add, 0xfff8000000007ffc, 0xfffdffffffffffff, 0x8000);
    TEST_RR_OP(127, sh2add, 0xfff0000000003ffc, 0xfffbffffffffffff, 0x4000);
    TEST_RR_OP(128, sh2add, 0xffe0000000001ffc, 0xfff7ffffffffffff, 0x2000);
    TEST_RR_OP(129, sh2add, 0xffc0000000000ffc, 0xffefffffffffffff, 0x1000);
    TEST_RR_OP(130, sh2add, 0xff800000000007fc, 0xffdfffffffffffff, 0x800);
    TEST_RR_OP(131, sh2add, 0xff000000000003fc, 0xffbfffffffffffff, 0x400);
    TEST_RR_OP(132, sh2add, 0xfe000000000001fc, 0xff7fffffffffffff, 0x200);
    TEST_RR_OP(133, sh2add, 0xfc000000000000fc, 0xfeffffffffffffff, 0x100);
    TEST_RR_OP(134, sh2add, 0xf80000000000007c, 0xfdffffffffffffff, 0x80);
    TEST_RR_OP(135, sh2add, 0xf00000000000003c, 0xfbffffffffffffff, 0x40);
    TEST_RR_OP(136, sh2add, 0xe00000000000001c, 0xf7ffffffffffffff, 0x20);
    TEST_RR_OP(137, sh2add, 0xc00000000000000c, 0xefffffffffffffff, 0x10);
    TEST_RR_OP(138, sh2add, 0x8000000000000004, 0xdfffffffffffffff, 0x8);
    TEST_RR_OP(139, sh2add, 0x0000000000000000, 0xbfffffffffffffff, 0x4);
    TEST_RR_OP(140, sh2add, 0xfffffffffffffffe, 0x7fffffffffffffff, 0x2);
    TEST_RR_OP(141, sh2add, 0xfffffffffffffffd, 0xffffffffffffffff, 0x1);
    TEST_RR_OP(142, sh2add, 0x0000000000000004, 0x1, 0x0);
    TEST_RR_OP(143, sh2add, 0x0000000000000008, 0x2, 0x0);
    TEST_RR_OP(144, sh2add, 0x0000000000000010, 0x4, 0x0);
    TEST_RR_OP(145, sh2add, 0x0000000000000020, 0x8, 0x0);
    TEST_RR_OP(146, sh2add, 0x0000000000000040, 0x10, 0x0);
    TEST_RR_OP(147, sh2add, 0x0000000000000080, 0x20, 0x0);
    TEST_RR_OP(148, sh2add, 0x0000000000000100, 0x40, 0x0);
    TEST_RR_OP(149, sh2add, 0x0000000000000200, 0x80, 0x0);
    TEST_RR_OP(150, sh2add, 0x0000000000000400, 0x100, 0x0);
    TEST_RR_OP(151, sh2add, 0x0000000000000800, 0x200, 0x0);
    TEST_RR_OP(152, sh2add, 0x0000000000001000, 0x400, 0x0);
    TEST_RR_OP(153, sh2add, 0x0000000000002000, 0x800, 0x0);
    TEST_RR_OP(154, sh2add, 0x0000000000004000, 0x1000, 0x0);
    TEST_RR_OP(155, sh2add, 0x0000000000008000, 0x2000, 0x0);
    TEST_RR_OP(156, sh2add, 0x0000000000010000, 0x4000, 0x0);
    TEST_RR_OP(157, sh2add, 0x0000000000020000, 0x8000, 0x0);
    TEST_RR_OP(158, sh2add, 0x0000000000040000, 0x10000, 0x0);
    TEST_RR_OP(159, sh2add, 0x0000000000080000, 0x20000, 0x0);
    TEST_RR_OP(160, sh2add, 0x0000000000100000, 0x40000, 0x0);
    TEST_RR_OP(161, sh2add, 0x0000000000200000, 0x80000, 0x0);
    TEST_RR_OP(162, sh2add, 0x0000000000400000, 0x100000, 0x0);
    TEST_RR_OP(163, sh2add, 0x0000000000800000, 0x200000, 0x0);
    TEST_RR_OP(164, sh2add, 0x0000000001000000, 0x400000, 0x0);
    TEST_RR_OP(165, sh2add, 0x0000000002000000, 0x800000, 0x0);
    TEST_RR_OP(166, sh2add, 0x0000000004000000, 0x1000000, 0x0);
    TEST_RR_OP(167, sh2add, 0x0000000008000000, 0x2000000, 0x0);
    TEST_RR_OP(168, sh2add, 0x0000000010000000, 0x4000000, 0x0);
    TEST_RR_OP(169, sh2add, 0x0000000020000000, 0x8000000, 0x0);
    TEST_RR_OP(170, sh2add, 0x0000000040000000, 0x10000000, 0x0);
    TEST_RR_OP(171, sh2add, 0x0000000080000000, 0x20000000, 0x0);
    TEST_RR_OP(172, sh2add, 0x0000000100000000, 0x40000000, 0x0);
    TEST_RR_OP(173, sh2add, 0x0000000200000000, 0x80000000, 0x0);
    TEST_RR_OP(174, sh2add, 0x0000000400000000, 0x100000000, 0x0);
    TEST_RR_OP(175, sh2add, 0x0000000800000000, 0x200000000, 0x0);
    TEST_RR_OP(176, sh2add, 0x0000001000000000, 0x400000000, 0x0);
    TEST_RR_OP(177, sh2add, 0x0000002000000000, 0x800000000, 0x0);
    TEST_RR_OP(178, sh2add, 0x0000004000000000, 0x1000000000, 0x0);
    TEST_RR_OP(179, sh2add, 0x0000008000000000, 0x2000000000, 0x0);
    TEST_RR_OP(180, sh2add, 0x0000010000000000, 0x4000000000, 0x0);
    TEST_RR_OP(181, sh2add, 0x0000020000000000, 0x8000000000, 0x0);
    TEST_RR_OP(182, sh2add, 0x0000040000000000, 0x10000000000, 0x0);
    TEST_RR_OP(183, sh2add, 0x0000080000000000, 0x20000000000, 0x0);
    TEST_RR_OP(184, sh2add, 0x0000100000000000, 0x40000000000, 0x0);
    TEST_RR_OP(185, sh2add, 0x0000200000000000, 0x80000000000, 0x0);
    TEST_RR_OP(186, sh2add, 0x0000400000000000, 0x100000000000, 0x0);
    TEST_RR_OP(187, sh2add, 0x0000800000000000, 0x200000000000, 0x0);
    TEST_RR_OP(188, sh2add, 0x0001000000000000, 0x400000000000, 0x0);
    TEST_RR_OP(189, sh2add, 0x0002000000000000, 0x800000000000, 0x0);
    TEST_RR_OP(190, sh2add, 0x0004000000000000, 0x1000000000000, 0x0);
    TEST_RR_OP(191, sh2add, 0x0008000000000000, 0x2000000000000, 0x0);
    TEST_RR_OP(192, sh2add, 0x0010000000000000, 0x4000000000000, 0x0);
    TEST_RR_OP(193, sh2add, 0x0020000000000000, 0x8000000000000, 0x0);
    TEST_RR_OP(194, sh2add, 0x0040000000000000, 0x10000000000000, 0x0);
    TEST_RR_OP(195, sh2add, 0x0080000000000000, 0x20000000000000, 0x0);
    TEST_RR_OP(196, sh2add, 0x0100000000000000, 0x40000000000000, 0x0);
    TEST_RR_OP(197, sh2add, 0x0200000000000000, 0x80000000000000, 0x0);
    TEST_RR_OP(198, sh2add, 0x0400000000000000, 0x100000000000000, 0x0);
    TEST_RR_OP(199, sh2add, 0x0800000000000000, 0x200000000000000, 0x0);
    TEST_RR_OP(200, sh2add, 0x1000000000000000, 0x400000000000000, 0x0);
    TEST_RR_OP(201, sh2add, 0x2000000000000000, 0x800000000000000, 0x0);
    TEST_RR_OP(202, sh2add, 0x4000000000000000, 0x1000000000000000, 0x0);
    TEST_RR_OP(203, sh2add, 0x8000000000000000, 0x2000000000000000, 0x0);
    TEST_RR_OP(204, sh2add, 0x0000000000000000, 0x4000000000000000, 0x0);
    TEST_RR_OP(205, sh2add, 0x0000000000000000, 0x8000000000000000, 0x0);
    TEST_RR_OP(206, sh2add, 0x0000000000000000, 0x0, 0x0);
    TEST_RR_OP(207, sh2add, 0xfffffffffffffff8, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(208, sh2add, 0xfffffffffffffff4, 0xfffffffffffffffd, 0x0);
    TEST_RR_OP(209, sh2add, 0xffffffffffffffec, 0xfffffffffffffffb, 0x0);
    TEST_RR_OP(210, sh2add, 0xffffffffffffffdc, 0xfffffffffffffff7, 0x0);
    TEST_RR_OP(211, sh2add, 0xffffffffffffffbc, 0xffffffffffffffef, 0x0);
    TEST_RR_OP(212, sh2add, 0xffffffffffffff7c, 0xffffffffffffffdf, 0x0);
    TEST_RR_OP(213, sh2add, 0xfffffffffffffefc, 0xffffffffffffffbf, 0x0);
    TEST_RR_OP(214, sh2add, 0xfffffffffffffdfc, 0xffffffffffffff7f, 0x0);
    TEST_RR_OP(215, sh2add, 0xfffffffffffffbfc, 0xfffffffffffffeff, 0x0);
    TEST_RR_OP(216, sh2add, 0xfffffffffffff7fc, 0xfffffffffffffdff, 0x0);
    TEST_RR_OP(217, sh2add, 0xffffffffffffeffc, 0xfffffffffffffbff, 0x0);
    TEST_RR_OP(218, sh2add, 0xffffffffffffdffc, 0xfffffffffffff7ff, 0x0);
    TEST_RR_OP(219, sh2add, 0xffffffffffffbffc, 0xffffffffffffefff, 0x0);
    TEST_RR_OP(220, sh2add, 0xffffffffffff7ffc, 0xffffffffffffdfff, 0x0);
    TEST_RR_OP(221, sh2add, 0xfffffffffffefffc, 0xffffffffffffbfff, 0x0);
    TEST_RR_OP(222, sh2add, 0xfffffffffffdfffc, 0xffffffffffff7fff, 0x0);
    TEST_RR_OP(223, sh2add, 0xfffffffffffbfffc, 0xfffffffffffeffff, 0x0);
    TEST_RR_OP(224, sh2add, 0xfffffffffff7fffc, 0xfffffffffffdffff, 0x0);
    TEST_RR_OP(225, sh2add, 0xffffffffffeffffc, 0xfffffffffffbffff, 0x0);
    TEST_RR_OP(226, sh2add, 0xffffffffffdffffc, 0xfffffffffff7ffff, 0x0);
    TEST_RR_OP(227, sh2add, 0xffffffffffbffffc, 0xffffffffffefffff, 0x0);
    TEST_RR_OP(228, sh2add, 0xffffffffff7ffffc, 0xffffffffffdfffff, 0x0);
    TEST_RR_OP(229, sh2add, 0xfffffffffefffffc, 0xffffffffffbfffff, 0x0);
    TEST_RR_OP(230, sh2add, 0xfffffffffdfffffc, 0xffffffffff7fffff, 0x0);
    TEST_RR_OP(231, sh2add, 0xfffffffffbfffffc, 0xfffffffffeffffff, 0x0);
    TEST_RR_OP(232, sh2add, 0xfffffffff7fffffc, 0xfffffffffdffffff, 0x0);
    TEST_RR_OP(233, sh2add, 0xffffffffeffffffc, 0xfffffffffbffffff, 0x0);
    TEST_RR_OP(234, sh2add, 0xffffffffdffffffc, 0xfffffffff7ffffff, 0x0);
    TEST_RR_OP(235, sh2add, 0xffffffffbffffffc, 0xffffffffefffffff, 0x0);
    TEST_RR_OP(236, sh2add, 0xffffffff7ffffffc, 0xffffffffdfffffff, 0x0);
    TEST_RR_OP(237, sh2add, 0xfffffffefffffffc, 0xffffffffbfffffff, 0x0);
    TEST_RR_OP(238, sh2add, 0xfffffffdfffffffc, 0xffffffff7fffffff, 0x0);
    TEST_RR_OP(239, sh2add, 0xfffffffbfffffffc, 0xfffffffeffffffff, 0x0);
    TEST_RR_OP(240, sh2add, 0xfffffff7fffffffc, 0xfffffffdffffffff, 0x0);
    TEST_RR_OP(241, sh2add, 0xffffffeffffffffc, 0xfffffffbffffffff, 0x0);
    TEST_RR_OP(242, sh2add, 0xffffffdffffffffc, 0xfffffff7ffffffff, 0x0);
    TEST_RR_OP(243, sh2add, 0xffffffbffffffffc, 0xffffffefffffffff, 0x0);
    TEST_RR_OP(244, sh2add, 0xffffff7ffffffffc, 0xffffffdfffffffff, 0x0);
    TEST_RR_OP(245, sh2add, 0xfffffefffffffffc, 0xffffffbfffffffff, 0x0);
    TEST_RR_OP(246, sh2add, 0xfffffdfffffffffc, 0xffffff7fffffffff, 0x0);
    TEST_RR_OP(247, sh2add, 0xfffffbfffffffffc, 0xfffffeffffffffff, 0x0);
    TEST_RR_OP(248, sh2add, 0xfffff7fffffffffc, 0xfffffdffffffffff, 0x0);
    TEST_RR_OP(249, sh2add, 0xffffeffffffffffc, 0xfffffbffffffffff, 0x0);
    TEST_RR_OP(250, sh2add, 0xffffdffffffffffc, 0xfffff7ffffffffff, 0x0);
    TEST_RR_OP(251, sh2add, 0xffffbffffffffffc, 0xffffefffffffffff, 0x0);
    TEST_RR_OP(252, sh2add, 0xffff7ffffffffffc, 0xffffdfffffffffff, 0x0);
    TEST_RR_OP(253, sh2add, 0xfffefffffffffffc, 0xffffbfffffffffff, 0x0);
    TEST_RR_OP(254, sh2add, 0xfffdfffffffffffc, 0xffff7fffffffffff, 0x0);
    TEST_RR_OP(255, sh2add, 0xfffbfffffffffffc, 0xfffeffffffffffff, 0x0);
    TEST_RR_OP(256, sh2add, 0xfff7fffffffffffc, 0xfffdffffffffffff, 0x0);
    TEST_RR_OP(257, sh2add, 0xffeffffffffffffc, 0xfffbffffffffffff, 0x0);
    TEST_RR_OP(258, sh2add, 0xffdffffffffffffc, 0xfff7ffffffffffff, 0x0);
    TEST_RR_OP(259, sh2add, 0xffbffffffffffffc, 0xffefffffffffffff, 0x0);
    TEST_RR_OP(260, sh2add, 0xff7ffffffffffffc, 0xffdfffffffffffff, 0x0);
    TEST_RR_OP(261, sh2add, 0xfefffffffffffffc, 0xffbfffffffffffff, 0x0);
    TEST_RR_OP(262, sh2add, 0xfdfffffffffffffc, 0xff7fffffffffffff, 0x0);
    TEST_RR_OP(263, sh2add, 0xfbfffffffffffffc, 0xfeffffffffffffff, 0x0);
    TEST_RR_OP(264, sh2add, 0xf7fffffffffffffc, 0xfdffffffffffffff, 0x0);
    TEST_RR_OP(265, sh2add, 0xeffffffffffffffc, 0xfbffffffffffffff, 0x0);
    TEST_RR_OP(266, sh2add, 0xdffffffffffffffc, 0xf7ffffffffffffff, 0x0);
    TEST_RR_OP(267, sh2add, 0xbffffffffffffffc, 0xefffffffffffffff, 0x0);
    TEST_RR_OP(268, sh2add, 0x7ffffffffffffffc, 0xdfffffffffffffff, 0x0);
    TEST_RR_OP(269, sh2add, 0xfffffffffffffffc, 0xbfffffffffffffff, 0x0);
    TEST_RR_OP(270, sh2add, 0xfffffffffffffffc, 0x7fffffffffffffff, 0x0);
    TEST_RR_OP(271, sh2add, 0xfffffffffffffffc, 0xffffffffffffffff, 0x0);

TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

