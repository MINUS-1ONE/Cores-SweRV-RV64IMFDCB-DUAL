# See LICENSE for license details.

#*****************************************************************************
# bexti.S
#-----------------------------------------------------------------------------
#
# Test bexti instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_IMM_OP(2, bexti, 0x0000000000000000, 0x10fd3dedadea5195, 0x3);
    TEST_IMM_OP(3, bexti, 0x0000000000000000, 0xbd295ce2d2ffbec1, 0x1b);
    TEST_IMM_OP(4, bexti, 0x0000000000000001, 0xc9649f05a8e1a8bb, 0x0);
    TEST_IMM_OP(5, bexti, 0x0000000000000001, 0x3541291848c99fcb, 0x3);
    TEST_IMM_OP(6, bexti, 0x0000000000000000, 0x10a24740461d524f, 0xf);
    TEST_IMM_OP(7, bexti, 0x0000000000000000, 0x546b0e54528a10af, 0xf);
    TEST_IMM_OP(8, bexti, 0x0000000000000001, 0x73a92fd4e19bfbc3, 0xb);
    TEST_IMM_OP(9, bexti, 0x0000000000000000, 0x82f6747f707af2c0, 0x1b);
    TEST_IMM_OP(10, bexti, 0x0000000000000001, 0xf5adb41aa47d105b, 0x1);
    TEST_IMM_OP(11, bexti, 0x0000000000000000, 0xdf7f3844121bcc23, 0x15);
    TEST_IMM_OP(12, bexti, 0x0000000000000000, 0x1, 0x1f);
    TEST_IMM_OP(13, bexti, 0x0000000000000000, 0x2, 0xf);
    TEST_IMM_OP(14, bexti, 0x0000000000000000, 0x4, 0x17);
    TEST_IMM_OP(15, bexti, 0x0000000000000000, 0x8, 0x1b);
    TEST_IMM_OP(16, bexti, 0x0000000000000000, 0x10, 0x1d);
    TEST_IMM_OP(17, bexti, 0x0000000000000000, 0x20, 0x1e);
    TEST_IMM_OP(18, bexti, 0x0000000000000000, 0x40, 0x0);
    TEST_IMM_OP(19, bexti, 0x0000000000000000, 0x80, 0x10);
    TEST_IMM_OP(20, bexti, 0x0000000000000001, 0x100, 0x8);
    TEST_IMM_OP(21, bexti, 0x0000000000000000, 0x200, 0x4);
    TEST_IMM_OP(22, bexti, 0x0000000000000000, 0x400, 0x2);
    TEST_IMM_OP(23, bexti, 0x0000000000000000, 0x800, 0x1);
    TEST_IMM_OP(24, bexti, 0x0000000000000000, 0x1000, 0x3);
    TEST_IMM_OP(25, bexti, 0x0000000000000000, 0x2000, 0x1b);
    TEST_IMM_OP(26, bexti, 0x0000000000000000, 0x4000, 0x0);
    TEST_IMM_OP(27, bexti, 0x0000000000000000, 0x8000, 0x3);
    TEST_IMM_OP(28, bexti, 0x0000000000000000, 0x10000, 0xf);
    TEST_IMM_OP(29, bexti, 0x0000000000000000, 0x20000, 0xf);
    TEST_IMM_OP(30, bexti, 0x0000000000000000, 0x40000, 0xb);
    TEST_IMM_OP(31, bexti, 0x0000000000000000, 0x80000, 0x1b);
    TEST_IMM_OP(32, bexti, 0x0000000000000000, 0x100000, 0x1);
    TEST_IMM_OP(33, bexti, 0x0000000000000001, 0x200000, 0x15);
    TEST_IMM_OP(34, bexti, 0x0000000000000000, 0x400000, 0x1f);
    TEST_IMM_OP(35, bexti, 0x0000000000000000, 0x800000, 0xf);
    TEST_IMM_OP(36, bexti, 0x0000000000000000, 0x1000000, 0x17);
    TEST_IMM_OP(37, bexti, 0x0000000000000000, 0x2000000, 0x1b);
    TEST_IMM_OP(38, bexti, 0x0000000000000000, 0x4000000, 0x1d);
    TEST_IMM_OP(39, bexti, 0x0000000000000000, 0x8000000, 0x1e);
    TEST_IMM_OP(40, bexti, 0x0000000000000000, 0x10000000, 0x0);
    TEST_IMM_OP(41, bexti, 0x0000000000000000, 0x20000000, 0x10);
    TEST_IMM_OP(42, bexti, 0x0000000000000000, 0x40000000, 0x8);
    TEST_IMM_OP(43, bexti, 0x0000000000000000, 0x80000000, 0x4);
    TEST_IMM_OP(44, bexti, 0x0000000000000000, 0x100000000, 0x2);
    TEST_IMM_OP(45, bexti, 0x0000000000000000, 0x200000000, 0x1);
    TEST_IMM_OP(46, bexti, 0x0000000000000000, 0x400000000, 0x3);
    TEST_IMM_OP(47, bexti, 0x0000000000000000, 0x800000000, 0x1b);
    TEST_IMM_OP(48, bexti, 0x0000000000000000, 0x1000000000, 0x0);
    TEST_IMM_OP(49, bexti, 0x0000000000000000, 0x2000000000, 0x3);
    TEST_IMM_OP(50, bexti, 0x0000000000000000, 0x4000000000, 0xf);
    TEST_IMM_OP(51, bexti, 0x0000000000000000, 0x8000000000, 0xf);
    TEST_IMM_OP(52, bexti, 0x0000000000000000, 0x10000000000, 0xb);
    TEST_IMM_OP(53, bexti, 0x0000000000000000, 0x20000000000, 0x1b);
    TEST_IMM_OP(54, bexti, 0x0000000000000000, 0x40000000000, 0x1);
    TEST_IMM_OP(55, bexti, 0x0000000000000000, 0x80000000000, 0x15);
    TEST_IMM_OP(56, bexti, 0x0000000000000000, 0x100000000000, 0x1f);
    TEST_IMM_OP(57, bexti, 0x0000000000000000, 0x200000000000, 0xf);
    TEST_IMM_OP(58, bexti, 0x0000000000000000, 0x400000000000, 0x17);
    TEST_IMM_OP(59, bexti, 0x0000000000000000, 0x800000000000, 0x1b);
    TEST_IMM_OP(60, bexti, 0x0000000000000000, 0x1000000000000, 0x1d);
    TEST_IMM_OP(61, bexti, 0x0000000000000000, 0x2000000000000, 0x1e);
    TEST_IMM_OP(62, bexti, 0x0000000000000000, 0x4000000000000, 0x0);
    TEST_IMM_OP(63, bexti, 0x0000000000000000, 0x8000000000000, 0x10);
    TEST_IMM_OP(64, bexti, 0x0000000000000000, 0x10000000000000, 0x8);
    TEST_IMM_OP(65, bexti, 0x0000000000000000, 0x20000000000000, 0x4);
    TEST_IMM_OP(66, bexti, 0x0000000000000000, 0x40000000000000, 0x2);
    TEST_IMM_OP(67, bexti, 0x0000000000000000, 0x80000000000000, 0x1);
    TEST_IMM_OP(68, bexti, 0x0000000000000000, 0x100000000000000, 0x3);
    TEST_IMM_OP(69, bexti, 0x0000000000000000, 0x200000000000000, 0x1b);
    TEST_IMM_OP(70, bexti, 0x0000000000000000, 0x400000000000000, 0x0);
    TEST_IMM_OP(71, bexti, 0x0000000000000000, 0x800000000000000, 0x3);
    TEST_IMM_OP(72, bexti, 0x0000000000000000, 0x1000000000000000, 0xf);
    TEST_IMM_OP(73, bexti, 0x0000000000000000, 0x2000000000000000, 0xf);
    TEST_IMM_OP(74, bexti, 0x0000000000000000, 0x4000000000000000, 0xb);
    TEST_IMM_OP(75, bexti, 0x0000000000000000, 0x8000000000000000, 0x1b);
    TEST_IMM_OP(76, bexti, 0x0000000000000000, 0x0, 0x1);
    TEST_IMM_OP(77, bexti, 0x0000000000000001, 0xfffffffffffffffe, 0x15);
    TEST_IMM_OP(78, bexti, 0x0000000000000001, 0xfffffffffffffffd, 0x1f);
    TEST_IMM_OP(79, bexti, 0x0000000000000001, 0xfffffffffffffffb, 0xf);
    TEST_IMM_OP(80, bexti, 0x0000000000000001, 0xfffffffffffffff7, 0x17);
    TEST_IMM_OP(81, bexti, 0x0000000000000001, 0xffffffffffffffef, 0x1b);
    TEST_IMM_OP(82, bexti, 0x0000000000000001, 0xffffffffffffffdf, 0x1d);
    TEST_IMM_OP(83, bexti, 0x0000000000000001, 0xffffffffffffffbf, 0x1e);
    TEST_IMM_OP(84, bexti, 0x0000000000000001, 0xffffffffffffff7f, 0x0);
    TEST_IMM_OP(85, bexti, 0x0000000000000001, 0xfffffffffffffeff, 0x10);
    TEST_IMM_OP(86, bexti, 0x0000000000000001, 0xfffffffffffffdff, 0x8);
    TEST_IMM_OP(87, bexti, 0x0000000000000001, 0xfffffffffffffbff, 0x4);
    TEST_IMM_OP(88, bexti, 0x0000000000000001, 0xfffffffffffff7ff, 0x2);
    TEST_IMM_OP(89, bexti, 0x0000000000000001, 0xffffffffffffefff, 0x1);
    TEST_IMM_OP(90, bexti, 0x0000000000000001, 0xffffffffffffdfff, 0x3);
    TEST_IMM_OP(91, bexti, 0x0000000000000001, 0xffffffffffffbfff, 0x1b);
    TEST_IMM_OP(92, bexti, 0x0000000000000001, 0xffffffffffff7fff, 0x0);
    TEST_IMM_OP(93, bexti, 0x0000000000000001, 0xfffffffffffeffff, 0x3);
    TEST_IMM_OP(94, bexti, 0x0000000000000001, 0xfffffffffffdffff, 0xf);
    TEST_IMM_OP(95, bexti, 0x0000000000000001, 0xfffffffffffbffff, 0xf);
    TEST_IMM_OP(96, bexti, 0x0000000000000001, 0xfffffffffff7ffff, 0xb);
    TEST_IMM_OP(97, bexti, 0x0000000000000001, 0xffffffffffefffff, 0x1b);
    TEST_IMM_OP(98, bexti, 0x0000000000000001, 0xffffffffffdfffff, 0x1);
    TEST_IMM_OP(99, bexti, 0x0000000000000001, 0xffffffffffbfffff, 0x15);
    TEST_IMM_OP(100, bexti, 0x0000000000000001, 0xffffffffff7fffff, 0x1f);
    TEST_IMM_OP(101, bexti, 0x0000000000000001, 0xfffffffffeffffff, 0xf);
    TEST_IMM_OP(102, bexti, 0x0000000000000001, 0xfffffffffdffffff, 0x17);
    TEST_IMM_OP(103, bexti, 0x0000000000000001, 0xfffffffffbffffff, 0x1b);
    TEST_IMM_OP(104, bexti, 0x0000000000000001, 0xfffffffff7ffffff, 0x1d);
    TEST_IMM_OP(105, bexti, 0x0000000000000001, 0xffffffffefffffff, 0x1e);
    TEST_IMM_OP(106, bexti, 0x0000000000000001, 0xffffffffdfffffff, 0x0);
    TEST_IMM_OP(107, bexti, 0x0000000000000001, 0xffffffffbfffffff, 0x10);
    TEST_IMM_OP(108, bexti, 0x0000000000000001, 0xffffffff7fffffff, 0x8);
    TEST_IMM_OP(109, bexti, 0x0000000000000001, 0xfffffffeffffffff, 0x4);
    TEST_IMM_OP(110, bexti, 0x0000000000000001, 0xfffffffdffffffff, 0x2);
    TEST_IMM_OP(111, bexti, 0x0000000000000001, 0xfffffffbffffffff, 0x1);
    TEST_IMM_OP(112, bexti, 0x0000000000000001, 0xfffffff7ffffffff, 0x3);
    TEST_IMM_OP(113, bexti, 0x0000000000000001, 0xffffffefffffffff, 0x1b);
    TEST_IMM_OP(114, bexti, 0x0000000000000001, 0xffffffdfffffffff, 0x0);
    TEST_IMM_OP(115, bexti, 0x0000000000000001, 0xffffffbfffffffff, 0x3);
    TEST_IMM_OP(116, bexti, 0x0000000000000001, 0xffffff7fffffffff, 0xf);
    TEST_IMM_OP(117, bexti, 0x0000000000000001, 0xfffffeffffffffff, 0xf);
    TEST_IMM_OP(118, bexti, 0x0000000000000001, 0xfffffdffffffffff, 0xb);
    TEST_IMM_OP(119, bexti, 0x0000000000000001, 0xfffffbffffffffff, 0x1b);
    TEST_IMM_OP(120, bexti, 0x0000000000000001, 0xfffff7ffffffffff, 0x1);
    TEST_IMM_OP(121, bexti, 0x0000000000000001, 0xffffefffffffffff, 0x15);
    TEST_IMM_OP(122, bexti, 0x0000000000000001, 0xffffdfffffffffff, 0x1f);
    TEST_IMM_OP(123, bexti, 0x0000000000000001, 0xffffbfffffffffff, 0xf);
    TEST_IMM_OP(124, bexti, 0x0000000000000001, 0xffff7fffffffffff, 0x17);
    TEST_IMM_OP(125, bexti, 0x0000000000000001, 0xfffeffffffffffff, 0x1b);
    TEST_IMM_OP(126, bexti, 0x0000000000000001, 0xfffdffffffffffff, 0x1d);
    TEST_IMM_OP(127, bexti, 0x0000000000000001, 0xfffbffffffffffff, 0x1e);
    TEST_IMM_OP(128, bexti, 0x0000000000000001, 0xfff7ffffffffffff, 0x0);
    TEST_IMM_OP(129, bexti, 0x0000000000000001, 0xffefffffffffffff, 0x10);
    TEST_IMM_OP(130, bexti, 0x0000000000000001, 0xffdfffffffffffff, 0x8);
    TEST_IMM_OP(131, bexti, 0x0000000000000001, 0xffbfffffffffffff, 0x4);
    TEST_IMM_OP(132, bexti, 0x0000000000000001, 0xff7fffffffffffff, 0x0);
    TEST_IMM_OP(133, bexti, 0x0000000000000001, 0xfeffffffffffffff, 0x0);
    TEST_IMM_OP(134, bexti, 0x0000000000000001, 0xfdffffffffffffff, 0x0);
    TEST_IMM_OP(135, bexti, 0x0000000000000001, 0xfbffffffffffffff, 0x0);
    TEST_IMM_OP(136, bexti, 0x0000000000000001, 0xf7ffffffffffffff, 0x0);
    TEST_IMM_OP(137, bexti, 0x0000000000000001, 0xefffffffffffffff, 0x0);
    TEST_IMM_OP(138, bexti, 0x0000000000000001, 0xdfffffffffffffff, 0x0);
    TEST_IMM_OP(139, bexti, 0x0000000000000001, 0xbfffffffffffffff, 0x0);
    TEST_IMM_OP(140, bexti, 0x0000000000000001, 0x7fffffffffffffff, 0x0);
    TEST_IMM_OP(141, bexti, 0x0000000000000001, 0xffffffffffffffff, 0x0);
    TEST_IMM_OP(142, bexti, 0x0000000000000001, 0x1, 0x0);
    TEST_IMM_OP(143, bexti, 0x0000000000000000, 0x2, 0x0);
    TEST_IMM_OP(144, bexti, 0x0000000000000000, 0x4, 0x0);
    TEST_IMM_OP(145, bexti, 0x0000000000000000, 0x8, 0x0);
    TEST_IMM_OP(146, bexti, 0x0000000000000000, 0x10, 0x0);
    TEST_IMM_OP(147, bexti, 0x0000000000000000, 0x20, 0x0);
    TEST_IMM_OP(148, bexti, 0x0000000000000000, 0x40, 0x0);
    TEST_IMM_OP(149, bexti, 0x0000000000000000, 0x80, 0x0);
    TEST_IMM_OP(150, bexti, 0x0000000000000000, 0x100, 0x0);
    TEST_IMM_OP(151, bexti, 0x0000000000000000, 0x200, 0x0);
    TEST_IMM_OP(152, bexti, 0x0000000000000000, 0x400, 0x0);
    TEST_IMM_OP(153, bexti, 0x0000000000000000, 0x800, 0x0);
    TEST_IMM_OP(154, bexti, 0x0000000000000000, 0x1000, 0x0);
    TEST_IMM_OP(155, bexti, 0x0000000000000000, 0x2000, 0x0);
    TEST_IMM_OP(156, bexti, 0x0000000000000000, 0x4000, 0x0);
    TEST_IMM_OP(157, bexti, 0x0000000000000000, 0x8000, 0x0);
    TEST_IMM_OP(158, bexti, 0x0000000000000000, 0x10000, 0x0);
    TEST_IMM_OP(159, bexti, 0x0000000000000000, 0x20000, 0x0);
    TEST_IMM_OP(160, bexti, 0x0000000000000000, 0x40000, 0x0);
    TEST_IMM_OP(161, bexti, 0x0000000000000000, 0x80000, 0x0);
    TEST_IMM_OP(162, bexti, 0x0000000000000000, 0x100000, 0x0);
    TEST_IMM_OP(163, bexti, 0x0000000000000000, 0x200000, 0x0);
    TEST_IMM_OP(164, bexti, 0x0000000000000000, 0x400000, 0x0);
    TEST_IMM_OP(165, bexti, 0x0000000000000000, 0x800000, 0x0);
    TEST_IMM_OP(166, bexti, 0x0000000000000000, 0x1000000, 0x0);
    TEST_IMM_OP(167, bexti, 0x0000000000000000, 0x2000000, 0x0);
    TEST_IMM_OP(168, bexti, 0x0000000000000000, 0x4000000, 0x0);
    TEST_IMM_OP(169, bexti, 0x0000000000000000, 0x8000000, 0x0);
    TEST_IMM_OP(170, bexti, 0x0000000000000000, 0x10000000, 0x0);
    TEST_IMM_OP(171, bexti, 0x0000000000000000, 0x20000000, 0x0);
    TEST_IMM_OP(172, bexti, 0x0000000000000000, 0x40000000, 0x0);
    TEST_IMM_OP(173, bexti, 0x0000000000000000, 0x80000000, 0x0);
    TEST_IMM_OP(174, bexti, 0x0000000000000000, 0x100000000, 0x0);
    TEST_IMM_OP(175, bexti, 0x0000000000000000, 0x200000000, 0x0);
    TEST_IMM_OP(176, bexti, 0x0000000000000000, 0x400000000, 0x0);
    TEST_IMM_OP(177, bexti, 0x0000000000000000, 0x800000000, 0x0);
    TEST_IMM_OP(178, bexti, 0x0000000000000000, 0x1000000000, 0x0);
    TEST_IMM_OP(179, bexti, 0x0000000000000000, 0x2000000000, 0x0);
    TEST_IMM_OP(180, bexti, 0x0000000000000000, 0x4000000000, 0x0);
    TEST_IMM_OP(181, bexti, 0x0000000000000000, 0x8000000000, 0x0);
    TEST_IMM_OP(182, bexti, 0x0000000000000000, 0x10000000000, 0x0);
    TEST_IMM_OP(183, bexti, 0x0000000000000000, 0x20000000000, 0x0);
    TEST_IMM_OP(184, bexti, 0x0000000000000000, 0x40000000000, 0x0);
    TEST_IMM_OP(185, bexti, 0x0000000000000000, 0x80000000000, 0x0);
    TEST_IMM_OP(186, bexti, 0x0000000000000000, 0x100000000000, 0x0);
    TEST_IMM_OP(187, bexti, 0x0000000000000000, 0x200000000000, 0x0);
    TEST_IMM_OP(188, bexti, 0x0000000000000000, 0x400000000000, 0x0);
    TEST_IMM_OP(189, bexti, 0x0000000000000000, 0x800000000000, 0x0);
    TEST_IMM_OP(190, bexti, 0x0000000000000000, 0x1000000000000, 0x0);
    TEST_IMM_OP(191, bexti, 0x0000000000000000, 0x2000000000000, 0x0);
    TEST_IMM_OP(192, bexti, 0x0000000000000000, 0x4000000000000, 0x0);
    TEST_IMM_OP(193, bexti, 0x0000000000000000, 0x8000000000000, 0x0);
    TEST_IMM_OP(194, bexti, 0x0000000000000000, 0x10000000000000, 0x0);
    TEST_IMM_OP(195, bexti, 0x0000000000000000, 0x20000000000000, 0x0);
    TEST_IMM_OP(196, bexti, 0x0000000000000000, 0x40000000000000, 0x0);
    TEST_IMM_OP(197, bexti, 0x0000000000000000, 0x80000000000000, 0x0);
    TEST_IMM_OP(198, bexti, 0x0000000000000000, 0x100000000000000, 0x0);
    TEST_IMM_OP(199, bexti, 0x0000000000000000, 0x200000000000000, 0x0);
    TEST_IMM_OP(200, bexti, 0x0000000000000000, 0x400000000000000, 0x0);
    TEST_IMM_OP(201, bexti, 0x0000000000000000, 0x800000000000000, 0x0);
    TEST_IMM_OP(202, bexti, 0x0000000000000000, 0x1000000000000000, 0x0);
    TEST_IMM_OP(203, bexti, 0x0000000000000000, 0x2000000000000000, 0x0);
    TEST_IMM_OP(204, bexti, 0x0000000000000000, 0x4000000000000000, 0x0);
    TEST_IMM_OP(205, bexti, 0x0000000000000000, 0x8000000000000000, 0x0);
    TEST_IMM_OP(206, bexti, 0x0000000000000000, 0x0, 0x0);
    TEST_IMM_OP(207, bexti, 0x0000000000000000, 0xfffffffffffffffe, 0x0);
    TEST_IMM_OP(208, bexti, 0x0000000000000001, 0xfffffffffffffffd, 0x0);
    TEST_IMM_OP(209, bexti, 0x0000000000000001, 0xfffffffffffffffb, 0x0);
    TEST_IMM_OP(210, bexti, 0x0000000000000001, 0xfffffffffffffff7, 0x0);
    TEST_IMM_OP(211, bexti, 0x0000000000000001, 0xffffffffffffffef, 0x0);
    TEST_IMM_OP(212, bexti, 0x0000000000000001, 0xffffffffffffffdf, 0x0);
    TEST_IMM_OP(213, bexti, 0x0000000000000001, 0xffffffffffffffbf, 0x0);
    TEST_IMM_OP(214, bexti, 0x0000000000000001, 0xffffffffffffff7f, 0x0);
    TEST_IMM_OP(215, bexti, 0x0000000000000001, 0xfffffffffffffeff, 0x0);
    TEST_IMM_OP(216, bexti, 0x0000000000000001, 0xfffffffffffffdff, 0x0);
    TEST_IMM_OP(217, bexti, 0x0000000000000001, 0xfffffffffffffbff, 0x0);
    TEST_IMM_OP(218, bexti, 0x0000000000000001, 0xfffffffffffff7ff, 0x0);
    TEST_IMM_OP(219, bexti, 0x0000000000000001, 0xffffffffffffefff, 0x0);
    TEST_IMM_OP(220, bexti, 0x0000000000000001, 0xffffffffffffdfff, 0x0);
    TEST_IMM_OP(221, bexti, 0x0000000000000001, 0xffffffffffffbfff, 0x0);
    TEST_IMM_OP(222, bexti, 0x0000000000000001, 0xffffffffffff7fff, 0x0);
    TEST_IMM_OP(223, bexti, 0x0000000000000001, 0xfffffffffffeffff, 0x0);
    TEST_IMM_OP(224, bexti, 0x0000000000000001, 0xfffffffffffdffff, 0x0);
    TEST_IMM_OP(225, bexti, 0x0000000000000001, 0xfffffffffffbffff, 0x0);
    TEST_IMM_OP(226, bexti, 0x0000000000000001, 0xfffffffffff7ffff, 0x0);
    TEST_IMM_OP(227, bexti, 0x0000000000000001, 0xffffffffffefffff, 0x0);
    TEST_IMM_OP(228, bexti, 0x0000000000000001, 0xffffffffffdfffff, 0x0);
    TEST_IMM_OP(229, bexti, 0x0000000000000001, 0xffffffffffbfffff, 0x0);
    TEST_IMM_OP(230, bexti, 0x0000000000000001, 0xffffffffff7fffff, 0x0);
    TEST_IMM_OP(231, bexti, 0x0000000000000001, 0xfffffffffeffffff, 0x0);
    TEST_IMM_OP(232, bexti, 0x0000000000000001, 0xfffffffffdffffff, 0x0);
    TEST_IMM_OP(233, bexti, 0x0000000000000001, 0xfffffffffbffffff, 0x0);
    TEST_IMM_OP(234, bexti, 0x0000000000000001, 0xfffffffff7ffffff, 0x0);
    TEST_IMM_OP(235, bexti, 0x0000000000000001, 0xffffffffefffffff, 0x0);
    TEST_IMM_OP(236, bexti, 0x0000000000000001, 0xffffffffdfffffff, 0x0);
    TEST_IMM_OP(237, bexti, 0x0000000000000001, 0xffffffffbfffffff, 0x0);
    TEST_IMM_OP(238, bexti, 0x0000000000000001, 0xffffffff7fffffff, 0x0);
    TEST_IMM_OP(239, bexti, 0x0000000000000001, 0xfffffffeffffffff, 0x0);
    TEST_IMM_OP(240, bexti, 0x0000000000000001, 0xfffffffdffffffff, 0x0);
    TEST_IMM_OP(241, bexti, 0x0000000000000001, 0xfffffffbffffffff, 0x0);
    TEST_IMM_OP(242, bexti, 0x0000000000000001, 0xfffffff7ffffffff, 0x0);
    TEST_IMM_OP(243, bexti, 0x0000000000000001, 0xffffffefffffffff, 0x0);
    TEST_IMM_OP(244, bexti, 0x0000000000000001, 0xffffffdfffffffff, 0x0);
    TEST_IMM_OP(245, bexti, 0x0000000000000001, 0xffffffbfffffffff, 0x0);
    TEST_IMM_OP(246, bexti, 0x0000000000000001, 0xffffff7fffffffff, 0x0);
    TEST_IMM_OP(247, bexti, 0x0000000000000001, 0xfffffeffffffffff, 0x0);
    TEST_IMM_OP(248, bexti, 0x0000000000000001, 0xfffffdffffffffff, 0x0);
    TEST_IMM_OP(249, bexti, 0x0000000000000001, 0xfffffbffffffffff, 0x0);
    TEST_IMM_OP(250, bexti, 0x0000000000000001, 0xfffff7ffffffffff, 0x0);
    TEST_IMM_OP(251, bexti, 0x0000000000000001, 0xffffefffffffffff, 0x0);
    TEST_IMM_OP(252, bexti, 0x0000000000000001, 0xffffdfffffffffff, 0x0);
    TEST_IMM_OP(253, bexti, 0x0000000000000001, 0xffffbfffffffffff, 0x0);
    TEST_IMM_OP(254, bexti, 0x0000000000000001, 0xffff7fffffffffff, 0x0);
    TEST_IMM_OP(255, bexti, 0x0000000000000001, 0xfffeffffffffffff, 0x0);
    TEST_IMM_OP(256, bexti, 0x0000000000000001, 0xfffdffffffffffff, 0x0);
    TEST_IMM_OP(257, bexti, 0x0000000000000001, 0xfffbffffffffffff, 0x0);
    TEST_IMM_OP(258, bexti, 0x0000000000000001, 0xfff7ffffffffffff, 0x0);
    TEST_IMM_OP(259, bexti, 0x0000000000000001, 0xffefffffffffffff, 0x0);
    TEST_IMM_OP(260, bexti, 0x0000000000000001, 0xffdfffffffffffff, 0x0);
    TEST_IMM_OP(261, bexti, 0x0000000000000001, 0xffbfffffffffffff, 0x0);
    TEST_IMM_OP(262, bexti, 0x0000000000000001, 0xff7fffffffffffff, 0x8);
    TEST_IMM_OP(263, bexti, 0x0000000000000001, 0xfeffffffffffffff, 0x4);
    TEST_IMM_OP(264, bexti, 0x0000000000000001, 0xfdffffffffffffff, 0x2);
    TEST_IMM_OP(265, bexti, 0x0000000000000001, 0xfbffffffffffffff, 0x1);
    TEST_IMM_OP(266, bexti, 0x0000000000000001, 0xf7ffffffffffffff, 0x3);
    TEST_IMM_OP(267, bexti, 0x0000000000000001, 0xefffffffffffffff, 0x1b);
    TEST_IMM_OP(268, bexti, 0x0000000000000001, 0xdfffffffffffffff, 0x0);
    TEST_IMM_OP(269, bexti, 0x0000000000000001, 0xbfffffffffffffff, 0x3);
    TEST_IMM_OP(270, bexti, 0x0000000000000001, 0x7fffffffffffffff, 0xf);
    TEST_IMM_OP(271, bexti, 0x0000000000000001, 0xffffffffffffffff, 0xf);

TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

