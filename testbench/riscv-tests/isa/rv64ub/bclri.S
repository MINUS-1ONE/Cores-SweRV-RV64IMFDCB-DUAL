# See LICENSE for license details.

#*****************************************************************************
# bclri.S
#-----------------------------------------------------------------------------
#
# Test bclri instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_IMM_OP(2, bclri, 0x10fd3dedadea5195, 0x10fd3dedadea5195, 0x3);
    TEST_IMM_OP(3, bclri, 0xbd295ce2d2ffbec1, 0xbd295ce2d2ffbec1, 0x1b);
    TEST_IMM_OP(4, bclri, 0xc9649f05a8e1a8ba, 0xc9649f05a8e1a8bb, 0x0);
    TEST_IMM_OP(5, bclri, 0x3541291848c99fc3, 0x3541291848c99fcb, 0x3);
    TEST_IMM_OP(6, bclri, 0x10a24740461d524f, 0x10a24740461d524f, 0xf);
    TEST_IMM_OP(7, bclri, 0x546b0e54528a10af, 0x546b0e54528a10af, 0xf);
    TEST_IMM_OP(8, bclri, 0x73a92fd4e19bf3c3, 0x73a92fd4e19bfbc3, 0xb);
    TEST_IMM_OP(9, bclri, 0x82f6747f707af2c0, 0x82f6747f707af2c0, 0x1b);
    TEST_IMM_OP(10, bclri, 0xf5adb41aa47d1059, 0xf5adb41aa47d105b, 0x1);
    TEST_IMM_OP(11, bclri, 0xdf7f3844121bcc23, 0xdf7f3844121bcc23, 0x15);
    TEST_IMM_OP(12, bclri, 0x0000000000000001, 0x1, 0x1f);
    TEST_IMM_OP(13, bclri, 0x0000000000000002, 0x2, 0xf);
    TEST_IMM_OP(14, bclri, 0x0000000000000004, 0x4, 0x17);
    TEST_IMM_OP(15, bclri, 0x0000000000000008, 0x8, 0x1b);
    TEST_IMM_OP(16, bclri, 0x0000000000000010, 0x10, 0x1d);
    TEST_IMM_OP(17, bclri, 0x0000000000000020, 0x20, 0x1e);
    TEST_IMM_OP(18, bclri, 0x0000000000000040, 0x40, 0x0);
    TEST_IMM_OP(19, bclri, 0x0000000000000080, 0x80, 0x10);
    TEST_IMM_OP(20, bclri, 0x0000000000000000, 0x100, 0x8);
    TEST_IMM_OP(21, bclri, 0x0000000000000200, 0x200, 0x4);
    TEST_IMM_OP(22, bclri, 0x0000000000000400, 0x400, 0x2);
    TEST_IMM_OP(23, bclri, 0x0000000000000800, 0x800, 0x1);
    TEST_IMM_OP(24, bclri, 0x0000000000001000, 0x1000, 0x3);
    TEST_IMM_OP(25, bclri, 0x0000000000002000, 0x2000, 0x1b);
    TEST_IMM_OP(26, bclri, 0x0000000000004000, 0x4000, 0x0);
    TEST_IMM_OP(27, bclri, 0x0000000000008000, 0x8000, 0x3);
    TEST_IMM_OP(28, bclri, 0x0000000000010000, 0x10000, 0xf);
    TEST_IMM_OP(29, bclri, 0x0000000000020000, 0x20000, 0xf);
    TEST_IMM_OP(30, bclri, 0x0000000000040000, 0x40000, 0xb);
    TEST_IMM_OP(31, bclri, 0x0000000000080000, 0x80000, 0x1b);
    TEST_IMM_OP(32, bclri, 0x0000000000100000, 0x100000, 0x1);
    TEST_IMM_OP(33, bclri, 0x0000000000000000, 0x200000, 0x15);
    TEST_IMM_OP(34, bclri, 0x0000000000400000, 0x400000, 0x1f);
    TEST_IMM_OP(35, bclri, 0x0000000000800000, 0x800000, 0xf);
    TEST_IMM_OP(36, bclri, 0x0000000001000000, 0x1000000, 0x17);
    TEST_IMM_OP(37, bclri, 0x0000000002000000, 0x2000000, 0x1b);
    TEST_IMM_OP(38, bclri, 0x0000000004000000, 0x4000000, 0x1d);
    TEST_IMM_OP(39, bclri, 0x0000000008000000, 0x8000000, 0x1e);
    TEST_IMM_OP(40, bclri, 0x0000000010000000, 0x10000000, 0x0);
    TEST_IMM_OP(41, bclri, 0x0000000020000000, 0x20000000, 0x10);
    TEST_IMM_OP(42, bclri, 0x0000000040000000, 0x40000000, 0x8);
    TEST_IMM_OP(43, bclri, 0x0000000080000000, 0x80000000, 0x4);
    TEST_IMM_OP(44, bclri, 0x0000000100000000, 0x100000000, 0x2);
    TEST_IMM_OP(45, bclri, 0x0000000200000000, 0x200000000, 0x1);
    TEST_IMM_OP(46, bclri, 0x0000000400000000, 0x400000000, 0x3);
    TEST_IMM_OP(47, bclri, 0x0000000800000000, 0x800000000, 0x1b);
    TEST_IMM_OP(48, bclri, 0x0000001000000000, 0x1000000000, 0x0);
    TEST_IMM_OP(49, bclri, 0x0000002000000000, 0x2000000000, 0x3);
    TEST_IMM_OP(50, bclri, 0x0000004000000000, 0x4000000000, 0xf);
    TEST_IMM_OP(51, bclri, 0x0000008000000000, 0x8000000000, 0xf);
    TEST_IMM_OP(52, bclri, 0x0000010000000000, 0x10000000000, 0xb);
    TEST_IMM_OP(53, bclri, 0x0000020000000000, 0x20000000000, 0x1b);
    TEST_IMM_OP(54, bclri, 0x0000040000000000, 0x40000000000, 0x1);
    TEST_IMM_OP(55, bclri, 0x0000080000000000, 0x80000000000, 0x15);
    TEST_IMM_OP(56, bclri, 0x0000100000000000, 0x100000000000, 0x1f);
    TEST_IMM_OP(57, bclri, 0x0000200000000000, 0x200000000000, 0xf);
    TEST_IMM_OP(58, bclri, 0x0000400000000000, 0x400000000000, 0x17);
    TEST_IMM_OP(59, bclri, 0x0000800000000000, 0x800000000000, 0x1b);
    TEST_IMM_OP(60, bclri, 0x0001000000000000, 0x1000000000000, 0x1d);
    TEST_IMM_OP(61, bclri, 0x0002000000000000, 0x2000000000000, 0x1e);
    TEST_IMM_OP(62, bclri, 0x0004000000000000, 0x4000000000000, 0x0);
    TEST_IMM_OP(63, bclri, 0x0008000000000000, 0x8000000000000, 0x10);
    TEST_IMM_OP(64, bclri, 0x0010000000000000, 0x10000000000000, 0x8);
    TEST_IMM_OP(65, bclri, 0x0020000000000000, 0x20000000000000, 0x4);
    TEST_IMM_OP(66, bclri, 0x0040000000000000, 0x40000000000000, 0x2);
    TEST_IMM_OP(67, bclri, 0x0080000000000000, 0x80000000000000, 0x1);
    TEST_IMM_OP(68, bclri, 0x0100000000000000, 0x100000000000000, 0x3);
    TEST_IMM_OP(69, bclri, 0x0200000000000000, 0x200000000000000, 0x1b);
    TEST_IMM_OP(70, bclri, 0x0400000000000000, 0x400000000000000, 0x0);
    TEST_IMM_OP(71, bclri, 0x0800000000000000, 0x800000000000000, 0x3);
    TEST_IMM_OP(72, bclri, 0x1000000000000000, 0x1000000000000000, 0xf);
    TEST_IMM_OP(73, bclri, 0x2000000000000000, 0x2000000000000000, 0xf);
    TEST_IMM_OP(74, bclri, 0x4000000000000000, 0x4000000000000000, 0xb);
    TEST_IMM_OP(75, bclri, 0x8000000000000000, 0x8000000000000000, 0x1b);
    TEST_IMM_OP(76, bclri, 0x0000000000000000, 0x0, 0x1);
    TEST_IMM_OP(77, bclri, 0xffffffffffdffffe, 0xfffffffffffffffe, 0x15);
    TEST_IMM_OP(78, bclri, 0xffffffff7ffffffd, 0xfffffffffffffffd, 0x1f);
    TEST_IMM_OP(79, bclri, 0xffffffffffff7ffb, 0xfffffffffffffffb, 0xf);
    TEST_IMM_OP(80, bclri, 0xffffffffff7ffff7, 0xfffffffffffffff7, 0x17);
    TEST_IMM_OP(81, bclri, 0xfffffffff7ffffef, 0xffffffffffffffef, 0x1b);
    TEST_IMM_OP(82, bclri, 0xffffffffdfffffdf, 0xffffffffffffffdf, 0x1d);
    TEST_IMM_OP(83, bclri, 0xffffffffbfffffbf, 0xffffffffffffffbf, 0x1e);
    TEST_IMM_OP(84, bclri, 0xffffffffffffff7e, 0xffffffffffffff7f, 0x0);
    TEST_IMM_OP(85, bclri, 0xfffffffffffefeff, 0xfffffffffffffeff, 0x10);
    TEST_IMM_OP(86, bclri, 0xfffffffffffffcff, 0xfffffffffffffdff, 0x8);
    TEST_IMM_OP(87, bclri, 0xfffffffffffffbef, 0xfffffffffffffbff, 0x4);
    TEST_IMM_OP(88, bclri, 0xfffffffffffff7fb, 0xfffffffffffff7ff, 0x2);
    TEST_IMM_OP(89, bclri, 0xffffffffffffeffd, 0xffffffffffffefff, 0x1);
    TEST_IMM_OP(90, bclri, 0xffffffffffffdff7, 0xffffffffffffdfff, 0x3);
    TEST_IMM_OP(91, bclri, 0xfffffffff7ffbfff, 0xffffffffffffbfff, 0x1b);
    TEST_IMM_OP(92, bclri, 0xffffffffffff7ffe, 0xffffffffffff7fff, 0x0);
    TEST_IMM_OP(93, bclri, 0xfffffffffffefff7, 0xfffffffffffeffff, 0x3);
    TEST_IMM_OP(94, bclri, 0xfffffffffffd7fff, 0xfffffffffffdffff, 0xf);
    TEST_IMM_OP(95, bclri, 0xfffffffffffb7fff, 0xfffffffffffbffff, 0xf);
    TEST_IMM_OP(96, bclri, 0xfffffffffff7f7ff, 0xfffffffffff7ffff, 0xb);
    TEST_IMM_OP(97, bclri, 0xfffffffff7efffff, 0xffffffffffefffff, 0x1b);
    TEST_IMM_OP(98, bclri, 0xffffffffffdffffd, 0xffffffffffdfffff, 0x1);
    TEST_IMM_OP(99, bclri, 0xffffffffff9fffff, 0xffffffffffbfffff, 0x15);
    TEST_IMM_OP(100, bclri, 0xffffffff7f7fffff, 0xffffffffff7fffff, 0x1f);
    TEST_IMM_OP(101, bclri, 0xfffffffffeff7fff, 0xfffffffffeffffff, 0xf);
    TEST_IMM_OP(102, bclri, 0xfffffffffd7fffff, 0xfffffffffdffffff, 0x17);
    TEST_IMM_OP(103, bclri, 0xfffffffff3ffffff, 0xfffffffffbffffff, 0x1b);
    TEST_IMM_OP(104, bclri, 0xffffffffd7ffffff, 0xfffffffff7ffffff, 0x1d);
    TEST_IMM_OP(105, bclri, 0xffffffffafffffff, 0xffffffffefffffff, 0x1e);
    TEST_IMM_OP(106, bclri, 0xffffffffdffffffe, 0xffffffffdfffffff, 0x0);
    TEST_IMM_OP(107, bclri, 0xffffffffbffeffff, 0xffffffffbfffffff, 0x10);
    TEST_IMM_OP(108, bclri, 0xffffffff7ffffeff, 0xffffffff7fffffff, 0x8);
    TEST_IMM_OP(109, bclri, 0xfffffffeffffffef, 0xfffffffeffffffff, 0x4);
    TEST_IMM_OP(110, bclri, 0xfffffffdfffffffb, 0xfffffffdffffffff, 0x2);
    TEST_IMM_OP(111, bclri, 0xfffffffbfffffffd, 0xfffffffbffffffff, 0x1);
    TEST_IMM_OP(112, bclri, 0xfffffff7fffffff7, 0xfffffff7ffffffff, 0x3);
    TEST_IMM_OP(113, bclri, 0xffffffeff7ffffff, 0xffffffefffffffff, 0x1b);
    TEST_IMM_OP(114, bclri, 0xffffffdffffffffe, 0xffffffdfffffffff, 0x0);
    TEST_IMM_OP(115, bclri, 0xffffffbffffffff7, 0xffffffbfffffffff, 0x3);
    TEST_IMM_OP(116, bclri, 0xffffff7fffff7fff, 0xffffff7fffffffff, 0xf);
    TEST_IMM_OP(117, bclri, 0xfffffeffffff7fff, 0xfffffeffffffffff, 0xf);
    TEST_IMM_OP(118, bclri, 0xfffffdfffffff7ff, 0xfffffdffffffffff, 0xb);
    TEST_IMM_OP(119, bclri, 0xfffffbfff7ffffff, 0xfffffbffffffffff, 0x1b);
    TEST_IMM_OP(120, bclri, 0xfffff7fffffffffd, 0xfffff7ffffffffff, 0x1);
    TEST_IMM_OP(121, bclri, 0xffffefffffdfffff, 0xffffefffffffffff, 0x15);
    TEST_IMM_OP(122, bclri, 0xffffdfff7fffffff, 0xffffdfffffffffff, 0x1f);
    TEST_IMM_OP(123, bclri, 0xffffbfffffff7fff, 0xffffbfffffffffff, 0xf);
    TEST_IMM_OP(124, bclri, 0xffff7fffff7fffff, 0xffff7fffffffffff, 0x17);
    TEST_IMM_OP(125, bclri, 0xfffefffff7ffffff, 0xfffeffffffffffff, 0x1b);
    TEST_IMM_OP(126, bclri, 0xfffdffffdfffffff, 0xfffdffffffffffff, 0x1d);
    TEST_IMM_OP(127, bclri, 0xfffbffffbfffffff, 0xfffbffffffffffff, 0x1e);
    TEST_IMM_OP(128, bclri, 0xfff7fffffffffffe, 0xfff7ffffffffffff, 0x0);
    TEST_IMM_OP(129, bclri, 0xffeffffffffeffff, 0xffefffffffffffff, 0x10);
    TEST_IMM_OP(130, bclri, 0xffdffffffffffeff, 0xffdfffffffffffff, 0x8);
    TEST_IMM_OP(131, bclri, 0xffbfffffffffffef, 0xffbfffffffffffff, 0x4);
    TEST_IMM_OP(132, bclri, 0xff7ffffffffffffe, 0xff7fffffffffffff, 0x0);
    TEST_IMM_OP(133, bclri, 0xfefffffffffffffe, 0xfeffffffffffffff, 0x0);
    TEST_IMM_OP(134, bclri, 0xfdfffffffffffffe, 0xfdffffffffffffff, 0x0);
    TEST_IMM_OP(135, bclri, 0xfbfffffffffffffe, 0xfbffffffffffffff, 0x0);
    TEST_IMM_OP(136, bclri, 0xf7fffffffffffffe, 0xf7ffffffffffffff, 0x0);
    TEST_IMM_OP(137, bclri, 0xeffffffffffffffe, 0xefffffffffffffff, 0x0);
    TEST_IMM_OP(138, bclri, 0xdffffffffffffffe, 0xdfffffffffffffff, 0x0);
    TEST_IMM_OP(139, bclri, 0xbffffffffffffffe, 0xbfffffffffffffff, 0x0);
    TEST_IMM_OP(140, bclri, 0x7ffffffffffffffe, 0x7fffffffffffffff, 0x0);
    TEST_IMM_OP(141, bclri, 0xfffffffffffffffe, 0xffffffffffffffff, 0x0);
    TEST_IMM_OP(142, bclri, 0x0000000000000000, 0x1, 0x0);
    TEST_IMM_OP(143, bclri, 0x0000000000000002, 0x2, 0x0);
    TEST_IMM_OP(144, bclri, 0x0000000000000004, 0x4, 0x0);
    TEST_IMM_OP(145, bclri, 0x0000000000000008, 0x8, 0x0);
    TEST_IMM_OP(146, bclri, 0x0000000000000010, 0x10, 0x0);
    TEST_IMM_OP(147, bclri, 0x0000000000000020, 0x20, 0x0);
    TEST_IMM_OP(148, bclri, 0x0000000000000040, 0x40, 0x0);
    TEST_IMM_OP(149, bclri, 0x0000000000000080, 0x80, 0x0);
    TEST_IMM_OP(150, bclri, 0x0000000000000100, 0x100, 0x0);
    TEST_IMM_OP(151, bclri, 0x0000000000000200, 0x200, 0x0);
    TEST_IMM_OP(152, bclri, 0x0000000000000400, 0x400, 0x0);
    TEST_IMM_OP(153, bclri, 0x0000000000000800, 0x800, 0x0);
    TEST_IMM_OP(154, bclri, 0x0000000000001000, 0x1000, 0x0);
    TEST_IMM_OP(155, bclri, 0x0000000000002000, 0x2000, 0x0);
    TEST_IMM_OP(156, bclri, 0x0000000000004000, 0x4000, 0x0);
    TEST_IMM_OP(157, bclri, 0x0000000000008000, 0x8000, 0x0);
    TEST_IMM_OP(158, bclri, 0x0000000000010000, 0x10000, 0x0);
    TEST_IMM_OP(159, bclri, 0x0000000000020000, 0x20000, 0x0);
    TEST_IMM_OP(160, bclri, 0x0000000000040000, 0x40000, 0x0);
    TEST_IMM_OP(161, bclri, 0x0000000000080000, 0x80000, 0x0);
    TEST_IMM_OP(162, bclri, 0x0000000000100000, 0x100000, 0x0);
    TEST_IMM_OP(163, bclri, 0x0000000000200000, 0x200000, 0x0);
    TEST_IMM_OP(164, bclri, 0x0000000000400000, 0x400000, 0x0);
    TEST_IMM_OP(165, bclri, 0x0000000000800000, 0x800000, 0x0);
    TEST_IMM_OP(166, bclri, 0x0000000001000000, 0x1000000, 0x0);
    TEST_IMM_OP(167, bclri, 0x0000000002000000, 0x2000000, 0x0);
    TEST_IMM_OP(168, bclri, 0x0000000004000000, 0x4000000, 0x0);
    TEST_IMM_OP(169, bclri, 0x0000000008000000, 0x8000000, 0x0);
    TEST_IMM_OP(170, bclri, 0x0000000010000000, 0x10000000, 0x0);
    TEST_IMM_OP(171, bclri, 0x0000000020000000, 0x20000000, 0x0);
    TEST_IMM_OP(172, bclri, 0x0000000040000000, 0x40000000, 0x0);
    TEST_IMM_OP(173, bclri, 0x0000000080000000, 0x80000000, 0x0);
    TEST_IMM_OP(174, bclri, 0x0000000100000000, 0x100000000, 0x0);
    TEST_IMM_OP(175, bclri, 0x0000000200000000, 0x200000000, 0x0);
    TEST_IMM_OP(176, bclri, 0x0000000400000000, 0x400000000, 0x0);
    TEST_IMM_OP(177, bclri, 0x0000000800000000, 0x800000000, 0x0);
    TEST_IMM_OP(178, bclri, 0x0000001000000000, 0x1000000000, 0x0);
    TEST_IMM_OP(179, bclri, 0x0000002000000000, 0x2000000000, 0x0);
    TEST_IMM_OP(180, bclri, 0x0000004000000000, 0x4000000000, 0x0);
    TEST_IMM_OP(181, bclri, 0x0000008000000000, 0x8000000000, 0x0);
    TEST_IMM_OP(182, bclri, 0x0000010000000000, 0x10000000000, 0x0);
    TEST_IMM_OP(183, bclri, 0x0000020000000000, 0x20000000000, 0x0);
    TEST_IMM_OP(184, bclri, 0x0000040000000000, 0x40000000000, 0x0);
    TEST_IMM_OP(185, bclri, 0x0000080000000000, 0x80000000000, 0x0);
    TEST_IMM_OP(186, bclri, 0x0000100000000000, 0x100000000000, 0x0);
    TEST_IMM_OP(187, bclri, 0x0000200000000000, 0x200000000000, 0x0);
    TEST_IMM_OP(188, bclri, 0x0000400000000000, 0x400000000000, 0x0);
    TEST_IMM_OP(189, bclri, 0x0000800000000000, 0x800000000000, 0x0);
    TEST_IMM_OP(190, bclri, 0x0001000000000000, 0x1000000000000, 0x0);
    TEST_IMM_OP(191, bclri, 0x0002000000000000, 0x2000000000000, 0x0);
    TEST_IMM_OP(192, bclri, 0x0004000000000000, 0x4000000000000, 0x0);
    TEST_IMM_OP(193, bclri, 0x0008000000000000, 0x8000000000000, 0x0);
    TEST_IMM_OP(194, bclri, 0x0010000000000000, 0x10000000000000, 0x0);
    TEST_IMM_OP(195, bclri, 0x0020000000000000, 0x20000000000000, 0x0);
    TEST_IMM_OP(196, bclri, 0x0040000000000000, 0x40000000000000, 0x0);
    TEST_IMM_OP(197, bclri, 0x0080000000000000, 0x80000000000000, 0x0);
    TEST_IMM_OP(198, bclri, 0x0100000000000000, 0x100000000000000, 0x0);
    TEST_IMM_OP(199, bclri, 0x0200000000000000, 0x200000000000000, 0x0);
    TEST_IMM_OP(200, bclri, 0x0400000000000000, 0x400000000000000, 0x0);
    TEST_IMM_OP(201, bclri, 0x0800000000000000, 0x800000000000000, 0x0);
    TEST_IMM_OP(202, bclri, 0x1000000000000000, 0x1000000000000000, 0x0);
    TEST_IMM_OP(203, bclri, 0x2000000000000000, 0x2000000000000000, 0x0);
    TEST_IMM_OP(204, bclri, 0x4000000000000000, 0x4000000000000000, 0x0);
    TEST_IMM_OP(205, bclri, 0x8000000000000000, 0x8000000000000000, 0x0);
    TEST_IMM_OP(206, bclri, 0x0000000000000000, 0x0, 0x0);
    TEST_IMM_OP(207, bclri, 0xfffffffffffffffe, 0xfffffffffffffffe, 0x0);
    TEST_IMM_OP(208, bclri, 0xfffffffffffffffc, 0xfffffffffffffffd, 0x0);
    TEST_IMM_OP(209, bclri, 0xfffffffffffffffa, 0xfffffffffffffffb, 0x0);
    TEST_IMM_OP(210, bclri, 0xfffffffffffffff6, 0xfffffffffffffff7, 0x0);
    TEST_IMM_OP(211, bclri, 0xffffffffffffffee, 0xffffffffffffffef, 0x0);
    TEST_IMM_OP(212, bclri, 0xffffffffffffffde, 0xffffffffffffffdf, 0x0);
    TEST_IMM_OP(213, bclri, 0xffffffffffffffbe, 0xffffffffffffffbf, 0x0);
    TEST_IMM_OP(214, bclri, 0xffffffffffffff7e, 0xffffffffffffff7f, 0x0);
    TEST_IMM_OP(215, bclri, 0xfffffffffffffefe, 0xfffffffffffffeff, 0x0);
    TEST_IMM_OP(216, bclri, 0xfffffffffffffdfe, 0xfffffffffffffdff, 0x0);
    TEST_IMM_OP(217, bclri, 0xfffffffffffffbfe, 0xfffffffffffffbff, 0x0);
    TEST_IMM_OP(218, bclri, 0xfffffffffffff7fe, 0xfffffffffffff7ff, 0x0);
    TEST_IMM_OP(219, bclri, 0xffffffffffffeffe, 0xffffffffffffefff, 0x0);
    TEST_IMM_OP(220, bclri, 0xffffffffffffdffe, 0xffffffffffffdfff, 0x0);
    TEST_IMM_OP(221, bclri, 0xffffffffffffbffe, 0xffffffffffffbfff, 0x0);
    TEST_IMM_OP(222, bclri, 0xffffffffffff7ffe, 0xffffffffffff7fff, 0x0);
    TEST_IMM_OP(223, bclri, 0xfffffffffffefffe, 0xfffffffffffeffff, 0x0);
    TEST_IMM_OP(224, bclri, 0xfffffffffffdfffe, 0xfffffffffffdffff, 0x0);
    TEST_IMM_OP(225, bclri, 0xfffffffffffbfffe, 0xfffffffffffbffff, 0x0);
    TEST_IMM_OP(226, bclri, 0xfffffffffff7fffe, 0xfffffffffff7ffff, 0x0);
    TEST_IMM_OP(227, bclri, 0xffffffffffeffffe, 0xffffffffffefffff, 0x0);
    TEST_IMM_OP(228, bclri, 0xffffffffffdffffe, 0xffffffffffdfffff, 0x0);
    TEST_IMM_OP(229, bclri, 0xffffffffffbffffe, 0xffffffffffbfffff, 0x0);
    TEST_IMM_OP(230, bclri, 0xffffffffff7ffffe, 0xffffffffff7fffff, 0x0);
    TEST_IMM_OP(231, bclri, 0xfffffffffefffffe, 0xfffffffffeffffff, 0x0);
    TEST_IMM_OP(232, bclri, 0xfffffffffdfffffe, 0xfffffffffdffffff, 0x0);
    TEST_IMM_OP(233, bclri, 0xfffffffffbfffffe, 0xfffffffffbffffff, 0x0);
    TEST_IMM_OP(234, bclri, 0xfffffffff7fffffe, 0xfffffffff7ffffff, 0x0);
    TEST_IMM_OP(235, bclri, 0xffffffffeffffffe, 0xffffffffefffffff, 0x0);
    TEST_IMM_OP(236, bclri, 0xffffffffdffffffe, 0xffffffffdfffffff, 0x0);
    TEST_IMM_OP(237, bclri, 0xffffffffbffffffe, 0xffffffffbfffffff, 0x0);
    TEST_IMM_OP(238, bclri, 0xffffffff7ffffffe, 0xffffffff7fffffff, 0x0);
    TEST_IMM_OP(239, bclri, 0xfffffffefffffffe, 0xfffffffeffffffff, 0x0);
    TEST_IMM_OP(240, bclri, 0xfffffffdfffffffe, 0xfffffffdffffffff, 0x0);
    TEST_IMM_OP(241, bclri, 0xfffffffbfffffffe, 0xfffffffbffffffff, 0x0);
    TEST_IMM_OP(242, bclri, 0xfffffff7fffffffe, 0xfffffff7ffffffff, 0x0);
    TEST_IMM_OP(243, bclri, 0xffffffeffffffffe, 0xffffffefffffffff, 0x0);
    TEST_IMM_OP(244, bclri, 0xffffffdffffffffe, 0xffffffdfffffffff, 0x0);
    TEST_IMM_OP(245, bclri, 0xffffffbffffffffe, 0xffffffbfffffffff, 0x0);
    TEST_IMM_OP(246, bclri, 0xffffff7ffffffffe, 0xffffff7fffffffff, 0x0);
    TEST_IMM_OP(247, bclri, 0xfffffefffffffffe, 0xfffffeffffffffff, 0x0);
    TEST_IMM_OP(248, bclri, 0xfffffdfffffffffe, 0xfffffdffffffffff, 0x0);
    TEST_IMM_OP(249, bclri, 0xfffffbfffffffffe, 0xfffffbffffffffff, 0x0);
    TEST_IMM_OP(250, bclri, 0xfffff7fffffffffe, 0xfffff7ffffffffff, 0x0);
    TEST_IMM_OP(251, bclri, 0xffffeffffffffffe, 0xffffefffffffffff, 0x0);
    TEST_IMM_OP(252, bclri, 0xffffdffffffffffe, 0xffffdfffffffffff, 0x0);
    TEST_IMM_OP(253, bclri, 0xffffbffffffffffe, 0xffffbfffffffffff, 0x0);
    TEST_IMM_OP(254, bclri, 0xffff7ffffffffffe, 0xffff7fffffffffff, 0x0);
    TEST_IMM_OP(255, bclri, 0xfffefffffffffffe, 0xfffeffffffffffff, 0x0);
    TEST_IMM_OP(256, bclri, 0xfffdfffffffffffe, 0xfffdffffffffffff, 0x0);
    TEST_IMM_OP(257, bclri, 0xfffbfffffffffffe, 0xfffbffffffffffff, 0x0);
    TEST_IMM_OP(258, bclri, 0xfff7fffffffffffe, 0xfff7ffffffffffff, 0x0);
    TEST_IMM_OP(259, bclri, 0xffeffffffffffffe, 0xffefffffffffffff, 0x0);
    TEST_IMM_OP(260, bclri, 0xffdffffffffffffe, 0xffdfffffffffffff, 0x0);
    TEST_IMM_OP(261, bclri, 0xffbffffffffffffe, 0xffbfffffffffffff, 0x0);
    TEST_IMM_OP(262, bclri, 0xff7ffffffffffeff, 0xff7fffffffffffff, 0x8);
    TEST_IMM_OP(263, bclri, 0xfeffffffffffffef, 0xfeffffffffffffff, 0x4);
    TEST_IMM_OP(264, bclri, 0xfdfffffffffffffb, 0xfdffffffffffffff, 0x2);
    TEST_IMM_OP(265, bclri, 0xfbfffffffffffffd, 0xfbffffffffffffff, 0x1);
    TEST_IMM_OP(266, bclri, 0xf7fffffffffffff7, 0xf7ffffffffffffff, 0x3);
    TEST_IMM_OP(267, bclri, 0xeffffffff7ffffff, 0xefffffffffffffff, 0x1b);
    TEST_IMM_OP(268, bclri, 0xdffffffffffffffe, 0xdfffffffffffffff, 0x0);
    TEST_IMM_OP(269, bclri, 0xbffffffffffffff7, 0xbfffffffffffffff, 0x3);
    TEST_IMM_OP(270, bclri, 0x7fffffffffff7fff, 0x7fffffffffffffff, 0xf);
    TEST_IMM_OP(271, bclri, 0xffffffffffff7fff, 0xffffffffffffffff, 0xf);

TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

