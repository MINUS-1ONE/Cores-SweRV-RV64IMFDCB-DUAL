# See LICENSE for license details.

#*****************************************************************************
# roriw.S
#-----------------------------------------------------------------------------
#
# Test roriw instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_IMM_OP(2, roriw, 0xffffffffb5bd4a32, 0x10fd3dedadea5195, 0x3);
    TEST_IMM_OP(3, roriw, 0x000000005ff7d83a, 0xbd295ce2d2ffbec1, 0x1b);
    TEST_IMM_OP(4, roriw, 0xffffffffa8e1a8bb, 0xc9649f05a8e1a8bb, 0x0);
    TEST_IMM_OP(5, roriw, 0x00000000691933f9, 0x3541291848c99fcb, 0x3);
    TEST_IMM_OP(6, roriw, 0xffffffffa49e8c3a, 0x10a24740461d524f, 0xf);
    TEST_IMM_OP(7, roriw, 0x00000000215ea514, 0x546b0e54528a10af, 0xf);
    TEST_IMM_OP(8, roriw, 0x00000000787c337f, 0x73a92fd4e19bfbc3, 0xb);
    TEST_IMM_OP(9, roriw, 0x000000000f5e580e, 0x82f6747f707af2c0, 0x1b);
    TEST_IMM_OP(10, roriw, 0xffffffffd23e882d, 0xf5adb41aa47d105b, 0x1);
    TEST_IMM_OP(11, roriw, 0xffffffffde611890, 0xdf7f3844121bcc23, 0x15);
    TEST_IMM_OP(12, roriw, 0x0000000000000002, 0x1, 0x1f);
    TEST_IMM_OP(13, roriw, 0x0000000000040000, 0x2, 0xf);
    TEST_IMM_OP(14, roriw, 0x0000000000000800, 0x4, 0x17);
    TEST_IMM_OP(15, roriw, 0x0000000000000100, 0x8, 0x1b);
    TEST_IMM_OP(16, roriw, 0x0000000000000080, 0x10, 0x1d);
    TEST_IMM_OP(17, roriw, 0x0000000000000080, 0x20, 0x1e);
    TEST_IMM_OP(18, roriw, 0x0000000000000040, 0x40, 0x0);
    TEST_IMM_OP(19, roriw, 0x0000000000800000, 0x80, 0x10);
    TEST_IMM_OP(20, roriw, 0x0000000000000001, 0x100, 0x8);
    TEST_IMM_OP(21, roriw, 0x0000000000000020, 0x200, 0x4);
    TEST_IMM_OP(22, roriw, 0x0000000000000100, 0x400, 0x2);
    TEST_IMM_OP(23, roriw, 0x0000000000000400, 0x800, 0x1);
    TEST_IMM_OP(24, roriw, 0x0000000000000200, 0x1000, 0x3);
    TEST_IMM_OP(25, roriw, 0x0000000000040000, 0x2000, 0x1b);
    TEST_IMM_OP(26, roriw, 0x0000000000004000, 0x4000, 0x0);
    TEST_IMM_OP(27, roriw, 0x0000000000001000, 0x8000, 0x3);
    TEST_IMM_OP(28, roriw, 0x0000000000000002, 0x10000, 0xf);
    TEST_IMM_OP(29, roriw, 0x0000000000000004, 0x20000, 0xf);
    TEST_IMM_OP(30, roriw, 0x0000000000000080, 0x40000, 0xb);
    TEST_IMM_OP(31, roriw, 0x0000000001000000, 0x80000, 0x1b);
    TEST_IMM_OP(32, roriw, 0x0000000000080000, 0x100000, 0x1);
    TEST_IMM_OP(33, roriw, 0x0000000000000001, 0x200000, 0x15);
    TEST_IMM_OP(34, roriw, 0x0000000000800000, 0x400000, 0x1f);
    TEST_IMM_OP(35, roriw, 0x0000000000000100, 0x800000, 0xf);
    TEST_IMM_OP(36, roriw, 0x0000000000000002, 0x1000000, 0x17);
    TEST_IMM_OP(37, roriw, 0x0000000040000000, 0x2000000, 0x1b);
    TEST_IMM_OP(38, roriw, 0x0000000020000000, 0x4000000, 0x1d);
    TEST_IMM_OP(39, roriw, 0x0000000020000000, 0x8000000, 0x1e);
    TEST_IMM_OP(40, roriw, 0x0000000010000000, 0x10000000, 0x0);
    TEST_IMM_OP(41, roriw, 0x0000000000002000, 0x20000000, 0x10);
    TEST_IMM_OP(42, roriw, 0x0000000000400000, 0x40000000, 0x8);
    TEST_IMM_OP(43, roriw, 0x0000000008000000, 0x80000000, 0x4);
    TEST_IMM_OP(44, roriw, 0x0000000000000000, 0x100000000, 0x2);
    TEST_IMM_OP(45, roriw, 0x0000000000000000, 0x200000000, 0x1);
    TEST_IMM_OP(46, roriw, 0x0000000000000000, 0x400000000, 0x3);
    TEST_IMM_OP(47, roriw, 0x0000000000000000, 0x800000000, 0x1b);
    TEST_IMM_OP(48, roriw, 0x0000000000000000, 0x1000000000, 0x0);
    TEST_IMM_OP(49, roriw, 0x0000000000000000, 0x2000000000, 0x3);
    TEST_IMM_OP(50, roriw, 0x0000000000000000, 0x4000000000, 0xf);
    TEST_IMM_OP(51, roriw, 0x0000000000000000, 0x8000000000, 0xf);
    TEST_IMM_OP(52, roriw, 0x0000000000000000, 0x10000000000, 0xb);
    TEST_IMM_OP(53, roriw, 0x0000000000000000, 0x20000000000, 0x1b);
    TEST_IMM_OP(54, roriw, 0x0000000000000000, 0x40000000000, 0x1);
    TEST_IMM_OP(55, roriw, 0x0000000000000000, 0x80000000000, 0x15);
    TEST_IMM_OP(56, roriw, 0x0000000000000000, 0x100000000000, 0x1f);
    TEST_IMM_OP(57, roriw, 0x0000000000000000, 0x200000000000, 0xf);
    TEST_IMM_OP(58, roriw, 0x0000000000000000, 0x400000000000, 0x17);
    TEST_IMM_OP(59, roriw, 0x0000000000000000, 0x800000000000, 0x1b);
    TEST_IMM_OP(60, roriw, 0x0000000000000000, 0x1000000000000, 0x1d);
    TEST_IMM_OP(61, roriw, 0x0000000000000000, 0x2000000000000, 0x1e);
    TEST_IMM_OP(62, roriw, 0x0000000000000000, 0x4000000000000, 0x0);
    TEST_IMM_OP(63, roriw, 0x0000000000000000, 0x8000000000000, 0x10);
    TEST_IMM_OP(64, roriw, 0x0000000000000000, 0x10000000000000, 0x8);
    TEST_IMM_OP(65, roriw, 0x0000000000000000, 0x20000000000000, 0x4);
    TEST_IMM_OP(66, roriw, 0x0000000000000000, 0x40000000000000, 0x2);
    TEST_IMM_OP(67, roriw, 0x0000000000000000, 0x80000000000000, 0x1);
    TEST_IMM_OP(68, roriw, 0x0000000000000000, 0x100000000000000, 0x3);
    TEST_IMM_OP(69, roriw, 0x0000000000000000, 0x200000000000000, 0x1b);
    TEST_IMM_OP(70, roriw, 0x0000000000000000, 0x400000000000000, 0x0);
    TEST_IMM_OP(71, roriw, 0x0000000000000000, 0x800000000000000, 0x3);
    TEST_IMM_OP(72, roriw, 0x0000000000000000, 0x1000000000000000, 0xf);
    TEST_IMM_OP(73, roriw, 0x0000000000000000, 0x2000000000000000, 0xf);
    TEST_IMM_OP(74, roriw, 0x0000000000000000, 0x4000000000000000, 0xb);
    TEST_IMM_OP(75, roriw, 0x0000000000000000, 0x8000000000000000, 0x1b);
    TEST_IMM_OP(76, roriw, 0x0000000000000000, 0x0, 0x1);
    TEST_IMM_OP(77, roriw, 0xfffffffffffff7ff, 0xfffffffffffffffe, 0x15);
    TEST_IMM_OP(78, roriw, 0xfffffffffffffffb, 0xfffffffffffffffd, 0x1f);
    TEST_IMM_OP(79, roriw, 0xfffffffffff7ffff, 0xfffffffffffffffb, 0xf);
    TEST_IMM_OP(80, roriw, 0xffffffffffffefff, 0xfffffffffffffff7, 0x17);
    TEST_IMM_OP(81, roriw, 0xfffffffffffffdff, 0xffffffffffffffef, 0x1b);
    TEST_IMM_OP(82, roriw, 0xfffffffffffffeff, 0xffffffffffffffdf, 0x1d);
    TEST_IMM_OP(83, roriw, 0xfffffffffffffeff, 0xffffffffffffffbf, 0x1e);
    TEST_IMM_OP(84, roriw, 0xffffffffffffff7f, 0xffffffffffffff7f, 0x0);
    TEST_IMM_OP(85, roriw, 0xfffffffffeffffff, 0xfffffffffffffeff, 0x10);
    TEST_IMM_OP(86, roriw, 0xfffffffffffffffd, 0xfffffffffffffdff, 0x8);
    TEST_IMM_OP(87, roriw, 0xffffffffffffffbf, 0xfffffffffffffbff, 0x4);
    TEST_IMM_OP(88, roriw, 0xfffffffffffffdff, 0xfffffffffffff7ff, 0x2);
    TEST_IMM_OP(89, roriw, 0xfffffffffffff7ff, 0xffffffffffffefff, 0x1);
    TEST_IMM_OP(90, roriw, 0xfffffffffffffbff, 0xffffffffffffdfff, 0x3);
    TEST_IMM_OP(91, roriw, 0xfffffffffff7ffff, 0xffffffffffffbfff, 0x1b);
    TEST_IMM_OP(92, roriw, 0xffffffffffff7fff, 0xffffffffffff7fff, 0x0);
    TEST_IMM_OP(93, roriw, 0xffffffffffffdfff, 0xfffffffffffeffff, 0x3);
    TEST_IMM_OP(94, roriw, 0xfffffffffffffffb, 0xfffffffffffdffff, 0xf);
    TEST_IMM_OP(95, roriw, 0xfffffffffffffff7, 0xfffffffffffbffff, 0xf);
    TEST_IMM_OP(96, roriw, 0xfffffffffffffeff, 0xfffffffffff7ffff, 0xb);
    TEST_IMM_OP(97, roriw, 0xfffffffffdffffff, 0xffffffffffefffff, 0x1b);
    TEST_IMM_OP(98, roriw, 0xffffffffffefffff, 0xffffffffffdfffff, 0x1);
    TEST_IMM_OP(99, roriw, 0xfffffffffffffffd, 0xffffffffffbfffff, 0x15);
    TEST_IMM_OP(100, roriw, 0xfffffffffeffffff, 0xffffffffff7fffff, 0x1f);
    TEST_IMM_OP(101, roriw, 0xfffffffffffffdff, 0xfffffffffeffffff, 0xf);
    TEST_IMM_OP(102, roriw, 0xfffffffffffffffb, 0xfffffffffdffffff, 0x17);
    TEST_IMM_OP(103, roriw, 0x000000007fffffff, 0xfffffffffbffffff, 0x1b);
    TEST_IMM_OP(104, roriw, 0xffffffffbfffffff, 0xfffffffff7ffffff, 0x1d);
    TEST_IMM_OP(105, roriw, 0xffffffffbfffffff, 0xffffffffefffffff, 0x1e);
    TEST_IMM_OP(106, roriw, 0xffffffffdfffffff, 0xffffffffdfffffff, 0x0);
    TEST_IMM_OP(107, roriw, 0xffffffffffffbfff, 0xffffffffbfffffff, 0x10);
    TEST_IMM_OP(108, roriw, 0xffffffffff7fffff, 0xffffffff7fffffff, 0x8);
    TEST_IMM_OP(109, roriw, 0xffffffffffffffff, 0xfffffffeffffffff, 0x4);
    TEST_IMM_OP(110, roriw, 0xffffffffffffffff, 0xfffffffdffffffff, 0x2);
    TEST_IMM_OP(111, roriw, 0xffffffffffffffff, 0xfffffffbffffffff, 0x1);
    TEST_IMM_OP(112, roriw, 0xffffffffffffffff, 0xfffffff7ffffffff, 0x3);
    TEST_IMM_OP(113, roriw, 0xffffffffffffffff, 0xffffffefffffffff, 0x1b);
    TEST_IMM_OP(114, roriw, 0xffffffffffffffff, 0xffffffdfffffffff, 0x0);
    TEST_IMM_OP(115, roriw, 0xffffffffffffffff, 0xffffffbfffffffff, 0x3);
    TEST_IMM_OP(116, roriw, 0xffffffffffffffff, 0xffffff7fffffffff, 0xf);
    TEST_IMM_OP(117, roriw, 0xffffffffffffffff, 0xfffffeffffffffff, 0xf);
    TEST_IMM_OP(118, roriw, 0xffffffffffffffff, 0xfffffdffffffffff, 0xb);
    TEST_IMM_OP(119, roriw, 0xffffffffffffffff, 0xfffffbffffffffff, 0x1b);
    TEST_IMM_OP(120, roriw, 0xffffffffffffffff, 0xfffff7ffffffffff, 0x1);
    TEST_IMM_OP(121, roriw, 0xffffffffffffffff, 0xffffefffffffffff, 0x15);
    TEST_IMM_OP(122, roriw, 0xffffffffffffffff, 0xffffdfffffffffff, 0x1f);
    TEST_IMM_OP(123, roriw, 0xffffffffffffffff, 0xffffbfffffffffff, 0xf);
    TEST_IMM_OP(124, roriw, 0xffffffffffffffff, 0xffff7fffffffffff, 0x17);
    TEST_IMM_OP(125, roriw, 0xffffffffffffffff, 0xfffeffffffffffff, 0x1b);
    TEST_IMM_OP(126, roriw, 0xffffffffffffffff, 0xfffdffffffffffff, 0x1d);
    TEST_IMM_OP(127, roriw, 0xffffffffffffffff, 0xfffbffffffffffff, 0x1e);
    TEST_IMM_OP(128, roriw, 0xffffffffffffffff, 0xfff7ffffffffffff, 0x0);
    TEST_IMM_OP(129, roriw, 0xffffffffffffffff, 0xffefffffffffffff, 0x10);
    TEST_IMM_OP(130, roriw, 0xffffffffffffffff, 0xffdfffffffffffff, 0x8);
    TEST_IMM_OP(131, roriw, 0xffffffffffffffff, 0xffbfffffffffffff, 0x4);
    TEST_IMM_OP(132, roriw, 0xffffffffffffffff, 0xff7fffffffffffff, 0x0);
    TEST_IMM_OP(133, roriw, 0xffffffffffffffff, 0xfeffffffffffffff, 0x0);
    TEST_IMM_OP(134, roriw, 0xffffffffffffffff, 0xfdffffffffffffff, 0x0);
    TEST_IMM_OP(135, roriw, 0xffffffffffffffff, 0xfbffffffffffffff, 0x0);
    TEST_IMM_OP(136, roriw, 0xffffffffffffffff, 0xf7ffffffffffffff, 0x0);
    TEST_IMM_OP(137, roriw, 0xffffffffffffffff, 0xefffffffffffffff, 0x0);
    TEST_IMM_OP(138, roriw, 0xffffffffffffffff, 0xdfffffffffffffff, 0x0);
    TEST_IMM_OP(139, roriw, 0xffffffffffffffff, 0xbfffffffffffffff, 0x0);
    TEST_IMM_OP(140, roriw, 0xffffffffffffffff, 0x7fffffffffffffff, 0x0);
    TEST_IMM_OP(141, roriw, 0xffffffffffffffff, 0xffffffffffffffff, 0x0);
    TEST_IMM_OP(142, roriw, 0x0000000000000001, 0x1, 0x0);
    TEST_IMM_OP(143, roriw, 0x0000000000000002, 0x2, 0x0);
    TEST_IMM_OP(144, roriw, 0x0000000000000004, 0x4, 0x0);
    TEST_IMM_OP(145, roriw, 0x0000000000000008, 0x8, 0x0);
    TEST_IMM_OP(146, roriw, 0x0000000000000010, 0x10, 0x0);
    TEST_IMM_OP(147, roriw, 0x0000000000000020, 0x20, 0x0);
    TEST_IMM_OP(148, roriw, 0x0000000000000040, 0x40, 0x0);
    TEST_IMM_OP(149, roriw, 0x0000000000000080, 0x80, 0x0);
    TEST_IMM_OP(150, roriw, 0x0000000000000100, 0x100, 0x0);
    TEST_IMM_OP(151, roriw, 0x0000000000000200, 0x200, 0x0);
    TEST_IMM_OP(152, roriw, 0x0000000000000400, 0x400, 0x0);
    TEST_IMM_OP(153, roriw, 0x0000000000000800, 0x800, 0x0);
    TEST_IMM_OP(154, roriw, 0x0000000000001000, 0x1000, 0x0);
    TEST_IMM_OP(155, roriw, 0x0000000000002000, 0x2000, 0x0);
    TEST_IMM_OP(156, roriw, 0x0000000000004000, 0x4000, 0x0);
    TEST_IMM_OP(157, roriw, 0x0000000000008000, 0x8000, 0x0);
    TEST_IMM_OP(158, roriw, 0x0000000000010000, 0x10000, 0x0);
    TEST_IMM_OP(159, roriw, 0x0000000000020000, 0x20000, 0x0);
    TEST_IMM_OP(160, roriw, 0x0000000000040000, 0x40000, 0x0);
    TEST_IMM_OP(161, roriw, 0x0000000000080000, 0x80000, 0x0);
    TEST_IMM_OP(162, roriw, 0x0000000000100000, 0x100000, 0x0);
    TEST_IMM_OP(163, roriw, 0x0000000000200000, 0x200000, 0x0);
    TEST_IMM_OP(164, roriw, 0x0000000000400000, 0x400000, 0x0);
    TEST_IMM_OP(165, roriw, 0x0000000000800000, 0x800000, 0x0);
    TEST_IMM_OP(166, roriw, 0x0000000001000000, 0x1000000, 0x0);
    TEST_IMM_OP(167, roriw, 0x0000000002000000, 0x2000000, 0x0);
    TEST_IMM_OP(168, roriw, 0x0000000004000000, 0x4000000, 0x0);
    TEST_IMM_OP(169, roriw, 0x0000000008000000, 0x8000000, 0x0);
    TEST_IMM_OP(170, roriw, 0x0000000010000000, 0x10000000, 0x0);
    TEST_IMM_OP(171, roriw, 0x0000000020000000, 0x20000000, 0x0);
    TEST_IMM_OP(172, roriw, 0x0000000040000000, 0x40000000, 0x0);
    TEST_IMM_OP(173, roriw, 0xffffffff80000000, 0x80000000, 0x0);
    TEST_IMM_OP(174, roriw, 0x0000000000000000, 0x100000000, 0x0);
    TEST_IMM_OP(175, roriw, 0x0000000000000000, 0x200000000, 0x0);
    TEST_IMM_OP(176, roriw, 0x0000000000000000, 0x400000000, 0x0);
    TEST_IMM_OP(177, roriw, 0x0000000000000000, 0x800000000, 0x0);
    TEST_IMM_OP(178, roriw, 0x0000000000000000, 0x1000000000, 0x0);
    TEST_IMM_OP(179, roriw, 0x0000000000000000, 0x2000000000, 0x0);
    TEST_IMM_OP(180, roriw, 0x0000000000000000, 0x4000000000, 0x0);
    TEST_IMM_OP(181, roriw, 0x0000000000000000, 0x8000000000, 0x0);
    TEST_IMM_OP(182, roriw, 0x0000000000000000, 0x10000000000, 0x0);
    TEST_IMM_OP(183, roriw, 0x0000000000000000, 0x20000000000, 0x0);
    TEST_IMM_OP(184, roriw, 0x0000000000000000, 0x40000000000, 0x0);
    TEST_IMM_OP(185, roriw, 0x0000000000000000, 0x80000000000, 0x0);
    TEST_IMM_OP(186, roriw, 0x0000000000000000, 0x100000000000, 0x0);
    TEST_IMM_OP(187, roriw, 0x0000000000000000, 0x200000000000, 0x0);
    TEST_IMM_OP(188, roriw, 0x0000000000000000, 0x400000000000, 0x0);
    TEST_IMM_OP(189, roriw, 0x0000000000000000, 0x800000000000, 0x0);
    TEST_IMM_OP(190, roriw, 0x0000000000000000, 0x1000000000000, 0x0);
    TEST_IMM_OP(191, roriw, 0x0000000000000000, 0x2000000000000, 0x0);
    TEST_IMM_OP(192, roriw, 0x0000000000000000, 0x4000000000000, 0x0);
    TEST_IMM_OP(193, roriw, 0x0000000000000000, 0x8000000000000, 0x0);
    TEST_IMM_OP(194, roriw, 0x0000000000000000, 0x10000000000000, 0x0);
    TEST_IMM_OP(195, roriw, 0x0000000000000000, 0x20000000000000, 0x0);
    TEST_IMM_OP(196, roriw, 0x0000000000000000, 0x40000000000000, 0x0);
    TEST_IMM_OP(197, roriw, 0x0000000000000000, 0x80000000000000, 0x0);
    TEST_IMM_OP(198, roriw, 0x0000000000000000, 0x100000000000000, 0x0);
    TEST_IMM_OP(199, roriw, 0x0000000000000000, 0x200000000000000, 0x0);
    TEST_IMM_OP(200, roriw, 0x0000000000000000, 0x400000000000000, 0x0);
    TEST_IMM_OP(201, roriw, 0x0000000000000000, 0x800000000000000, 0x0);
    TEST_IMM_OP(202, roriw, 0x0000000000000000, 0x1000000000000000, 0x0);
    TEST_IMM_OP(203, roriw, 0x0000000000000000, 0x2000000000000000, 0x0);
    TEST_IMM_OP(204, roriw, 0x0000000000000000, 0x4000000000000000, 0x0);
    TEST_IMM_OP(205, roriw, 0x0000000000000000, 0x8000000000000000, 0x0);
    TEST_IMM_OP(206, roriw, 0x0000000000000000, 0x0, 0x0);
    TEST_IMM_OP(207, roriw, 0xfffffffffffffffe, 0xfffffffffffffffe, 0x0);
    TEST_IMM_OP(208, roriw, 0xfffffffffffffffd, 0xfffffffffffffffd, 0x0);
    TEST_IMM_OP(209, roriw, 0xfffffffffffffffb, 0xfffffffffffffffb, 0x0);
    TEST_IMM_OP(210, roriw, 0xfffffffffffffff7, 0xfffffffffffffff7, 0x0);
    TEST_IMM_OP(211, roriw, 0xffffffffffffffef, 0xffffffffffffffef, 0x0);
    TEST_IMM_OP(212, roriw, 0xffffffffffffffdf, 0xffffffffffffffdf, 0x0);
    TEST_IMM_OP(213, roriw, 0xffffffffffffffbf, 0xffffffffffffffbf, 0x0);
    TEST_IMM_OP(214, roriw, 0xffffffffffffff7f, 0xffffffffffffff7f, 0x0);
    TEST_IMM_OP(215, roriw, 0xfffffffffffffeff, 0xfffffffffffffeff, 0x0);
    TEST_IMM_OP(216, roriw, 0xfffffffffffffdff, 0xfffffffffffffdff, 0x0);
    TEST_IMM_OP(217, roriw, 0xfffffffffffffbff, 0xfffffffffffffbff, 0x0);
    TEST_IMM_OP(218, roriw, 0xfffffffffffff7ff, 0xfffffffffffff7ff, 0x0);
    TEST_IMM_OP(219, roriw, 0xffffffffffffefff, 0xffffffffffffefff, 0x0);
    TEST_IMM_OP(220, roriw, 0xffffffffffffdfff, 0xffffffffffffdfff, 0x0);
    TEST_IMM_OP(221, roriw, 0xffffffffffffbfff, 0xffffffffffffbfff, 0x0);
    TEST_IMM_OP(222, roriw, 0xffffffffffff7fff, 0xffffffffffff7fff, 0x0);
    TEST_IMM_OP(223, roriw, 0xfffffffffffeffff, 0xfffffffffffeffff, 0x0);
    TEST_IMM_OP(224, roriw, 0xfffffffffffdffff, 0xfffffffffffdffff, 0x0);
    TEST_IMM_OP(225, roriw, 0xfffffffffffbffff, 0xfffffffffffbffff, 0x0);
    TEST_IMM_OP(226, roriw, 0xfffffffffff7ffff, 0xfffffffffff7ffff, 0x0);
    TEST_IMM_OP(227, roriw, 0xffffffffffefffff, 0xffffffffffefffff, 0x0);
    TEST_IMM_OP(228, roriw, 0xffffffffffdfffff, 0xffffffffffdfffff, 0x0);
    TEST_IMM_OP(229, roriw, 0xffffffffffbfffff, 0xffffffffffbfffff, 0x0);
    TEST_IMM_OP(230, roriw, 0xffffffffff7fffff, 0xffffffffff7fffff, 0x0);
    TEST_IMM_OP(231, roriw, 0xfffffffffeffffff, 0xfffffffffeffffff, 0x0);
    TEST_IMM_OP(232, roriw, 0xfffffffffdffffff, 0xfffffffffdffffff, 0x0);
    TEST_IMM_OP(233, roriw, 0xfffffffffbffffff, 0xfffffffffbffffff, 0x0);
    TEST_IMM_OP(234, roriw, 0xfffffffff7ffffff, 0xfffffffff7ffffff, 0x0);
    TEST_IMM_OP(235, roriw, 0xffffffffefffffff, 0xffffffffefffffff, 0x0);
    TEST_IMM_OP(236, roriw, 0xffffffffdfffffff, 0xffffffffdfffffff, 0x0);
    TEST_IMM_OP(237, roriw, 0xffffffffbfffffff, 0xffffffffbfffffff, 0x0);
    TEST_IMM_OP(238, roriw, 0x000000007fffffff, 0xffffffff7fffffff, 0x0);
    TEST_IMM_OP(239, roriw, 0xffffffffffffffff, 0xfffffffeffffffff, 0x0);
    TEST_IMM_OP(240, roriw, 0xffffffffffffffff, 0xfffffffdffffffff, 0x0);
    TEST_IMM_OP(241, roriw, 0xffffffffffffffff, 0xfffffffbffffffff, 0x0);
    TEST_IMM_OP(242, roriw, 0xffffffffffffffff, 0xfffffff7ffffffff, 0x0);
    TEST_IMM_OP(243, roriw, 0xffffffffffffffff, 0xffffffefffffffff, 0x0);
    TEST_IMM_OP(244, roriw, 0xffffffffffffffff, 0xffffffdfffffffff, 0x0);
    TEST_IMM_OP(245, roriw, 0xffffffffffffffff, 0xffffffbfffffffff, 0x0);
    TEST_IMM_OP(246, roriw, 0xffffffffffffffff, 0xffffff7fffffffff, 0x0);
    TEST_IMM_OP(247, roriw, 0xffffffffffffffff, 0xfffffeffffffffff, 0x0);
    TEST_IMM_OP(248, roriw, 0xffffffffffffffff, 0xfffffdffffffffff, 0x0);
    TEST_IMM_OP(249, roriw, 0xffffffffffffffff, 0xfffffbffffffffff, 0x0);
    TEST_IMM_OP(250, roriw, 0xffffffffffffffff, 0xfffff7ffffffffff, 0x0);
    TEST_IMM_OP(251, roriw, 0xffffffffffffffff, 0xffffefffffffffff, 0x0);
    TEST_IMM_OP(252, roriw, 0xffffffffffffffff, 0xffffdfffffffffff, 0x0);
    TEST_IMM_OP(253, roriw, 0xffffffffffffffff, 0xffffbfffffffffff, 0x0);
    TEST_IMM_OP(254, roriw, 0xffffffffffffffff, 0xffff7fffffffffff, 0x0);
    TEST_IMM_OP(255, roriw, 0xffffffffffffffff, 0xfffeffffffffffff, 0x0);
    TEST_IMM_OP(256, roriw, 0xffffffffffffffff, 0xfffdffffffffffff, 0x0);
    TEST_IMM_OP(257, roriw, 0xffffffffffffffff, 0xfffbffffffffffff, 0x0);
    TEST_IMM_OP(258, roriw, 0xffffffffffffffff, 0xfff7ffffffffffff, 0x0);
    TEST_IMM_OP(259, roriw, 0xffffffffffffffff, 0xffefffffffffffff, 0x0);
    TEST_IMM_OP(260, roriw, 0xffffffffffffffff, 0xffdfffffffffffff, 0x0);
    TEST_IMM_OP(261, roriw, 0xffffffffffffffff, 0xffbfffffffffffff, 0x0);
    TEST_IMM_OP(262, roriw, 0xffffffffffffffff, 0xff7fffffffffffff, 0x8);
    TEST_IMM_OP(263, roriw, 0xffffffffffffffff, 0xfeffffffffffffff, 0x4);
    TEST_IMM_OP(264, roriw, 0xffffffffffffffff, 0xfdffffffffffffff, 0x2);
    TEST_IMM_OP(265, roriw, 0xffffffffffffffff, 0xfbffffffffffffff, 0x1);
    TEST_IMM_OP(266, roriw, 0xffffffffffffffff, 0xf7ffffffffffffff, 0x3);
    TEST_IMM_OP(267, roriw, 0xffffffffffffffff, 0xefffffffffffffff, 0x1b);
    TEST_IMM_OP(268, roriw, 0xffffffffffffffff, 0xdfffffffffffffff, 0x0);
    TEST_IMM_OP(269, roriw, 0xffffffffffffffff, 0xbfffffffffffffff, 0x3);
    TEST_IMM_OP(270, roriw, 0xffffffffffffffff, 0x7fffffffffffffff, 0xf);
    TEST_IMM_OP(271, roriw, 0xffffffffffffffff, 0xffffffffffffffff, 0xf);

TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

