# See LICENSE for license details.

#*****************************************************************************
# andn.S
#-----------------------------------------------------------------------------
#
# Test andn instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_RR_OP(2, andn, 0x008005a9ade01194, 0x10fd3dedadea5195, 0xdf7f3844121bcc23);
    TEST_RR_OP(3, andn, 0x080048e05282ae80, 0xbd295ce2d2ffbec1, 0xf5adb41aa47d105b);
    TEST_RR_OP(4, andn, 0x49008b008881083b, 0xc9649f05a8e1a8bb, 0x82f6747f707af2c0);
    TEST_RR_OP(5, andn, 0x0440000808400408, 0x3541291848c99fcb, 0x73a92fd4e19bfbc3);
    TEST_RR_OP(6, andn, 0x0080410004154240, 0x10a24740461d524f, 0x546b0e54528a10af);
    TEST_RR_OP(7, andn, 0x44490814108200a0, 0x546b0e54528a10af, 0x10a24740461d524f);
    TEST_RR_OP(8, andn, 0x42a806c4a1126000, 0x73a92fd4e19bfbc3, 0x3541291848c99fcb);
    TEST_RR_OP(9, andn, 0x0292607a501a5240, 0x82f6747f707af2c0, 0xc9649f05a8e1a8bb);
    TEST_RR_OP(10, andn, 0x4084a0182400001a, 0xf5adb41aa47d105b, 0xbd295ce2d2ffbec1);
    TEST_RR_OP(11, andn, 0xcf02000012118c22, 0xdf7f3844121bcc23, 0x10fd3dedadea5195);
    TEST_RR_OP(12, andn, 0x0000000000000000, 0x1, 0xffffffffffffffff);
    TEST_RR_OP(13, andn, 0x0000000000000000, 0x2, 0x7fffffffffffffff);
    TEST_RR_OP(14, andn, 0x0000000000000000, 0x4, 0xbfffffffffffffff);
    TEST_RR_OP(15, andn, 0x0000000000000000, 0x8, 0xdfffffffffffffff);
    TEST_RR_OP(16, andn, 0x0000000000000000, 0x10, 0xefffffffffffffff);
    TEST_RR_OP(17, andn, 0x0000000000000000, 0x20, 0xf7ffffffffffffff);
    TEST_RR_OP(18, andn, 0x0000000000000000, 0x40, 0xfbffffffffffffff);
    TEST_RR_OP(19, andn, 0x0000000000000000, 0x80, 0xfdffffffffffffff);
    TEST_RR_OP(20, andn, 0x0000000000000000, 0x100, 0xfeffffffffffffff);
    TEST_RR_OP(21, andn, 0x0000000000000000, 0x200, 0xff7fffffffffffff);
    TEST_RR_OP(22, andn, 0x0000000000000000, 0x400, 0xffbfffffffffffff);
    TEST_RR_OP(23, andn, 0x0000000000000000, 0x800, 0xffdfffffffffffff);
    TEST_RR_OP(24, andn, 0x0000000000000000, 0x1000, 0xffefffffffffffff);
    TEST_RR_OP(25, andn, 0x0000000000000000, 0x2000, 0xfff7ffffffffffff);
    TEST_RR_OP(26, andn, 0x0000000000000000, 0x4000, 0xfffbffffffffffff);
    TEST_RR_OP(27, andn, 0x0000000000000000, 0x8000, 0xfffdffffffffffff);
    TEST_RR_OP(28, andn, 0x0000000000000000, 0x10000, 0xfffeffffffffffff);
    TEST_RR_OP(29, andn, 0x0000000000000000, 0x20000, 0xffff7fffffffffff);
    TEST_RR_OP(30, andn, 0x0000000000000000, 0x40000, 0xffffbfffffffffff);
    TEST_RR_OP(31, andn, 0x0000000000000000, 0x80000, 0xffffdfffffffffff);
    TEST_RR_OP(32, andn, 0x0000000000000000, 0x100000, 0xffffefffffffffff);
    TEST_RR_OP(33, andn, 0x0000000000000000, 0x200000, 0xfffff7ffffffffff);
    TEST_RR_OP(34, andn, 0x0000000000000000, 0x400000, 0xfffffbffffffffff);
    TEST_RR_OP(35, andn, 0x0000000000000000, 0x800000, 0xfffffdffffffffff);
    TEST_RR_OP(36, andn, 0x0000000000000000, 0x1000000, 0xfffffeffffffffff);
    TEST_RR_OP(37, andn, 0x0000000000000000, 0x2000000, 0xffffff7fffffffff);
    TEST_RR_OP(38, andn, 0x0000000000000000, 0x4000000, 0xffffffbfffffffff);
    TEST_RR_OP(39, andn, 0x0000000000000000, 0x8000000, 0xffffffdfffffffff);
    TEST_RR_OP(40, andn, 0x0000000000000000, 0x10000000, 0xffffffefffffffff);
    TEST_RR_OP(41, andn, 0x0000000000000000, 0x20000000, 0xfffffff7ffffffff);
    TEST_RR_OP(42, andn, 0x0000000000000000, 0x40000000, 0xfffffffbffffffff);
    TEST_RR_OP(43, andn, 0x0000000000000000, 0x80000000, 0xfffffffdffffffff);
    TEST_RR_OP(44, andn, 0x0000000100000000, 0x100000000, 0xfffffffeffffffff);
    TEST_RR_OP(45, andn, 0x0000000000000000, 0x200000000, 0xffffffff7fffffff);
    TEST_RR_OP(46, andn, 0x0000000000000000, 0x400000000, 0xffffffffbfffffff);
    TEST_RR_OP(47, andn, 0x0000000000000000, 0x800000000, 0xffffffffdfffffff);
    TEST_RR_OP(48, andn, 0x0000000000000000, 0x1000000000, 0xffffffffefffffff);
    TEST_RR_OP(49, andn, 0x0000000000000000, 0x2000000000, 0xfffffffff7ffffff);
    TEST_RR_OP(50, andn, 0x0000000000000000, 0x4000000000, 0xfffffffffbffffff);
    TEST_RR_OP(51, andn, 0x0000000000000000, 0x8000000000, 0xfffffffffdffffff);
    TEST_RR_OP(52, andn, 0x0000000000000000, 0x10000000000, 0xfffffffffeffffff);
    TEST_RR_OP(53, andn, 0x0000000000000000, 0x20000000000, 0xffffffffff7fffff);
    TEST_RR_OP(54, andn, 0x0000000000000000, 0x40000000000, 0xffffffffffbfffff);
    TEST_RR_OP(55, andn, 0x0000000000000000, 0x80000000000, 0xffffffffffdfffff);
    TEST_RR_OP(56, andn, 0x0000000000000000, 0x100000000000, 0xffffffffffefffff);
    TEST_RR_OP(57, andn, 0x0000000000000000, 0x200000000000, 0xfffffffffff7ffff);
    TEST_RR_OP(58, andn, 0x0000000000000000, 0x400000000000, 0xfffffffffffbffff);
    TEST_RR_OP(59, andn, 0x0000000000000000, 0x800000000000, 0xfffffffffffdffff);
    TEST_RR_OP(60, andn, 0x0000000000000000, 0x1000000000000, 0xfffffffffffeffff);
    TEST_RR_OP(61, andn, 0x0000000000000000, 0x2000000000000, 0xffffffffffff7fff);
    TEST_RR_OP(62, andn, 0x0000000000000000, 0x4000000000000, 0xffffffffffffbfff);
    TEST_RR_OP(63, andn, 0x0000000000000000, 0x8000000000000, 0xffffffffffffdfff);
    TEST_RR_OP(64, andn, 0x0000000000000000, 0x10000000000000, 0xffffffffffffefff);
    TEST_RR_OP(65, andn, 0x0000000000000000, 0x20000000000000, 0xfffffffffffff7ff);
    TEST_RR_OP(66, andn, 0x0000000000000000, 0x40000000000000, 0xfffffffffffffbff);
    TEST_RR_OP(67, andn, 0x0000000000000000, 0x80000000000000, 0xfffffffffffffdff);
    TEST_RR_OP(68, andn, 0x0000000000000000, 0x100000000000000, 0xfffffffffffffeff);
    TEST_RR_OP(69, andn, 0x0000000000000000, 0x200000000000000, 0xffffffffffffff7f);
    TEST_RR_OP(70, andn, 0x0000000000000000, 0x400000000000000, 0xffffffffffffffbf);
    TEST_RR_OP(71, andn, 0x0000000000000000, 0x800000000000000, 0xffffffffffffffdf);
    TEST_RR_OP(72, andn, 0x0000000000000000, 0x1000000000000000, 0xffffffffffffffef);
    TEST_RR_OP(73, andn, 0x0000000000000000, 0x2000000000000000, 0xfffffffffffffff7);
    TEST_RR_OP(74, andn, 0x0000000000000000, 0x4000000000000000, 0xfffffffffffffffb);
    TEST_RR_OP(75, andn, 0x0000000000000000, 0x8000000000000000, 0xfffffffffffffffd);
    TEST_RR_OP(76, andn, 0x0000000000000000, 0x0, 0xfffffffffffffffe);
    TEST_RR_OP(77, andn, 0xfffffffffffffffe, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(78, andn, 0x7ffffffffffffffd, 0xfffffffffffffffd, 0x8000000000000000);
    TEST_RR_OP(79, andn, 0xbffffffffffffffb, 0xfffffffffffffffb, 0x4000000000000000);
    TEST_RR_OP(80, andn, 0xdffffffffffffff7, 0xfffffffffffffff7, 0x2000000000000000);
    TEST_RR_OP(81, andn, 0xefffffffffffffef, 0xffffffffffffffef, 0x1000000000000000);
    TEST_RR_OP(82, andn, 0xf7ffffffffffffdf, 0xffffffffffffffdf, 0x800000000000000);
    TEST_RR_OP(83, andn, 0xfbffffffffffffbf, 0xffffffffffffffbf, 0x400000000000000);
    TEST_RR_OP(84, andn, 0xfdffffffffffff7f, 0xffffffffffffff7f, 0x200000000000000);
    TEST_RR_OP(85, andn, 0xfefffffffffffeff, 0xfffffffffffffeff, 0x100000000000000);
    TEST_RR_OP(86, andn, 0xff7ffffffffffdff, 0xfffffffffffffdff, 0x80000000000000);
    TEST_RR_OP(87, andn, 0xffbffffffffffbff, 0xfffffffffffffbff, 0x40000000000000);
    TEST_RR_OP(88, andn, 0xffdffffffffff7ff, 0xfffffffffffff7ff, 0x20000000000000);
    TEST_RR_OP(89, andn, 0xffefffffffffefff, 0xffffffffffffefff, 0x10000000000000);
    TEST_RR_OP(90, andn, 0xfff7ffffffffdfff, 0xffffffffffffdfff, 0x8000000000000);
    TEST_RR_OP(91, andn, 0xfffbffffffffbfff, 0xffffffffffffbfff, 0x4000000000000);
    TEST_RR_OP(92, andn, 0xfffdffffffff7fff, 0xffffffffffff7fff, 0x2000000000000);
    TEST_RR_OP(93, andn, 0xfffefffffffeffff, 0xfffffffffffeffff, 0x1000000000000);
    TEST_RR_OP(94, andn, 0xffff7ffffffdffff, 0xfffffffffffdffff, 0x800000000000);
    TEST_RR_OP(95, andn, 0xffffbffffffbffff, 0xfffffffffffbffff, 0x400000000000);
    TEST_RR_OP(96, andn, 0xffffdffffff7ffff, 0xfffffffffff7ffff, 0x200000000000);
    TEST_RR_OP(97, andn, 0xffffefffffefffff, 0xffffffffffefffff, 0x100000000000);
    TEST_RR_OP(98, andn, 0xfffff7ffffdfffff, 0xffffffffffdfffff, 0x80000000000);
    TEST_RR_OP(99, andn, 0xfffffbffffbfffff, 0xffffffffffbfffff, 0x40000000000);
    TEST_RR_OP(100, andn, 0xfffffdffff7fffff, 0xffffffffff7fffff, 0x20000000000);
    TEST_RR_OP(101, andn, 0xfffffefffeffffff, 0xfffffffffeffffff, 0x10000000000);
    TEST_RR_OP(102, andn, 0xffffff7ffdffffff, 0xfffffffffdffffff, 0x8000000000);
    TEST_RR_OP(103, andn, 0xffffffbffbffffff, 0xfffffffffbffffff, 0x4000000000);
    TEST_RR_OP(104, andn, 0xffffffdff7ffffff, 0xfffffffff7ffffff, 0x2000000000);
    TEST_RR_OP(105, andn, 0xffffffefefffffff, 0xffffffffefffffff, 0x1000000000);
    TEST_RR_OP(106, andn, 0xfffffff7dfffffff, 0xffffffffdfffffff, 0x800000000);
    TEST_RR_OP(107, andn, 0xfffffffbbfffffff, 0xffffffffbfffffff, 0x400000000);
    TEST_RR_OP(108, andn, 0xfffffffd7fffffff, 0xffffffff7fffffff, 0x200000000);
    TEST_RR_OP(109, andn, 0xfffffffeffffffff, 0xfffffffeffffffff, 0x100000000);
    TEST_RR_OP(110, andn, 0xfffffffd7fffffff, 0xfffffffdffffffff, 0x80000000);
    TEST_RR_OP(111, andn, 0xfffffffbbfffffff, 0xfffffffbffffffff, 0x40000000);
    TEST_RR_OP(112, andn, 0xfffffff7dfffffff, 0xfffffff7ffffffff, 0x20000000);
    TEST_RR_OP(113, andn, 0xffffffefefffffff, 0xffffffefffffffff, 0x10000000);
    TEST_RR_OP(114, andn, 0xffffffdff7ffffff, 0xffffffdfffffffff, 0x8000000);
    TEST_RR_OP(115, andn, 0xffffffbffbffffff, 0xffffffbfffffffff, 0x4000000);
    TEST_RR_OP(116, andn, 0xffffff7ffdffffff, 0xffffff7fffffffff, 0x2000000);
    TEST_RR_OP(117, andn, 0xfffffefffeffffff, 0xfffffeffffffffff, 0x1000000);
    TEST_RR_OP(118, andn, 0xfffffdffff7fffff, 0xfffffdffffffffff, 0x800000);
    TEST_RR_OP(119, andn, 0xfffffbffffbfffff, 0xfffffbffffffffff, 0x400000);
    TEST_RR_OP(120, andn, 0xfffff7ffffdfffff, 0xfffff7ffffffffff, 0x200000);
    TEST_RR_OP(121, andn, 0xffffefffffefffff, 0xffffefffffffffff, 0x100000);
    TEST_RR_OP(122, andn, 0xffffdffffff7ffff, 0xffffdfffffffffff, 0x80000);
    TEST_RR_OP(123, andn, 0xffffbffffffbffff, 0xffffbfffffffffff, 0x40000);
    TEST_RR_OP(124, andn, 0xffff7ffffffdffff, 0xffff7fffffffffff, 0x20000);
    TEST_RR_OP(125, andn, 0xfffefffffffeffff, 0xfffeffffffffffff, 0x10000);
    TEST_RR_OP(126, andn, 0xfffdffffffff7fff, 0xfffdffffffffffff, 0x8000);
    TEST_RR_OP(127, andn, 0xfffbffffffffbfff, 0xfffbffffffffffff, 0x4000);
    TEST_RR_OP(128, andn, 0xfff7ffffffffdfff, 0xfff7ffffffffffff, 0x2000);
    TEST_RR_OP(129, andn, 0xffefffffffffefff, 0xffefffffffffffff, 0x1000);
    TEST_RR_OP(130, andn, 0xffdffffffffff7ff, 0xffdfffffffffffff, 0x800);
    TEST_RR_OP(131, andn, 0xffbffffffffffbff, 0xffbfffffffffffff, 0x400);
    TEST_RR_OP(132, andn, 0xff7ffffffffffdff, 0xff7fffffffffffff, 0x200);
    TEST_RR_OP(133, andn, 0xfefffffffffffeff, 0xfeffffffffffffff, 0x100);
    TEST_RR_OP(134, andn, 0xfdffffffffffff7f, 0xfdffffffffffffff, 0x80);
    TEST_RR_OP(135, andn, 0xfbffffffffffffbf, 0xfbffffffffffffff, 0x40);
    TEST_RR_OP(136, andn, 0xf7ffffffffffffdf, 0xf7ffffffffffffff, 0x20);
    TEST_RR_OP(137, andn, 0xefffffffffffffef, 0xefffffffffffffff, 0x10);
    TEST_RR_OP(138, andn, 0xdffffffffffffff7, 0xdfffffffffffffff, 0x8);
    TEST_RR_OP(139, andn, 0xbffffffffffffffb, 0xbfffffffffffffff, 0x4);
    TEST_RR_OP(140, andn, 0x7ffffffffffffffd, 0x7fffffffffffffff, 0x2);
    TEST_RR_OP(141, andn, 0xfffffffffffffffe, 0xffffffffffffffff, 0x1);
    TEST_RR_OP(142, andn, 0x0000000000000001, 0x1, 0x0);
    TEST_RR_OP(143, andn, 0x0000000000000002, 0x2, 0x0);
    TEST_RR_OP(144, andn, 0x0000000000000004, 0x4, 0x0);
    TEST_RR_OP(145, andn, 0x0000000000000008, 0x8, 0x0);
    TEST_RR_OP(146, andn, 0x0000000000000010, 0x10, 0x0);
    TEST_RR_OP(147, andn, 0x0000000000000020, 0x20, 0x0);
    TEST_RR_OP(148, andn, 0x0000000000000040, 0x40, 0x0);
    TEST_RR_OP(149, andn, 0x0000000000000080, 0x80, 0x0);
    TEST_RR_OP(150, andn, 0x0000000000000100, 0x100, 0x0);
    TEST_RR_OP(151, andn, 0x0000000000000200, 0x200, 0x0);
    TEST_RR_OP(152, andn, 0x0000000000000400, 0x400, 0x0);
    TEST_RR_OP(153, andn, 0x0000000000000800, 0x800, 0x0);
    TEST_RR_OP(154, andn, 0x0000000000001000, 0x1000, 0x0);
    TEST_RR_OP(155, andn, 0x0000000000002000, 0x2000, 0x0);
    TEST_RR_OP(156, andn, 0x0000000000004000, 0x4000, 0x0);
    TEST_RR_OP(157, andn, 0x0000000000008000, 0x8000, 0x0);
    TEST_RR_OP(158, andn, 0x0000000000010000, 0x10000, 0x0);
    TEST_RR_OP(159, andn, 0x0000000000020000, 0x20000, 0x0);
    TEST_RR_OP(160, andn, 0x0000000000040000, 0x40000, 0x0);
    TEST_RR_OP(161, andn, 0x0000000000080000, 0x80000, 0x0);
    TEST_RR_OP(162, andn, 0x0000000000100000, 0x100000, 0x0);
    TEST_RR_OP(163, andn, 0x0000000000200000, 0x200000, 0x0);
    TEST_RR_OP(164, andn, 0x0000000000400000, 0x400000, 0x0);
    TEST_RR_OP(165, andn, 0x0000000000800000, 0x800000, 0x0);
    TEST_RR_OP(166, andn, 0x0000000001000000, 0x1000000, 0x0);
    TEST_RR_OP(167, andn, 0x0000000002000000, 0x2000000, 0x0);
    TEST_RR_OP(168, andn, 0x0000000004000000, 0x4000000, 0x0);
    TEST_RR_OP(169, andn, 0x0000000008000000, 0x8000000, 0x0);
    TEST_RR_OP(170, andn, 0x0000000010000000, 0x10000000, 0x0);
    TEST_RR_OP(171, andn, 0x0000000020000000, 0x20000000, 0x0);
    TEST_RR_OP(172, andn, 0x0000000040000000, 0x40000000, 0x0);
    TEST_RR_OP(173, andn, 0x0000000080000000, 0x80000000, 0x0);
    TEST_RR_OP(174, andn, 0x0000000100000000, 0x100000000, 0x0);
    TEST_RR_OP(175, andn, 0x0000000200000000, 0x200000000, 0x0);
    TEST_RR_OP(176, andn, 0x0000000400000000, 0x400000000, 0x0);
    TEST_RR_OP(177, andn, 0x0000000800000000, 0x800000000, 0x0);
    TEST_RR_OP(178, andn, 0x0000001000000000, 0x1000000000, 0x0);
    TEST_RR_OP(179, andn, 0x0000002000000000, 0x2000000000, 0x0);
    TEST_RR_OP(180, andn, 0x0000004000000000, 0x4000000000, 0x0);
    TEST_RR_OP(181, andn, 0x0000008000000000, 0x8000000000, 0x0);
    TEST_RR_OP(182, andn, 0x0000010000000000, 0x10000000000, 0x0);
    TEST_RR_OP(183, andn, 0x0000020000000000, 0x20000000000, 0x0);
    TEST_RR_OP(184, andn, 0x0000040000000000, 0x40000000000, 0x0);
    TEST_RR_OP(185, andn, 0x0000080000000000, 0x80000000000, 0x0);
    TEST_RR_OP(186, andn, 0x0000100000000000, 0x100000000000, 0x0);
    TEST_RR_OP(187, andn, 0x0000200000000000, 0x200000000000, 0x0);
    TEST_RR_OP(188, andn, 0x0000400000000000, 0x400000000000, 0x0);
    TEST_RR_OP(189, andn, 0x0000800000000000, 0x800000000000, 0x0);
    TEST_RR_OP(190, andn, 0x0001000000000000, 0x1000000000000, 0x0);
    TEST_RR_OP(191, andn, 0x0002000000000000, 0x2000000000000, 0x0);
    TEST_RR_OP(192, andn, 0x0004000000000000, 0x4000000000000, 0x0);
    TEST_RR_OP(193, andn, 0x0008000000000000, 0x8000000000000, 0x0);
    TEST_RR_OP(194, andn, 0x0010000000000000, 0x10000000000000, 0x0);
    TEST_RR_OP(195, andn, 0x0020000000000000, 0x20000000000000, 0x0);
    TEST_RR_OP(196, andn, 0x0040000000000000, 0x40000000000000, 0x0);
    TEST_RR_OP(197, andn, 0x0080000000000000, 0x80000000000000, 0x0);
    TEST_RR_OP(198, andn, 0x0100000000000000, 0x100000000000000, 0x0);
    TEST_RR_OP(199, andn, 0x0200000000000000, 0x200000000000000, 0x0);
    TEST_RR_OP(200, andn, 0x0400000000000000, 0x400000000000000, 0x0);
    TEST_RR_OP(201, andn, 0x0800000000000000, 0x800000000000000, 0x0);
    TEST_RR_OP(202, andn, 0x1000000000000000, 0x1000000000000000, 0x0);
    TEST_RR_OP(203, andn, 0x2000000000000000, 0x2000000000000000, 0x0);
    TEST_RR_OP(204, andn, 0x4000000000000000, 0x4000000000000000, 0x0);
    TEST_RR_OP(205, andn, 0x8000000000000000, 0x8000000000000000, 0x0);
    TEST_RR_OP(206, andn, 0x0000000000000000, 0x0, 0x0);
    TEST_RR_OP(207, andn, 0xfffffffffffffffe, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(208, andn, 0xfffffffffffffffd, 0xfffffffffffffffd, 0x0);
    TEST_RR_OP(209, andn, 0xfffffffffffffffb, 0xfffffffffffffffb, 0x0);
    TEST_RR_OP(210, andn, 0xfffffffffffffff7, 0xfffffffffffffff7, 0x0);
    TEST_RR_OP(211, andn, 0xffffffffffffffef, 0xffffffffffffffef, 0x0);
    TEST_RR_OP(212, andn, 0xffffffffffffffdf, 0xffffffffffffffdf, 0x0);
    TEST_RR_OP(213, andn, 0xffffffffffffffbf, 0xffffffffffffffbf, 0x0);
    TEST_RR_OP(214, andn, 0xffffffffffffff7f, 0xffffffffffffff7f, 0x0);
    TEST_RR_OP(215, andn, 0xfffffffffffffeff, 0xfffffffffffffeff, 0x0);
    TEST_RR_OP(216, andn, 0xfffffffffffffdff, 0xfffffffffffffdff, 0x0);
    TEST_RR_OP(217, andn, 0xfffffffffffffbff, 0xfffffffffffffbff, 0x0);
    TEST_RR_OP(218, andn, 0xfffffffffffff7ff, 0xfffffffffffff7ff, 0x0);
    TEST_RR_OP(219, andn, 0xffffffffffffefff, 0xffffffffffffefff, 0x0);
    TEST_RR_OP(220, andn, 0xffffffffffffdfff, 0xffffffffffffdfff, 0x0);
    TEST_RR_OP(221, andn, 0xffffffffffffbfff, 0xffffffffffffbfff, 0x0);
    TEST_RR_OP(222, andn, 0xffffffffffff7fff, 0xffffffffffff7fff, 0x0);
    TEST_RR_OP(223, andn, 0xfffffffffffeffff, 0xfffffffffffeffff, 0x0);
    TEST_RR_OP(224, andn, 0xfffffffffffdffff, 0xfffffffffffdffff, 0x0);
    TEST_RR_OP(225, andn, 0xfffffffffffbffff, 0xfffffffffffbffff, 0x0);
    TEST_RR_OP(226, andn, 0xfffffffffff7ffff, 0xfffffffffff7ffff, 0x0);
    TEST_RR_OP(227, andn, 0xffffffffffefffff, 0xffffffffffefffff, 0x0);
    TEST_RR_OP(228, andn, 0xffffffffffdfffff, 0xffffffffffdfffff, 0x0);
    TEST_RR_OP(229, andn, 0xffffffffffbfffff, 0xffffffffffbfffff, 0x0);
    TEST_RR_OP(230, andn, 0xffffffffff7fffff, 0xffffffffff7fffff, 0x0);
    TEST_RR_OP(231, andn, 0xfffffffffeffffff, 0xfffffffffeffffff, 0x0);
    TEST_RR_OP(232, andn, 0xfffffffffdffffff, 0xfffffffffdffffff, 0x0);
    TEST_RR_OP(233, andn, 0xfffffffffbffffff, 0xfffffffffbffffff, 0x0);
    TEST_RR_OP(234, andn, 0xfffffffff7ffffff, 0xfffffffff7ffffff, 0x0);
    TEST_RR_OP(235, andn, 0xffffffffefffffff, 0xffffffffefffffff, 0x0);
    TEST_RR_OP(236, andn, 0xffffffffdfffffff, 0xffffffffdfffffff, 0x0);
    TEST_RR_OP(237, andn, 0xffffffffbfffffff, 0xffffffffbfffffff, 0x0);
    TEST_RR_OP(238, andn, 0xffffffff7fffffff, 0xffffffff7fffffff, 0x0);
    TEST_RR_OP(239, andn, 0xfffffffeffffffff, 0xfffffffeffffffff, 0x0);
    TEST_RR_OP(240, andn, 0xfffffffdffffffff, 0xfffffffdffffffff, 0x0);
    TEST_RR_OP(241, andn, 0xfffffffbffffffff, 0xfffffffbffffffff, 0x0);
    TEST_RR_OP(242, andn, 0xfffffff7ffffffff, 0xfffffff7ffffffff, 0x0);
    TEST_RR_OP(243, andn, 0xffffffefffffffff, 0xffffffefffffffff, 0x0);
    TEST_RR_OP(244, andn, 0xffffffdfffffffff, 0xffffffdfffffffff, 0x0);
    TEST_RR_OP(245, andn, 0xffffffbfffffffff, 0xffffffbfffffffff, 0x0);
    TEST_RR_OP(246, andn, 0xffffff7fffffffff, 0xffffff7fffffffff, 0x0);
    TEST_RR_OP(247, andn, 0xfffffeffffffffff, 0xfffffeffffffffff, 0x0);
    TEST_RR_OP(248, andn, 0xfffffdffffffffff, 0xfffffdffffffffff, 0x0);
    TEST_RR_OP(249, andn, 0xfffffbffffffffff, 0xfffffbffffffffff, 0x0);
    TEST_RR_OP(250, andn, 0xfffff7ffffffffff, 0xfffff7ffffffffff, 0x0);
    TEST_RR_OP(251, andn, 0xffffefffffffffff, 0xffffefffffffffff, 0x0);
    TEST_RR_OP(252, andn, 0xffffdfffffffffff, 0xffffdfffffffffff, 0x0);
    TEST_RR_OP(253, andn, 0xffffbfffffffffff, 0xffffbfffffffffff, 0x0);
    TEST_RR_OP(254, andn, 0xffff7fffffffffff, 0xffff7fffffffffff, 0x0);
    TEST_RR_OP(255, andn, 0xfffeffffffffffff, 0xfffeffffffffffff, 0x0);
    TEST_RR_OP(256, andn, 0xfffdffffffffffff, 0xfffdffffffffffff, 0x0);
    TEST_RR_OP(257, andn, 0xfffbffffffffffff, 0xfffbffffffffffff, 0x0);
    TEST_RR_OP(258, andn, 0xfff7ffffffffffff, 0xfff7ffffffffffff, 0x0);
    TEST_RR_OP(259, andn, 0xffefffffffffffff, 0xffefffffffffffff, 0x0);
    TEST_RR_OP(260, andn, 0xffdfffffffffffff, 0xffdfffffffffffff, 0x0);
    TEST_RR_OP(261, andn, 0xffbfffffffffffff, 0xffbfffffffffffff, 0x0);
    TEST_RR_OP(262, andn, 0xff7fffffffffffff, 0xff7fffffffffffff, 0x0);
    TEST_RR_OP(263, andn, 0xfeffffffffffffff, 0xfeffffffffffffff, 0x0);
    TEST_RR_OP(264, andn, 0xfdffffffffffffff, 0xfdffffffffffffff, 0x0);
    TEST_RR_OP(265, andn, 0xfbffffffffffffff, 0xfbffffffffffffff, 0x0);
    TEST_RR_OP(266, andn, 0xf7ffffffffffffff, 0xf7ffffffffffffff, 0x0);
    TEST_RR_OP(267, andn, 0xefffffffffffffff, 0xefffffffffffffff, 0x0);
    TEST_RR_OP(268, andn, 0xdfffffffffffffff, 0xdfffffffffffffff, 0x0);
    TEST_RR_OP(269, andn, 0xbfffffffffffffff, 0xbfffffffffffffff, 0x0);
    TEST_RR_OP(270, andn, 0x7fffffffffffffff, 0x7fffffffffffffff, 0x0);
    TEST_RR_OP(271, andn, 0xffffffffffffffff, 0xffffffffffffffff, 0x0);

TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

