# See LICENSE for license details.

#*****************************************************************************
# sh1add.S
#-----------------------------------------------------------------------------
#
# Test sh1add instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_RR_OP(2, sh1add, 0x0179b41f6df06f4d, 0x10fd3dedadea5195, 0xdf7f3844121bcc23);
    TEST_RR_OP(3, sh1add, 0x70006de04a7c8ddd, 0xbd295ce2d2ffbec1, 0xf5adb41aa47d105b);
    TEST_RR_OP(4, sh1add, 0x15bfb28ac23e4436, 0xc9649f05a8e1a8bb, 0x82f6747f707af2c0);
    TEST_RR_OP(5, sh1add, 0xde2b8205732f3b59, 0x3541291848c99fcb, 0x73a92fd4e19bfbc3);
    TEST_RR_OP(6, sh1add, 0x75af9cd4dec4b54d, 0x10a24740461d524f, 0x546b0e54528a10af);
    TEST_RR_OP(7, sh1add, 0xb97863e8eb3173ad, 0x546b0e54528a10af, 0x10a24740461d524f);
    TEST_RR_OP(8, sh1add, 0x1c9388c20c019751, 0x73a92fd4e19bfbc3, 0x3541291848c99fcb);
    TEST_RR_OP(9, sh1add, 0xcf51880489d78e3b, 0x82f6747f707af2c0, 0xc9649f05a8e1a8bb);
    TEST_RR_OP(10, sh1add, 0xa884c5181bf9df77, 0xf5adb41aa47d105b, 0xbd295ce2d2ffbec1);
    TEST_RR_OP(11, sh1add, 0xcffbae75d221e9db, 0xdf7f3844121bcc23, 0x10fd3dedadea5195);
    TEST_RR_OP(12, sh1add, 0x0000000000000001, 0x1, 0xffffffffffffffff);
    TEST_RR_OP(13, sh1add, 0x8000000000000003, 0x2, 0x7fffffffffffffff);
    TEST_RR_OP(14, sh1add, 0xc000000000000007, 0x4, 0xbfffffffffffffff);
    TEST_RR_OP(15, sh1add, 0xe00000000000000f, 0x8, 0xdfffffffffffffff);
    TEST_RR_OP(16, sh1add, 0xf00000000000001f, 0x10, 0xefffffffffffffff);
    TEST_RR_OP(17, sh1add, 0xf80000000000003f, 0x20, 0xf7ffffffffffffff);
    TEST_RR_OP(18, sh1add, 0xfc0000000000007f, 0x40, 0xfbffffffffffffff);
    TEST_RR_OP(19, sh1add, 0xfe000000000000ff, 0x80, 0xfdffffffffffffff);
    TEST_RR_OP(20, sh1add, 0xff000000000001ff, 0x100, 0xfeffffffffffffff);
    TEST_RR_OP(21, sh1add, 0xff800000000003ff, 0x200, 0xff7fffffffffffff);
    TEST_RR_OP(22, sh1add, 0xffc00000000007ff, 0x400, 0xffbfffffffffffff);
    TEST_RR_OP(23, sh1add, 0xffe0000000000fff, 0x800, 0xffdfffffffffffff);
    TEST_RR_OP(24, sh1add, 0xfff0000000001fff, 0x1000, 0xffefffffffffffff);
    TEST_RR_OP(25, sh1add, 0xfff8000000003fff, 0x2000, 0xfff7ffffffffffff);
    TEST_RR_OP(26, sh1add, 0xfffc000000007fff, 0x4000, 0xfffbffffffffffff);
    TEST_RR_OP(27, sh1add, 0xfffe00000000ffff, 0x8000, 0xfffdffffffffffff);
    TEST_RR_OP(28, sh1add, 0xffff00000001ffff, 0x10000, 0xfffeffffffffffff);
    TEST_RR_OP(29, sh1add, 0xffff80000003ffff, 0x20000, 0xffff7fffffffffff);
    TEST_RR_OP(30, sh1add, 0xffffc0000007ffff, 0x40000, 0xffffbfffffffffff);
    TEST_RR_OP(31, sh1add, 0xffffe000000fffff, 0x80000, 0xffffdfffffffffff);
    TEST_RR_OP(32, sh1add, 0xfffff000001fffff, 0x100000, 0xffffefffffffffff);
    TEST_RR_OP(33, sh1add, 0xfffff800003fffff, 0x200000, 0xfffff7ffffffffff);
    TEST_RR_OP(34, sh1add, 0xfffffc00007fffff, 0x400000, 0xfffffbffffffffff);
    TEST_RR_OP(35, sh1add, 0xfffffe0000ffffff, 0x800000, 0xfffffdffffffffff);
    TEST_RR_OP(36, sh1add, 0xffffff0001ffffff, 0x1000000, 0xfffffeffffffffff);
    TEST_RR_OP(37, sh1add, 0xffffff8003ffffff, 0x2000000, 0xffffff7fffffffff);
    TEST_RR_OP(38, sh1add, 0xffffffc007ffffff, 0x4000000, 0xffffffbfffffffff);
    TEST_RR_OP(39, sh1add, 0xffffffe00fffffff, 0x8000000, 0xffffffdfffffffff);
    TEST_RR_OP(40, sh1add, 0xfffffff01fffffff, 0x10000000, 0xffffffefffffffff);
    TEST_RR_OP(41, sh1add, 0xfffffff83fffffff, 0x20000000, 0xfffffff7ffffffff);
    TEST_RR_OP(42, sh1add, 0xfffffffc7fffffff, 0x40000000, 0xfffffffbffffffff);
    TEST_RR_OP(43, sh1add, 0xfffffffeffffffff, 0x80000000, 0xfffffffdffffffff);
    TEST_RR_OP(44, sh1add, 0x00000000ffffffff, 0x100000000, 0xfffffffeffffffff);
    TEST_RR_OP(45, sh1add, 0x000000037fffffff, 0x200000000, 0xffffffff7fffffff);
    TEST_RR_OP(46, sh1add, 0x00000007bfffffff, 0x400000000, 0xffffffffbfffffff);
    TEST_RR_OP(47, sh1add, 0x0000000fdfffffff, 0x800000000, 0xffffffffdfffffff);
    TEST_RR_OP(48, sh1add, 0x0000001fefffffff, 0x1000000000, 0xffffffffefffffff);
    TEST_RR_OP(49, sh1add, 0x0000003ff7ffffff, 0x2000000000, 0xfffffffff7ffffff);
    TEST_RR_OP(50, sh1add, 0x0000007ffbffffff, 0x4000000000, 0xfffffffffbffffff);
    TEST_RR_OP(51, sh1add, 0x000000fffdffffff, 0x8000000000, 0xfffffffffdffffff);
    TEST_RR_OP(52, sh1add, 0x000001fffeffffff, 0x10000000000, 0xfffffffffeffffff);
    TEST_RR_OP(53, sh1add, 0x000003ffff7fffff, 0x20000000000, 0xffffffffff7fffff);
    TEST_RR_OP(54, sh1add, 0x000007ffffbfffff, 0x40000000000, 0xffffffffffbfffff);
    TEST_RR_OP(55, sh1add, 0x00000fffffdfffff, 0x80000000000, 0xffffffffffdfffff);
    TEST_RR_OP(56, sh1add, 0x00001fffffefffff, 0x100000000000, 0xffffffffffefffff);
    TEST_RR_OP(57, sh1add, 0x00003ffffff7ffff, 0x200000000000, 0xfffffffffff7ffff);
    TEST_RR_OP(58, sh1add, 0x00007ffffffbffff, 0x400000000000, 0xfffffffffffbffff);
    TEST_RR_OP(59, sh1add, 0x0000fffffffdffff, 0x800000000000, 0xfffffffffffdffff);
    TEST_RR_OP(60, sh1add, 0x0001fffffffeffff, 0x1000000000000, 0xfffffffffffeffff);
    TEST_RR_OP(61, sh1add, 0x0003ffffffff7fff, 0x2000000000000, 0xffffffffffff7fff);
    TEST_RR_OP(62, sh1add, 0x0007ffffffffbfff, 0x4000000000000, 0xffffffffffffbfff);
    TEST_RR_OP(63, sh1add, 0x000fffffffffdfff, 0x8000000000000, 0xffffffffffffdfff);
    TEST_RR_OP(64, sh1add, 0x001fffffffffefff, 0x10000000000000, 0xffffffffffffefff);
    TEST_RR_OP(65, sh1add, 0x003ffffffffff7ff, 0x20000000000000, 0xfffffffffffff7ff);
    TEST_RR_OP(66, sh1add, 0x007ffffffffffbff, 0x40000000000000, 0xfffffffffffffbff);
    TEST_RR_OP(67, sh1add, 0x00fffffffffffdff, 0x80000000000000, 0xfffffffffffffdff);
    TEST_RR_OP(68, sh1add, 0x01fffffffffffeff, 0x100000000000000, 0xfffffffffffffeff);
    TEST_RR_OP(69, sh1add, 0x03ffffffffffff7f, 0x200000000000000, 0xffffffffffffff7f);
    TEST_RR_OP(70, sh1add, 0x07ffffffffffffbf, 0x400000000000000, 0xffffffffffffffbf);
    TEST_RR_OP(71, sh1add, 0x0fffffffffffffdf, 0x800000000000000, 0xffffffffffffffdf);
    TEST_RR_OP(72, sh1add, 0x1fffffffffffffef, 0x1000000000000000, 0xffffffffffffffef);
    TEST_RR_OP(73, sh1add, 0x3ffffffffffffff7, 0x2000000000000000, 0xfffffffffffffff7);
    TEST_RR_OP(74, sh1add, 0x7ffffffffffffffb, 0x4000000000000000, 0xfffffffffffffffb);
    TEST_RR_OP(75, sh1add, 0xfffffffffffffffd, 0x8000000000000000, 0xfffffffffffffffd);
    TEST_RR_OP(76, sh1add, 0xfffffffffffffffe, 0x0, 0xfffffffffffffffe);
    TEST_RR_OP(77, sh1add, 0xfffffffffffffffc, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(78, sh1add, 0x7ffffffffffffffa, 0xfffffffffffffffd, 0x8000000000000000);
    TEST_RR_OP(79, sh1add, 0x3ffffffffffffff6, 0xfffffffffffffffb, 0x4000000000000000);
    TEST_RR_OP(80, sh1add, 0x1fffffffffffffee, 0xfffffffffffffff7, 0x2000000000000000);
    TEST_RR_OP(81, sh1add, 0x0fffffffffffffde, 0xffffffffffffffef, 0x1000000000000000);
    TEST_RR_OP(82, sh1add, 0x07ffffffffffffbe, 0xffffffffffffffdf, 0x800000000000000);
    TEST_RR_OP(83, sh1add, 0x03ffffffffffff7e, 0xffffffffffffffbf, 0x400000000000000);
    TEST_RR_OP(84, sh1add, 0x01fffffffffffefe, 0xffffffffffffff7f, 0x200000000000000);
    TEST_RR_OP(85, sh1add, 0x00fffffffffffdfe, 0xfffffffffffffeff, 0x100000000000000);
    TEST_RR_OP(86, sh1add, 0x007ffffffffffbfe, 0xfffffffffffffdff, 0x80000000000000);
    TEST_RR_OP(87, sh1add, 0x003ffffffffff7fe, 0xfffffffffffffbff, 0x40000000000000);
    TEST_RR_OP(88, sh1add, 0x001fffffffffeffe, 0xfffffffffffff7ff, 0x20000000000000);
    TEST_RR_OP(89, sh1add, 0x000fffffffffdffe, 0xffffffffffffefff, 0x10000000000000);
    TEST_RR_OP(90, sh1add, 0x0007ffffffffbffe, 0xffffffffffffdfff, 0x8000000000000);
    TEST_RR_OP(91, sh1add, 0x0003ffffffff7ffe, 0xffffffffffffbfff, 0x4000000000000);
    TEST_RR_OP(92, sh1add, 0x0001fffffffefffe, 0xffffffffffff7fff, 0x2000000000000);
    TEST_RR_OP(93, sh1add, 0x0000fffffffdfffe, 0xfffffffffffeffff, 0x1000000000000);
    TEST_RR_OP(94, sh1add, 0x00007ffffffbfffe, 0xfffffffffffdffff, 0x800000000000);
    TEST_RR_OP(95, sh1add, 0x00003ffffff7fffe, 0xfffffffffffbffff, 0x400000000000);
    TEST_RR_OP(96, sh1add, 0x00001fffffeffffe, 0xfffffffffff7ffff, 0x200000000000);
    TEST_RR_OP(97, sh1add, 0x00000fffffdffffe, 0xffffffffffefffff, 0x100000000000);
    TEST_RR_OP(98, sh1add, 0x000007ffffbffffe, 0xffffffffffdfffff, 0x80000000000);
    TEST_RR_OP(99, sh1add, 0x000003ffff7ffffe, 0xffffffffffbfffff, 0x40000000000);
    TEST_RR_OP(100, sh1add, 0x000001fffefffffe, 0xffffffffff7fffff, 0x20000000000);
    TEST_RR_OP(101, sh1add, 0x000000fffdfffffe, 0xfffffffffeffffff, 0x10000000000);
    TEST_RR_OP(102, sh1add, 0x0000007ffbfffffe, 0xfffffffffdffffff, 0x8000000000);
    TEST_RR_OP(103, sh1add, 0x0000003ff7fffffe, 0xfffffffffbffffff, 0x4000000000);
    TEST_RR_OP(104, sh1add, 0x0000001feffffffe, 0xfffffffff7ffffff, 0x2000000000);
    TEST_RR_OP(105, sh1add, 0x0000000fdffffffe, 0xffffffffefffffff, 0x1000000000);
    TEST_RR_OP(106, sh1add, 0x00000007bffffffe, 0xffffffffdfffffff, 0x800000000);
    TEST_RR_OP(107, sh1add, 0x000000037ffffffe, 0xffffffffbfffffff, 0x400000000);
    TEST_RR_OP(108, sh1add, 0x00000000fffffffe, 0xffffffff7fffffff, 0x200000000);
    TEST_RR_OP(109, sh1add, 0xfffffffefffffffe, 0xfffffffeffffffff, 0x100000000);
    TEST_RR_OP(110, sh1add, 0xfffffffc7ffffffe, 0xfffffffdffffffff, 0x80000000);
    TEST_RR_OP(111, sh1add, 0xfffffff83ffffffe, 0xfffffffbffffffff, 0x40000000);
    TEST_RR_OP(112, sh1add, 0xfffffff01ffffffe, 0xfffffff7ffffffff, 0x20000000);
    TEST_RR_OP(113, sh1add, 0xffffffe00ffffffe, 0xffffffefffffffff, 0x10000000);
    TEST_RR_OP(114, sh1add, 0xffffffc007fffffe, 0xffffffdfffffffff, 0x8000000);
    TEST_RR_OP(115, sh1add, 0xffffff8003fffffe, 0xffffffbfffffffff, 0x4000000);
    TEST_RR_OP(116, sh1add, 0xffffff0001fffffe, 0xffffff7fffffffff, 0x2000000);
    TEST_RR_OP(117, sh1add, 0xfffffe0000fffffe, 0xfffffeffffffffff, 0x1000000);
    TEST_RR_OP(118, sh1add, 0xfffffc00007ffffe, 0xfffffdffffffffff, 0x800000);
    TEST_RR_OP(119, sh1add, 0xfffff800003ffffe, 0xfffffbffffffffff, 0x400000);
    TEST_RR_OP(120, sh1add, 0xfffff000001ffffe, 0xfffff7ffffffffff, 0x200000);
    TEST_RR_OP(121, sh1add, 0xffffe000000ffffe, 0xffffefffffffffff, 0x100000);
    TEST_RR_OP(122, sh1add, 0xffffc0000007fffe, 0xffffdfffffffffff, 0x80000);
    TEST_RR_OP(123, sh1add, 0xffff80000003fffe, 0xffffbfffffffffff, 0x40000);
    TEST_RR_OP(124, sh1add, 0xffff00000001fffe, 0xffff7fffffffffff, 0x20000);
    TEST_RR_OP(125, sh1add, 0xfffe00000000fffe, 0xfffeffffffffffff, 0x10000);
    TEST_RR_OP(126, sh1add, 0xfffc000000007ffe, 0xfffdffffffffffff, 0x8000);
    TEST_RR_OP(127, sh1add, 0xfff8000000003ffe, 0xfffbffffffffffff, 0x4000);
    TEST_RR_OP(128, sh1add, 0xfff0000000001ffe, 0xfff7ffffffffffff, 0x2000);
    TEST_RR_OP(129, sh1add, 0xffe0000000000ffe, 0xffefffffffffffff, 0x1000);
    TEST_RR_OP(130, sh1add, 0xffc00000000007fe, 0xffdfffffffffffff, 0x800);
    TEST_RR_OP(131, sh1add, 0xff800000000003fe, 0xffbfffffffffffff, 0x400);
    TEST_RR_OP(132, sh1add, 0xff000000000001fe, 0xff7fffffffffffff, 0x200);
    TEST_RR_OP(133, sh1add, 0xfe000000000000fe, 0xfeffffffffffffff, 0x100);
    TEST_RR_OP(134, sh1add, 0xfc0000000000007e, 0xfdffffffffffffff, 0x80);
    TEST_RR_OP(135, sh1add, 0xf80000000000003e, 0xfbffffffffffffff, 0x40);
    TEST_RR_OP(136, sh1add, 0xf00000000000001e, 0xf7ffffffffffffff, 0x20);
    TEST_RR_OP(137, sh1add, 0xe00000000000000e, 0xefffffffffffffff, 0x10);
    TEST_RR_OP(138, sh1add, 0xc000000000000006, 0xdfffffffffffffff, 0x8);
    TEST_RR_OP(139, sh1add, 0x8000000000000002, 0xbfffffffffffffff, 0x4);
    TEST_RR_OP(140, sh1add, 0x0000000000000000, 0x7fffffffffffffff, 0x2);
    TEST_RR_OP(141, sh1add, 0xffffffffffffffff, 0xffffffffffffffff, 0x1);
    TEST_RR_OP(142, sh1add, 0x0000000000000002, 0x1, 0x0);
    TEST_RR_OP(143, sh1add, 0x0000000000000004, 0x2, 0x0);
    TEST_RR_OP(144, sh1add, 0x0000000000000008, 0x4, 0x0);
    TEST_RR_OP(145, sh1add, 0x0000000000000010, 0x8, 0x0);
    TEST_RR_OP(146, sh1add, 0x0000000000000020, 0x10, 0x0);
    TEST_RR_OP(147, sh1add, 0x0000000000000040, 0x20, 0x0);
    TEST_RR_OP(148, sh1add, 0x0000000000000080, 0x40, 0x0);
    TEST_RR_OP(149, sh1add, 0x0000000000000100, 0x80, 0x0);
    TEST_RR_OP(150, sh1add, 0x0000000000000200, 0x100, 0x0);
    TEST_RR_OP(151, sh1add, 0x0000000000000400, 0x200, 0x0);
    TEST_RR_OP(152, sh1add, 0x0000000000000800, 0x400, 0x0);
    TEST_RR_OP(153, sh1add, 0x0000000000001000, 0x800, 0x0);
    TEST_RR_OP(154, sh1add, 0x0000000000002000, 0x1000, 0x0);
    TEST_RR_OP(155, sh1add, 0x0000000000004000, 0x2000, 0x0);
    TEST_RR_OP(156, sh1add, 0x0000000000008000, 0x4000, 0x0);
    TEST_RR_OP(157, sh1add, 0x0000000000010000, 0x8000, 0x0);
    TEST_RR_OP(158, sh1add, 0x0000000000020000, 0x10000, 0x0);
    TEST_RR_OP(159, sh1add, 0x0000000000040000, 0x20000, 0x0);
    TEST_RR_OP(160, sh1add, 0x0000000000080000, 0x40000, 0x0);
    TEST_RR_OP(161, sh1add, 0x0000000000100000, 0x80000, 0x0);
    TEST_RR_OP(162, sh1add, 0x0000000000200000, 0x100000, 0x0);
    TEST_RR_OP(163, sh1add, 0x0000000000400000, 0x200000, 0x0);
    TEST_RR_OP(164, sh1add, 0x0000000000800000, 0x400000, 0x0);
    TEST_RR_OP(165, sh1add, 0x0000000001000000, 0x800000, 0x0);
    TEST_RR_OP(166, sh1add, 0x0000000002000000, 0x1000000, 0x0);
    TEST_RR_OP(167, sh1add, 0x0000000004000000, 0x2000000, 0x0);
    TEST_RR_OP(168, sh1add, 0x0000000008000000, 0x4000000, 0x0);
    TEST_RR_OP(169, sh1add, 0x0000000010000000, 0x8000000, 0x0);
    TEST_RR_OP(170, sh1add, 0x0000000020000000, 0x10000000, 0x0);
    TEST_RR_OP(171, sh1add, 0x0000000040000000, 0x20000000, 0x0);
    TEST_RR_OP(172, sh1add, 0x0000000080000000, 0x40000000, 0x0);
    TEST_RR_OP(173, sh1add, 0x0000000100000000, 0x80000000, 0x0);
    TEST_RR_OP(174, sh1add, 0x0000000200000000, 0x100000000, 0x0);
    TEST_RR_OP(175, sh1add, 0x0000000400000000, 0x200000000, 0x0);
    TEST_RR_OP(176, sh1add, 0x0000000800000000, 0x400000000, 0x0);
    TEST_RR_OP(177, sh1add, 0x0000001000000000, 0x800000000, 0x0);
    TEST_RR_OP(178, sh1add, 0x0000002000000000, 0x1000000000, 0x0);
    TEST_RR_OP(179, sh1add, 0x0000004000000000, 0x2000000000, 0x0);
    TEST_RR_OP(180, sh1add, 0x0000008000000000, 0x4000000000, 0x0);
    TEST_RR_OP(181, sh1add, 0x0000010000000000, 0x8000000000, 0x0);
    TEST_RR_OP(182, sh1add, 0x0000020000000000, 0x10000000000, 0x0);
    TEST_RR_OP(183, sh1add, 0x0000040000000000, 0x20000000000, 0x0);
    TEST_RR_OP(184, sh1add, 0x0000080000000000, 0x40000000000, 0x0);
    TEST_RR_OP(185, sh1add, 0x0000100000000000, 0x80000000000, 0x0);
    TEST_RR_OP(186, sh1add, 0x0000200000000000, 0x100000000000, 0x0);
    TEST_RR_OP(187, sh1add, 0x0000400000000000, 0x200000000000, 0x0);
    TEST_RR_OP(188, sh1add, 0x0000800000000000, 0x400000000000, 0x0);
    TEST_RR_OP(189, sh1add, 0x0001000000000000, 0x800000000000, 0x0);
    TEST_RR_OP(190, sh1add, 0x0002000000000000, 0x1000000000000, 0x0);
    TEST_RR_OP(191, sh1add, 0x0004000000000000, 0x2000000000000, 0x0);
    TEST_RR_OP(192, sh1add, 0x0008000000000000, 0x4000000000000, 0x0);
    TEST_RR_OP(193, sh1add, 0x0010000000000000, 0x8000000000000, 0x0);
    TEST_RR_OP(194, sh1add, 0x0020000000000000, 0x10000000000000, 0x0);
    TEST_RR_OP(195, sh1add, 0x0040000000000000, 0x20000000000000, 0x0);
    TEST_RR_OP(196, sh1add, 0x0080000000000000, 0x40000000000000, 0x0);
    TEST_RR_OP(197, sh1add, 0x0100000000000000, 0x80000000000000, 0x0);
    TEST_RR_OP(198, sh1add, 0x0200000000000000, 0x100000000000000, 0x0);
    TEST_RR_OP(199, sh1add, 0x0400000000000000, 0x200000000000000, 0x0);
    TEST_RR_OP(200, sh1add, 0x0800000000000000, 0x400000000000000, 0x0);
    TEST_RR_OP(201, sh1add, 0x1000000000000000, 0x800000000000000, 0x0);
    TEST_RR_OP(202, sh1add, 0x2000000000000000, 0x1000000000000000, 0x0);
    TEST_RR_OP(203, sh1add, 0x4000000000000000, 0x2000000000000000, 0x0);
    TEST_RR_OP(204, sh1add, 0x8000000000000000, 0x4000000000000000, 0x0);
    TEST_RR_OP(205, sh1add, 0x0000000000000000, 0x8000000000000000, 0x0);
    TEST_RR_OP(206, sh1add, 0x0000000000000000, 0x0, 0x0);
    TEST_RR_OP(207, sh1add, 0xfffffffffffffffc, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(208, sh1add, 0xfffffffffffffffa, 0xfffffffffffffffd, 0x0);
    TEST_RR_OP(209, sh1add, 0xfffffffffffffff6, 0xfffffffffffffffb, 0x0);
    TEST_RR_OP(210, sh1add, 0xffffffffffffffee, 0xfffffffffffffff7, 0x0);
    TEST_RR_OP(211, sh1add, 0xffffffffffffffde, 0xffffffffffffffef, 0x0);
    TEST_RR_OP(212, sh1add, 0xffffffffffffffbe, 0xffffffffffffffdf, 0x0);
    TEST_RR_OP(213, sh1add, 0xffffffffffffff7e, 0xffffffffffffffbf, 0x0);
    TEST_RR_OP(214, sh1add, 0xfffffffffffffefe, 0xffffffffffffff7f, 0x0);
    TEST_RR_OP(215, sh1add, 0xfffffffffffffdfe, 0xfffffffffffffeff, 0x0);
    TEST_RR_OP(216, sh1add, 0xfffffffffffffbfe, 0xfffffffffffffdff, 0x0);
    TEST_RR_OP(217, sh1add, 0xfffffffffffff7fe, 0xfffffffffffffbff, 0x0);
    TEST_RR_OP(218, sh1add, 0xffffffffffffeffe, 0xfffffffffffff7ff, 0x0);
    TEST_RR_OP(219, sh1add, 0xffffffffffffdffe, 0xffffffffffffefff, 0x0);
    TEST_RR_OP(220, sh1add, 0xffffffffffffbffe, 0xffffffffffffdfff, 0x0);
    TEST_RR_OP(221, sh1add, 0xffffffffffff7ffe, 0xffffffffffffbfff, 0x0);
    TEST_RR_OP(222, sh1add, 0xfffffffffffefffe, 0xffffffffffff7fff, 0x0);
    TEST_RR_OP(223, sh1add, 0xfffffffffffdfffe, 0xfffffffffffeffff, 0x0);
    TEST_RR_OP(224, sh1add, 0xfffffffffffbfffe, 0xfffffffffffdffff, 0x0);
    TEST_RR_OP(225, sh1add, 0xfffffffffff7fffe, 0xfffffffffffbffff, 0x0);
    TEST_RR_OP(226, sh1add, 0xffffffffffeffffe, 0xfffffffffff7ffff, 0x0);
    TEST_RR_OP(227, sh1add, 0xffffffffffdffffe, 0xffffffffffefffff, 0x0);
    TEST_RR_OP(228, sh1add, 0xffffffffffbffffe, 0xffffffffffdfffff, 0x0);
    TEST_RR_OP(229, sh1add, 0xffffffffff7ffffe, 0xffffffffffbfffff, 0x0);
    TEST_RR_OP(230, sh1add, 0xfffffffffefffffe, 0xffffffffff7fffff, 0x0);
    TEST_RR_OP(231, sh1add, 0xfffffffffdfffffe, 0xfffffffffeffffff, 0x0);
    TEST_RR_OP(232, sh1add, 0xfffffffffbfffffe, 0xfffffffffdffffff, 0x0);
    TEST_RR_OP(233, sh1add, 0xfffffffff7fffffe, 0xfffffffffbffffff, 0x0);
    TEST_RR_OP(234, sh1add, 0xffffffffeffffffe, 0xfffffffff7ffffff, 0x0);
    TEST_RR_OP(235, sh1add, 0xffffffffdffffffe, 0xffffffffefffffff, 0x0);
    TEST_RR_OP(236, sh1add, 0xffffffffbffffffe, 0xffffffffdfffffff, 0x0);
    TEST_RR_OP(237, sh1add, 0xffffffff7ffffffe, 0xffffffffbfffffff, 0x0);
    TEST_RR_OP(238, sh1add, 0xfffffffefffffffe, 0xffffffff7fffffff, 0x0);
    TEST_RR_OP(239, sh1add, 0xfffffffdfffffffe, 0xfffffffeffffffff, 0x0);
    TEST_RR_OP(240, sh1add, 0xfffffffbfffffffe, 0xfffffffdffffffff, 0x0);
    TEST_RR_OP(241, sh1add, 0xfffffff7fffffffe, 0xfffffffbffffffff, 0x0);
    TEST_RR_OP(242, sh1add, 0xffffffeffffffffe, 0xfffffff7ffffffff, 0x0);
    TEST_RR_OP(243, sh1add, 0xffffffdffffffffe, 0xffffffefffffffff, 0x0);
    TEST_RR_OP(244, sh1add, 0xffffffbffffffffe, 0xffffffdfffffffff, 0x0);
    TEST_RR_OP(245, sh1add, 0xffffff7ffffffffe, 0xffffffbfffffffff, 0x0);
    TEST_RR_OP(246, sh1add, 0xfffffefffffffffe, 0xffffff7fffffffff, 0x0);
    TEST_RR_OP(247, sh1add, 0xfffffdfffffffffe, 0xfffffeffffffffff, 0x0);
    TEST_RR_OP(248, sh1add, 0xfffffbfffffffffe, 0xfffffdffffffffff, 0x0);
    TEST_RR_OP(249, sh1add, 0xfffff7fffffffffe, 0xfffffbffffffffff, 0x0);
    TEST_RR_OP(250, sh1add, 0xffffeffffffffffe, 0xfffff7ffffffffff, 0x0);
    TEST_RR_OP(251, sh1add, 0xffffdffffffffffe, 0xffffefffffffffff, 0x0);
    TEST_RR_OP(252, sh1add, 0xffffbffffffffffe, 0xffffdfffffffffff, 0x0);
    TEST_RR_OP(253, sh1add, 0xffff7ffffffffffe, 0xffffbfffffffffff, 0x0);
    TEST_RR_OP(254, sh1add, 0xfffefffffffffffe, 0xffff7fffffffffff, 0x0);
    TEST_RR_OP(255, sh1add, 0xfffdfffffffffffe, 0xfffeffffffffffff, 0x0);
    TEST_RR_OP(256, sh1add, 0xfffbfffffffffffe, 0xfffdffffffffffff, 0x0);
    TEST_RR_OP(257, sh1add, 0xfff7fffffffffffe, 0xfffbffffffffffff, 0x0);
    TEST_RR_OP(258, sh1add, 0xffeffffffffffffe, 0xfff7ffffffffffff, 0x0);
    TEST_RR_OP(259, sh1add, 0xffdffffffffffffe, 0xffefffffffffffff, 0x0);
    TEST_RR_OP(260, sh1add, 0xffbffffffffffffe, 0xffdfffffffffffff, 0x0);
    TEST_RR_OP(261, sh1add, 0xff7ffffffffffffe, 0xffbfffffffffffff, 0x0);
    TEST_RR_OP(262, sh1add, 0xfefffffffffffffe, 0xff7fffffffffffff, 0x0);
    TEST_RR_OP(263, sh1add, 0xfdfffffffffffffe, 0xfeffffffffffffff, 0x0);
    TEST_RR_OP(264, sh1add, 0xfbfffffffffffffe, 0xfdffffffffffffff, 0x0);
    TEST_RR_OP(265, sh1add, 0xf7fffffffffffffe, 0xfbffffffffffffff, 0x0);
    TEST_RR_OP(266, sh1add, 0xeffffffffffffffe, 0xf7ffffffffffffff, 0x0);
    TEST_RR_OP(267, sh1add, 0xdffffffffffffffe, 0xefffffffffffffff, 0x0);
    TEST_RR_OP(268, sh1add, 0xbffffffffffffffe, 0xdfffffffffffffff, 0x0);
    TEST_RR_OP(269, sh1add, 0x7ffffffffffffffe, 0xbfffffffffffffff, 0x0);
    TEST_RR_OP(270, sh1add, 0xfffffffffffffffe, 0x7fffffffffffffff, 0x0);
    TEST_RR_OP(271, sh1add, 0xfffffffffffffffe, 0xffffffffffffffff, 0x0);

TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

