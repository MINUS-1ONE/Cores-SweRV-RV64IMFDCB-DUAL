# See LICENSE for license details.

#*****************************************************************************
# clmulh.S
#-----------------------------------------------------------------------------
#
# Test clmulh instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_RR_OP(2, clmulh, 0x0dbcc1bf2c8ef9fe, 0x10fd3dedadea5195, 0xdf7f3844121bcc23);
    TEST_RR_OP(3, clmulh, 0x6fae1a6f5949a08c, 0xbd295ce2d2ffbec1, 0xf5adb41aa47d105b);
    TEST_RR_OP(4, clmulh, 0x656144b050e5dd35, 0xc9649f05a8e1a8bb, 0x82f6747f707af2c0);
    TEST_RR_OP(5, clmulh, 0x08ee2eeaf280313a, 0x3541291848c99fcb, 0x73a92fd4e19bfbc3);
    TEST_RR_OP(6, clmulh, 0x0566b47765bb7522, 0x10a24740461d524f, 0x546b0e54528a10af);
    TEST_RR_OP(7, clmulh, 0x0566b47765bb7522, 0x546b0e54528a10af, 0x10a24740461d524f);
    TEST_RR_OP(8, clmulh, 0x08ee2eeaf280313a, 0x73a92fd4e19bfbc3, 0x3541291848c99fcb);
    TEST_RR_OP(9, clmulh, 0x656144b050e5dd35, 0x82f6747f707af2c0, 0xc9649f05a8e1a8bb);
    TEST_RR_OP(10, clmulh, 0x6fae1a6f5949a08c, 0xf5adb41aa47d105b, 0xbd295ce2d2ffbec1);
    TEST_RR_OP(11, clmulh, 0x0dbcc1bf2c8ef9fe, 0xdf7f3844121bcc23, 0x10fd3dedadea5195);
    TEST_RR_OP(12, clmulh, 0x0000000000000000, 0x1, 0xffffffffffffffff);
    TEST_RR_OP(13, clmulh, 0x0000000000000000, 0x2, 0x7fffffffffffffff);
    TEST_RR_OP(14, clmulh, 0x0000000000000002, 0x4, 0xbfffffffffffffff);
    TEST_RR_OP(15, clmulh, 0x0000000000000006, 0x8, 0xdfffffffffffffff);
    TEST_RR_OP(16, clmulh, 0x000000000000000e, 0x10, 0xefffffffffffffff);
    TEST_RR_OP(17, clmulh, 0x000000000000001e, 0x20, 0xf7ffffffffffffff);
    TEST_RR_OP(18, clmulh, 0x000000000000003e, 0x40, 0xfbffffffffffffff);
    TEST_RR_OP(19, clmulh, 0x000000000000007e, 0x80, 0xfdffffffffffffff);
    TEST_RR_OP(20, clmulh, 0x00000000000000fe, 0x100, 0xfeffffffffffffff);
    TEST_RR_OP(21, clmulh, 0x00000000000001fe, 0x200, 0xff7fffffffffffff);
    TEST_RR_OP(22, clmulh, 0x00000000000003fe, 0x400, 0xffbfffffffffffff);
    TEST_RR_OP(23, clmulh, 0x00000000000007fe, 0x800, 0xffdfffffffffffff);
    TEST_RR_OP(24, clmulh, 0x0000000000000ffe, 0x1000, 0xffefffffffffffff);
    TEST_RR_OP(25, clmulh, 0x0000000000001ffe, 0x2000, 0xfff7ffffffffffff);
    TEST_RR_OP(26, clmulh, 0x0000000000003ffe, 0x4000, 0xfffbffffffffffff);
    TEST_RR_OP(27, clmulh, 0x0000000000007ffe, 0x8000, 0xfffdffffffffffff);
    TEST_RR_OP(28, clmulh, 0x000000000000fffe, 0x10000, 0xfffeffffffffffff);
    TEST_RR_OP(29, clmulh, 0x000000000001fffe, 0x20000, 0xffff7fffffffffff);
    TEST_RR_OP(30, clmulh, 0x000000000003fffe, 0x40000, 0xffffbfffffffffff);
    TEST_RR_OP(31, clmulh, 0x000000000007fffe, 0x80000, 0xffffdfffffffffff);
    TEST_RR_OP(32, clmulh, 0x00000000000ffffe, 0x100000, 0xffffefffffffffff);
    TEST_RR_OP(33, clmulh, 0x00000000001ffffe, 0x200000, 0xfffff7ffffffffff);
    TEST_RR_OP(34, clmulh, 0x00000000003ffffe, 0x400000, 0xfffffbffffffffff);
    TEST_RR_OP(35, clmulh, 0x00000000007ffffe, 0x800000, 0xfffffdffffffffff);
    TEST_RR_OP(36, clmulh, 0x0000000000fffffe, 0x1000000, 0xfffffeffffffffff);
    TEST_RR_OP(37, clmulh, 0x0000000001fffffe, 0x2000000, 0xffffff7fffffffff);
    TEST_RR_OP(38, clmulh, 0x0000000003fffffe, 0x4000000, 0xffffffbfffffffff);
    TEST_RR_OP(39, clmulh, 0x0000000007fffffe, 0x8000000, 0xffffffdfffffffff);
    TEST_RR_OP(40, clmulh, 0x000000000ffffffe, 0x10000000, 0xffffffefffffffff);
    TEST_RR_OP(41, clmulh, 0x000000001ffffffe, 0x20000000, 0xfffffff7ffffffff);
    TEST_RR_OP(42, clmulh, 0x000000003ffffffe, 0x40000000, 0xfffffffbffffffff);
    TEST_RR_OP(43, clmulh, 0x000000007ffffffe, 0x80000000, 0xfffffffdffffffff);
    TEST_RR_OP(44, clmulh, 0x00000000fffffffe, 0x100000000, 0xfffffffeffffffff);
    TEST_RR_OP(45, clmulh, 0x00000001fffffffe, 0x200000000, 0xffffffff7fffffff);
    TEST_RR_OP(46, clmulh, 0x00000003fffffffe, 0x400000000, 0xffffffffbfffffff);
    TEST_RR_OP(47, clmulh, 0x00000007fffffffe, 0x800000000, 0xffffffffdfffffff);
    TEST_RR_OP(48, clmulh, 0x0000000ffffffffe, 0x1000000000, 0xffffffffefffffff);
    TEST_RR_OP(49, clmulh, 0x0000001ffffffffe, 0x2000000000, 0xfffffffff7ffffff);
    TEST_RR_OP(50, clmulh, 0x0000003ffffffffe, 0x4000000000, 0xfffffffffbffffff);
    TEST_RR_OP(51, clmulh, 0x0000007ffffffffe, 0x8000000000, 0xfffffffffdffffff);
    TEST_RR_OP(52, clmulh, 0x000000fffffffffe, 0x10000000000, 0xfffffffffeffffff);
    TEST_RR_OP(53, clmulh, 0x000001fffffffffe, 0x20000000000, 0xffffffffff7fffff);
    TEST_RR_OP(54, clmulh, 0x000003fffffffffe, 0x40000000000, 0xffffffffffbfffff);
    TEST_RR_OP(55, clmulh, 0x000007fffffffffe, 0x80000000000, 0xffffffffffdfffff);
    TEST_RR_OP(56, clmulh, 0x00000ffffffffffe, 0x100000000000, 0xffffffffffefffff);
    TEST_RR_OP(57, clmulh, 0x00001ffffffffffe, 0x200000000000, 0xfffffffffff7ffff);
    TEST_RR_OP(58, clmulh, 0x00003ffffffffffe, 0x400000000000, 0xfffffffffffbffff);
    TEST_RR_OP(59, clmulh, 0x00007ffffffffffe, 0x800000000000, 0xfffffffffffdffff);
    TEST_RR_OP(60, clmulh, 0x0000fffffffffffe, 0x1000000000000, 0xfffffffffffeffff);
    TEST_RR_OP(61, clmulh, 0x0001fffffffffffe, 0x2000000000000, 0xffffffffffff7fff);
    TEST_RR_OP(62, clmulh, 0x0003fffffffffffe, 0x4000000000000, 0xffffffffffffbfff);
    TEST_RR_OP(63, clmulh, 0x0007fffffffffffe, 0x8000000000000, 0xffffffffffffdfff);
    TEST_RR_OP(64, clmulh, 0x000ffffffffffffe, 0x10000000000000, 0xffffffffffffefff);
    TEST_RR_OP(65, clmulh, 0x001ffffffffffffe, 0x20000000000000, 0xfffffffffffff7ff);
    TEST_RR_OP(66, clmulh, 0x003ffffffffffffe, 0x40000000000000, 0xfffffffffffffbff);
    TEST_RR_OP(67, clmulh, 0x007ffffffffffffe, 0x80000000000000, 0xfffffffffffffdff);
    TEST_RR_OP(68, clmulh, 0x00fffffffffffffe, 0x100000000000000, 0xfffffffffffffeff);
    TEST_RR_OP(69, clmulh, 0x01fffffffffffffe, 0x200000000000000, 0xffffffffffffff7f);
    TEST_RR_OP(70, clmulh, 0x03fffffffffffffe, 0x400000000000000, 0xffffffffffffffbf);
    TEST_RR_OP(71, clmulh, 0x07fffffffffffffe, 0x800000000000000, 0xffffffffffffffdf);
    TEST_RR_OP(72, clmulh, 0x0ffffffffffffffe, 0x1000000000000000, 0xffffffffffffffef);
    TEST_RR_OP(73, clmulh, 0x1ffffffffffffffe, 0x2000000000000000, 0xfffffffffffffff7);
    TEST_RR_OP(74, clmulh, 0x3ffffffffffffffe, 0x4000000000000000, 0xfffffffffffffffb);
    TEST_RR_OP(75, clmulh, 0x7ffffffffffffffe, 0x8000000000000000, 0xfffffffffffffffd);
    TEST_RR_OP(76, clmulh, 0x0000000000000000, 0x0, 0xfffffffffffffffe);
    TEST_RR_OP(77, clmulh, 0x0000000000000000, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(78, clmulh, 0x7ffffffffffffffe, 0xfffffffffffffffd, 0x8000000000000000);
    TEST_RR_OP(79, clmulh, 0x3ffffffffffffffe, 0xfffffffffffffffb, 0x4000000000000000);
    TEST_RR_OP(80, clmulh, 0x1ffffffffffffffe, 0xfffffffffffffff7, 0x2000000000000000);
    TEST_RR_OP(81, clmulh, 0x0ffffffffffffffe, 0xffffffffffffffef, 0x1000000000000000);
    TEST_RR_OP(82, clmulh, 0x07fffffffffffffe, 0xffffffffffffffdf, 0x800000000000000);
    TEST_RR_OP(83, clmulh, 0x03fffffffffffffe, 0xffffffffffffffbf, 0x400000000000000);
    TEST_RR_OP(84, clmulh, 0x01fffffffffffffe, 0xffffffffffffff7f, 0x200000000000000);
    TEST_RR_OP(85, clmulh, 0x00fffffffffffffe, 0xfffffffffffffeff, 0x100000000000000);
    TEST_RR_OP(86, clmulh, 0x007ffffffffffffe, 0xfffffffffffffdff, 0x80000000000000);
    TEST_RR_OP(87, clmulh, 0x003ffffffffffffe, 0xfffffffffffffbff, 0x40000000000000);
    TEST_RR_OP(88, clmulh, 0x001ffffffffffffe, 0xfffffffffffff7ff, 0x20000000000000);
    TEST_RR_OP(89, clmulh, 0x000ffffffffffffe, 0xffffffffffffefff, 0x10000000000000);
    TEST_RR_OP(90, clmulh, 0x0007fffffffffffe, 0xffffffffffffdfff, 0x8000000000000);
    TEST_RR_OP(91, clmulh, 0x0003fffffffffffe, 0xffffffffffffbfff, 0x4000000000000);
    TEST_RR_OP(92, clmulh, 0x0001fffffffffffe, 0xffffffffffff7fff, 0x2000000000000);
    TEST_RR_OP(93, clmulh, 0x0000fffffffffffe, 0xfffffffffffeffff, 0x1000000000000);
    TEST_RR_OP(94, clmulh, 0x00007ffffffffffe, 0xfffffffffffdffff, 0x800000000000);
    TEST_RR_OP(95, clmulh, 0x00003ffffffffffe, 0xfffffffffffbffff, 0x400000000000);
    TEST_RR_OP(96, clmulh, 0x00001ffffffffffe, 0xfffffffffff7ffff, 0x200000000000);
    TEST_RR_OP(97, clmulh, 0x00000ffffffffffe, 0xffffffffffefffff, 0x100000000000);
    TEST_RR_OP(98, clmulh, 0x000007fffffffffe, 0xffffffffffdfffff, 0x80000000000);
    TEST_RR_OP(99, clmulh, 0x000003fffffffffe, 0xffffffffffbfffff, 0x40000000000);
    TEST_RR_OP(100, clmulh, 0x000001fffffffffe, 0xffffffffff7fffff, 0x20000000000);
    TEST_RR_OP(101, clmulh, 0x000000fffffffffe, 0xfffffffffeffffff, 0x10000000000);
    TEST_RR_OP(102, clmulh, 0x0000007ffffffffe, 0xfffffffffdffffff, 0x8000000000);
    TEST_RR_OP(103, clmulh, 0x0000003ffffffffe, 0xfffffffffbffffff, 0x4000000000);
    TEST_RR_OP(104, clmulh, 0x0000001ffffffffe, 0xfffffffff7ffffff, 0x2000000000);
    TEST_RR_OP(105, clmulh, 0x0000000ffffffffe, 0xffffffffefffffff, 0x1000000000);
    TEST_RR_OP(106, clmulh, 0x00000007fffffffe, 0xffffffffdfffffff, 0x800000000);
    TEST_RR_OP(107, clmulh, 0x00000003fffffffe, 0xffffffffbfffffff, 0x400000000);
    TEST_RR_OP(108, clmulh, 0x00000001fffffffe, 0xffffffff7fffffff, 0x200000000);
    TEST_RR_OP(109, clmulh, 0x00000000fffffffe, 0xfffffffeffffffff, 0x100000000);
    TEST_RR_OP(110, clmulh, 0x000000007ffffffe, 0xfffffffdffffffff, 0x80000000);
    TEST_RR_OP(111, clmulh, 0x000000003ffffffe, 0xfffffffbffffffff, 0x40000000);
    TEST_RR_OP(112, clmulh, 0x000000001ffffffe, 0xfffffff7ffffffff, 0x20000000);
    TEST_RR_OP(113, clmulh, 0x000000000ffffffe, 0xffffffefffffffff, 0x10000000);
    TEST_RR_OP(114, clmulh, 0x0000000007fffffe, 0xffffffdfffffffff, 0x8000000);
    TEST_RR_OP(115, clmulh, 0x0000000003fffffe, 0xffffffbfffffffff, 0x4000000);
    TEST_RR_OP(116, clmulh, 0x0000000001fffffe, 0xffffff7fffffffff, 0x2000000);
    TEST_RR_OP(117, clmulh, 0x0000000000fffffe, 0xfffffeffffffffff, 0x1000000);
    TEST_RR_OP(118, clmulh, 0x00000000007ffffe, 0xfffffdffffffffff, 0x800000);
    TEST_RR_OP(119, clmulh, 0x00000000003ffffe, 0xfffffbffffffffff, 0x400000);
    TEST_RR_OP(120, clmulh, 0x00000000001ffffe, 0xfffff7ffffffffff, 0x200000);
    TEST_RR_OP(121, clmulh, 0x00000000000ffffe, 0xffffefffffffffff, 0x100000);
    TEST_RR_OP(122, clmulh, 0x000000000007fffe, 0xffffdfffffffffff, 0x80000);
    TEST_RR_OP(123, clmulh, 0x000000000003fffe, 0xffffbfffffffffff, 0x40000);
    TEST_RR_OP(124, clmulh, 0x000000000001fffe, 0xffff7fffffffffff, 0x20000);
    TEST_RR_OP(125, clmulh, 0x000000000000fffe, 0xfffeffffffffffff, 0x10000);
    TEST_RR_OP(126, clmulh, 0x0000000000007ffe, 0xfffdffffffffffff, 0x8000);
    TEST_RR_OP(127, clmulh, 0x0000000000003ffe, 0xfffbffffffffffff, 0x4000);
    TEST_RR_OP(128, clmulh, 0x0000000000001ffe, 0xfff7ffffffffffff, 0x2000);
    TEST_RR_OP(129, clmulh, 0x0000000000000ffe, 0xffefffffffffffff, 0x1000);
    TEST_RR_OP(130, clmulh, 0x00000000000007fe, 0xffdfffffffffffff, 0x800);
    TEST_RR_OP(131, clmulh, 0x00000000000003fe, 0xffbfffffffffffff, 0x400);
    TEST_RR_OP(132, clmulh, 0x00000000000001fe, 0xff7fffffffffffff, 0x200);
    TEST_RR_OP(133, clmulh, 0x00000000000000fe, 0xfeffffffffffffff, 0x100);
    TEST_RR_OP(134, clmulh, 0x000000000000007e, 0xfdffffffffffffff, 0x80);
    TEST_RR_OP(135, clmulh, 0x000000000000003e, 0xfbffffffffffffff, 0x40);
    TEST_RR_OP(136, clmulh, 0x000000000000001e, 0xf7ffffffffffffff, 0x20);
    TEST_RR_OP(137, clmulh, 0x000000000000000e, 0xefffffffffffffff, 0x10);
    TEST_RR_OP(138, clmulh, 0x0000000000000006, 0xdfffffffffffffff, 0x8);
    TEST_RR_OP(139, clmulh, 0x0000000000000002, 0xbfffffffffffffff, 0x4);
    TEST_RR_OP(140, clmulh, 0x0000000000000000, 0x7fffffffffffffff, 0x2);
    TEST_RR_OP(141, clmulh, 0x0000000000000000, 0xffffffffffffffff, 0x1);
    TEST_RR_OP(142, clmulh, 0x0000000000000000, 0x1, 0x0);
    TEST_RR_OP(143, clmulh, 0x0000000000000000, 0x2, 0x0);
    TEST_RR_OP(144, clmulh, 0x0000000000000000, 0x4, 0x0);
    TEST_RR_OP(145, clmulh, 0x0000000000000000, 0x8, 0x0);
    TEST_RR_OP(146, clmulh, 0x0000000000000000, 0x10, 0x0);
    TEST_RR_OP(147, clmulh, 0x0000000000000000, 0x20, 0x0);
    TEST_RR_OP(148, clmulh, 0x0000000000000000, 0x40, 0x0);
    TEST_RR_OP(149, clmulh, 0x0000000000000000, 0x80, 0x0);
    TEST_RR_OP(150, clmulh, 0x0000000000000000, 0x100, 0x0);
    TEST_RR_OP(151, clmulh, 0x0000000000000000, 0x200, 0x0);
    TEST_RR_OP(152, clmulh, 0x0000000000000000, 0x400, 0x0);
    TEST_RR_OP(153, clmulh, 0x0000000000000000, 0x800, 0x0);
    TEST_RR_OP(154, clmulh, 0x0000000000000000, 0x1000, 0x0);
    TEST_RR_OP(155, clmulh, 0x0000000000000000, 0x2000, 0x0);
    TEST_RR_OP(156, clmulh, 0x0000000000000000, 0x4000, 0x0);
    TEST_RR_OP(157, clmulh, 0x0000000000000000, 0x8000, 0x0);
    TEST_RR_OP(158, clmulh, 0x0000000000000000, 0x10000, 0x0);
    TEST_RR_OP(159, clmulh, 0x0000000000000000, 0x20000, 0x0);
    TEST_RR_OP(160, clmulh, 0x0000000000000000, 0x40000, 0x0);
    TEST_RR_OP(161, clmulh, 0x0000000000000000, 0x80000, 0x0);
    TEST_RR_OP(162, clmulh, 0x0000000000000000, 0x100000, 0x0);
    TEST_RR_OP(163, clmulh, 0x0000000000000000, 0x200000, 0x0);
    TEST_RR_OP(164, clmulh, 0x0000000000000000, 0x400000, 0x0);
    TEST_RR_OP(165, clmulh, 0x0000000000000000, 0x800000, 0x0);
    TEST_RR_OP(166, clmulh, 0x0000000000000000, 0x1000000, 0x0);
    TEST_RR_OP(167, clmulh, 0x0000000000000000, 0x2000000, 0x0);
    TEST_RR_OP(168, clmulh, 0x0000000000000000, 0x4000000, 0x0);
    TEST_RR_OP(169, clmulh, 0x0000000000000000, 0x8000000, 0x0);
    TEST_RR_OP(170, clmulh, 0x0000000000000000, 0x10000000, 0x0);
    TEST_RR_OP(171, clmulh, 0x0000000000000000, 0x20000000, 0x0);
    TEST_RR_OP(172, clmulh, 0x0000000000000000, 0x40000000, 0x0);
    TEST_RR_OP(173, clmulh, 0x0000000000000000, 0x80000000, 0x0);
    TEST_RR_OP(174, clmulh, 0x0000000000000000, 0x100000000, 0x0);
    TEST_RR_OP(175, clmulh, 0x0000000000000000, 0x200000000, 0x0);
    TEST_RR_OP(176, clmulh, 0x0000000000000000, 0x400000000, 0x0);
    TEST_RR_OP(177, clmulh, 0x0000000000000000, 0x800000000, 0x0);
    TEST_RR_OP(178, clmulh, 0x0000000000000000, 0x1000000000, 0x0);
    TEST_RR_OP(179, clmulh, 0x0000000000000000, 0x2000000000, 0x0);
    TEST_RR_OP(180, clmulh, 0x0000000000000000, 0x4000000000, 0x0);
    TEST_RR_OP(181, clmulh, 0x0000000000000000, 0x8000000000, 0x0);
    TEST_RR_OP(182, clmulh, 0x0000000000000000, 0x10000000000, 0x0);
    TEST_RR_OP(183, clmulh, 0x0000000000000000, 0x20000000000, 0x0);
    TEST_RR_OP(184, clmulh, 0x0000000000000000, 0x40000000000, 0x0);
    TEST_RR_OP(185, clmulh, 0x0000000000000000, 0x80000000000, 0x0);
    TEST_RR_OP(186, clmulh, 0x0000000000000000, 0x100000000000, 0x0);
    TEST_RR_OP(187, clmulh, 0x0000000000000000, 0x200000000000, 0x0);
    TEST_RR_OP(188, clmulh, 0x0000000000000000, 0x400000000000, 0x0);
    TEST_RR_OP(189, clmulh, 0x0000000000000000, 0x800000000000, 0x0);
    TEST_RR_OP(190, clmulh, 0x0000000000000000, 0x1000000000000, 0x0);
    TEST_RR_OP(191, clmulh, 0x0000000000000000, 0x2000000000000, 0x0);
    TEST_RR_OP(192, clmulh, 0x0000000000000000, 0x4000000000000, 0x0);
    TEST_RR_OP(193, clmulh, 0x0000000000000000, 0x8000000000000, 0x0);
    TEST_RR_OP(194, clmulh, 0x0000000000000000, 0x10000000000000, 0x0);
    TEST_RR_OP(195, clmulh, 0x0000000000000000, 0x20000000000000, 0x0);
    TEST_RR_OP(196, clmulh, 0x0000000000000000, 0x40000000000000, 0x0);
    TEST_RR_OP(197, clmulh, 0x0000000000000000, 0x80000000000000, 0x0);
    TEST_RR_OP(198, clmulh, 0x0000000000000000, 0x100000000000000, 0x0);
    TEST_RR_OP(199, clmulh, 0x0000000000000000, 0x200000000000000, 0x0);
    TEST_RR_OP(200, clmulh, 0x0000000000000000, 0x400000000000000, 0x0);
    TEST_RR_OP(201, clmulh, 0x0000000000000000, 0x800000000000000, 0x0);
    TEST_RR_OP(202, clmulh, 0x0000000000000000, 0x1000000000000000, 0x0);
    TEST_RR_OP(203, clmulh, 0x0000000000000000, 0x2000000000000000, 0x0);
    TEST_RR_OP(204, clmulh, 0x0000000000000000, 0x4000000000000000, 0x0);
    TEST_RR_OP(205, clmulh, 0x0000000000000000, 0x8000000000000000, 0x0);
    TEST_RR_OP(206, clmulh, 0x0000000000000000, 0x0, 0x0);
    TEST_RR_OP(207, clmulh, 0x0000000000000000, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(208, clmulh, 0x0000000000000000, 0xfffffffffffffffd, 0x0);
    TEST_RR_OP(209, clmulh, 0x0000000000000000, 0xfffffffffffffffb, 0x0);
    TEST_RR_OP(210, clmulh, 0x0000000000000000, 0xfffffffffffffff7, 0x0);
    TEST_RR_OP(211, clmulh, 0x0000000000000000, 0xffffffffffffffef, 0x0);
    TEST_RR_OP(212, clmulh, 0x0000000000000000, 0xffffffffffffffdf, 0x0);
    TEST_RR_OP(213, clmulh, 0x0000000000000000, 0xffffffffffffffbf, 0x0);
    TEST_RR_OP(214, clmulh, 0x0000000000000000, 0xffffffffffffff7f, 0x0);
    TEST_RR_OP(215, clmulh, 0x0000000000000000, 0xfffffffffffffeff, 0x0);
    TEST_RR_OP(216, clmulh, 0x0000000000000000, 0xfffffffffffffdff, 0x0);
    TEST_RR_OP(217, clmulh, 0x0000000000000000, 0xfffffffffffffbff, 0x0);
    TEST_RR_OP(218, clmulh, 0x0000000000000000, 0xfffffffffffff7ff, 0x0);
    TEST_RR_OP(219, clmulh, 0x0000000000000000, 0xffffffffffffefff, 0x0);
    TEST_RR_OP(220, clmulh, 0x0000000000000000, 0xffffffffffffdfff, 0x0);
    TEST_RR_OP(221, clmulh, 0x0000000000000000, 0xffffffffffffbfff, 0x0);
    TEST_RR_OP(222, clmulh, 0x0000000000000000, 0xffffffffffff7fff, 0x0);
    TEST_RR_OP(223, clmulh, 0x0000000000000000, 0xfffffffffffeffff, 0x0);
    TEST_RR_OP(224, clmulh, 0x0000000000000000, 0xfffffffffffdffff, 0x0);
    TEST_RR_OP(225, clmulh, 0x0000000000000000, 0xfffffffffffbffff, 0x0);
    TEST_RR_OP(226, clmulh, 0x0000000000000000, 0xfffffffffff7ffff, 0x0);
    TEST_RR_OP(227, clmulh, 0x0000000000000000, 0xffffffffffefffff, 0x0);
    TEST_RR_OP(228, clmulh, 0x0000000000000000, 0xffffffffffdfffff, 0x0);
    TEST_RR_OP(229, clmulh, 0x0000000000000000, 0xffffffffffbfffff, 0x0);
    TEST_RR_OP(230, clmulh, 0x0000000000000000, 0xffffffffff7fffff, 0x0);
    TEST_RR_OP(231, clmulh, 0x0000000000000000, 0xfffffffffeffffff, 0x0);
    TEST_RR_OP(232, clmulh, 0x0000000000000000, 0xfffffffffdffffff, 0x0);
    TEST_RR_OP(233, clmulh, 0x0000000000000000, 0xfffffffffbffffff, 0x0);
    TEST_RR_OP(234, clmulh, 0x0000000000000000, 0xfffffffff7ffffff, 0x0);
    TEST_RR_OP(235, clmulh, 0x0000000000000000, 0xffffffffefffffff, 0x0);
    TEST_RR_OP(236, clmulh, 0x0000000000000000, 0xffffffffdfffffff, 0x0);
    TEST_RR_OP(237, clmulh, 0x0000000000000000, 0xffffffffbfffffff, 0x0);
    TEST_RR_OP(238, clmulh, 0x0000000000000000, 0xffffffff7fffffff, 0x0);
    TEST_RR_OP(239, clmulh, 0x0000000000000000, 0xfffffffeffffffff, 0x0);
    TEST_RR_OP(240, clmulh, 0x0000000000000000, 0xfffffffdffffffff, 0x0);
    TEST_RR_OP(241, clmulh, 0x0000000000000000, 0xfffffffbffffffff, 0x0);
    TEST_RR_OP(242, clmulh, 0x0000000000000000, 0xfffffff7ffffffff, 0x0);
    TEST_RR_OP(243, clmulh, 0x0000000000000000, 0xffffffefffffffff, 0x0);
    TEST_RR_OP(244, clmulh, 0x0000000000000000, 0xffffffdfffffffff, 0x0);
    TEST_RR_OP(245, clmulh, 0x0000000000000000, 0xffffffbfffffffff, 0x0);
    TEST_RR_OP(246, clmulh, 0x0000000000000000, 0xffffff7fffffffff, 0x0);
    TEST_RR_OP(247, clmulh, 0x0000000000000000, 0xfffffeffffffffff, 0x0);
    TEST_RR_OP(248, clmulh, 0x0000000000000000, 0xfffffdffffffffff, 0x0);
    TEST_RR_OP(249, clmulh, 0x0000000000000000, 0xfffffbffffffffff, 0x0);
    TEST_RR_OP(250, clmulh, 0x0000000000000000, 0xfffff7ffffffffff, 0x0);
    TEST_RR_OP(251, clmulh, 0x0000000000000000, 0xffffefffffffffff, 0x0);
    TEST_RR_OP(252, clmulh, 0x0000000000000000, 0xffffdfffffffffff, 0x0);
    TEST_RR_OP(253, clmulh, 0x0000000000000000, 0xffffbfffffffffff, 0x0);
    TEST_RR_OP(254, clmulh, 0x0000000000000000, 0xffff7fffffffffff, 0x0);
    TEST_RR_OP(255, clmulh, 0x0000000000000000, 0xfffeffffffffffff, 0x0);
    TEST_RR_OP(256, clmulh, 0x0000000000000000, 0xfffdffffffffffff, 0x0);
    TEST_RR_OP(257, clmulh, 0x0000000000000000, 0xfffbffffffffffff, 0x0);
    TEST_RR_OP(258, clmulh, 0x0000000000000000, 0xfff7ffffffffffff, 0x0);
    TEST_RR_OP(259, clmulh, 0x0000000000000000, 0xffefffffffffffff, 0x0);
    TEST_RR_OP(260, clmulh, 0x0000000000000000, 0xffdfffffffffffff, 0x0);
    TEST_RR_OP(261, clmulh, 0x0000000000000000, 0xffbfffffffffffff, 0x0);
    TEST_RR_OP(262, clmulh, 0x0000000000000000, 0xff7fffffffffffff, 0x0);
    TEST_RR_OP(263, clmulh, 0x0000000000000000, 0xfeffffffffffffff, 0x0);
    TEST_RR_OP(264, clmulh, 0x0000000000000000, 0xfdffffffffffffff, 0x0);
    TEST_RR_OP(265, clmulh, 0x0000000000000000, 0xfbffffffffffffff, 0x0);
    TEST_RR_OP(266, clmulh, 0x0000000000000000, 0xf7ffffffffffffff, 0x0);
    TEST_RR_OP(267, clmulh, 0x0000000000000000, 0xefffffffffffffff, 0x0);
    TEST_RR_OP(268, clmulh, 0x0000000000000000, 0xdfffffffffffffff, 0x0);
    TEST_RR_OP(269, clmulh, 0x0000000000000000, 0xbfffffffffffffff, 0x0);
    TEST_RR_OP(270, clmulh, 0x0000000000000000, 0x7fffffffffffffff, 0x0);
    TEST_RR_OP(271, clmulh, 0x0000000000000000, 0xffffffffffffffff, 0x0);

TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

