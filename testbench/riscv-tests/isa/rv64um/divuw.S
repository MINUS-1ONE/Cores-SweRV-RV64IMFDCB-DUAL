# See LICENSE for license details.

#*****************************************************************************
# divuw.S
#-----------------------------------------------------------------------------
#
# Test divuw instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_RR_OP(2, divuw, 0x0000000000000009, 0x10fd3dedadea5195, 0xdf7f3844121bcc23);
    TEST_RR_OP(3, divuw, 0x0000000000000001, 0xbd295ce2d2ffbec1, 0xf5adb41aa47d105b);
    TEST_RR_OP(4, divuw, 0x0000000000000001, 0xc9649f05a8e1a8bb, 0x82f6747f707af2c0);
    TEST_RR_OP(5, divuw, 0x0000000000000000, 0x3541291848c99fcb, 0x73a92fd4e19bfbc3);
    TEST_RR_OP(6, divuw, 0x0000000000000000, 0x10a24740461d524f, 0x546b0e54528a10af);
    TEST_RR_OP(7, divuw, 0x0000000000000001, 0x546b0e54528a10af, 0x10a24740461d524f);
    TEST_RR_OP(8, divuw, 0x0000000000000003, 0x73a92fd4e19bfbc3, 0x3541291848c99fcb);
    TEST_RR_OP(9, divuw, 0x0000000000000000, 0x82f6747f707af2c0, 0xc9649f05a8e1a8bb);
    TEST_RR_OP(10, divuw, 0x0000000000000000, 0xf5adb41aa47d105b, 0xbd295ce2d2ffbec1);
    TEST_RR_OP(11, divuw, 0x0000000000000000, 0xdf7f3844121bcc23, 0x10fd3dedadea5195);
    TEST_RR_OP(12, divuw, 0x0000000000000000, 0x1, 0xffffffffffffffff);
    TEST_RR_OP(13, divuw, 0x0000000000000000, 0x2, 0x7fffffffffffffff);
    TEST_RR_OP(14, divuw, 0x0000000000000000, 0x4, 0xbfffffffffffffff);
    TEST_RR_OP(15, divuw, 0x0000000000000000, 0x8, 0xdfffffffffffffff);
    TEST_RR_OP(16, divuw, 0x0000000000000000, 0x10, 0xefffffffffffffff);
    TEST_RR_OP(17, divuw, 0x0000000000000000, 0x20, 0xf7ffffffffffffff);
    TEST_RR_OP(18, divuw, 0x0000000000000000, 0x40, 0xfbffffffffffffff);
    TEST_RR_OP(19, divuw, 0x0000000000000000, 0x80, 0xfdffffffffffffff);
    TEST_RR_OP(20, divuw, 0x0000000000000000, 0x100, 0xfeffffffffffffff);
    TEST_RR_OP(21, divuw, 0x0000000000000000, 0x200, 0xff7fffffffffffff);
    TEST_RR_OP(22, divuw, 0x0000000000000000, 0x400, 0xffbfffffffffffff);
    TEST_RR_OP(23, divuw, 0x0000000000000000, 0x800, 0xffdfffffffffffff);
    TEST_RR_OP(24, divuw, 0x0000000000000000, 0x1000, 0xffefffffffffffff);
    TEST_RR_OP(25, divuw, 0x0000000000000000, 0x2000, 0xfff7ffffffffffff);
    TEST_RR_OP(26, divuw, 0x0000000000000000, 0x4000, 0xfffbffffffffffff);
    TEST_RR_OP(27, divuw, 0x0000000000000000, 0x8000, 0xfffdffffffffffff);
    TEST_RR_OP(28, divuw, 0x0000000000000000, 0x10000, 0xfffeffffffffffff);
    TEST_RR_OP(29, divuw, 0x0000000000000000, 0x20000, 0xffff7fffffffffff);
    TEST_RR_OP(30, divuw, 0x0000000000000000, 0x40000, 0xffffbfffffffffff);
    TEST_RR_OP(31, divuw, 0x0000000000000000, 0x80000, 0xffffdfffffffffff);
    TEST_RR_OP(32, divuw, 0x0000000000000000, 0x100000, 0xffffefffffffffff);
    TEST_RR_OP(33, divuw, 0x0000000000000000, 0x200000, 0xfffff7ffffffffff);
    TEST_RR_OP(34, divuw, 0x0000000000000000, 0x400000, 0xfffffbffffffffff);
    TEST_RR_OP(35, divuw, 0x0000000000000000, 0x800000, 0xfffffdffffffffff);
    TEST_RR_OP(36, divuw, 0x0000000000000000, 0x1000000, 0xfffffeffffffffff);
    TEST_RR_OP(37, divuw, 0x0000000000000000, 0x2000000, 0xffffff7fffffffff);
    TEST_RR_OP(38, divuw, 0x0000000000000000, 0x4000000, 0xffffffbfffffffff);
    TEST_RR_OP(39, divuw, 0x0000000000000000, 0x8000000, 0xffffffdfffffffff);
    TEST_RR_OP(40, divuw, 0x0000000000000000, 0x10000000, 0xffffffefffffffff);
    TEST_RR_OP(41, divuw, 0x0000000000000000, 0x20000000, 0xfffffff7ffffffff);
    TEST_RR_OP(42, divuw, 0x0000000000000000, 0x40000000, 0xfffffffbffffffff);
    TEST_RR_OP(43, divuw, 0x0000000000000000, 0x80000000, 0xfffffffdffffffff);
    TEST_RR_OP(44, divuw, 0x0000000000000000, 0x100000000, 0xfffffffeffffffff);
    TEST_RR_OP(45, divuw, 0x0000000000000000, 0x200000000, 0xffffffff7fffffff);
    TEST_RR_OP(46, divuw, 0x0000000000000000, 0x400000000, 0xffffffffbfffffff);
    TEST_RR_OP(47, divuw, 0x0000000000000000, 0x800000000, 0xffffffffdfffffff);
    TEST_RR_OP(48, divuw, 0x0000000000000000, 0x1000000000, 0xffffffffefffffff);
    TEST_RR_OP(49, divuw, 0x0000000000000000, 0x2000000000, 0xfffffffff7ffffff);
    TEST_RR_OP(50, divuw, 0x0000000000000000, 0x4000000000, 0xfffffffffbffffff);
    TEST_RR_OP(51, divuw, 0x0000000000000000, 0x8000000000, 0xfffffffffdffffff);
    TEST_RR_OP(52, divuw, 0x0000000000000000, 0x10000000000, 0xfffffffffeffffff);
    TEST_RR_OP(53, divuw, 0x0000000000000000, 0x20000000000, 0xffffffffff7fffff);
    TEST_RR_OP(54, divuw, 0x0000000000000000, 0x40000000000, 0xffffffffffbfffff);
    TEST_RR_OP(55, divuw, 0x0000000000000000, 0x80000000000, 0xffffffffffdfffff);
    TEST_RR_OP(56, divuw, 0x0000000000000000, 0x100000000000, 0xffffffffffefffff);
    TEST_RR_OP(57, divuw, 0x0000000000000000, 0x200000000000, 0xfffffffffff7ffff);
    TEST_RR_OP(58, divuw, 0x0000000000000000, 0x400000000000, 0xfffffffffffbffff);
    TEST_RR_OP(59, divuw, 0x0000000000000000, 0x800000000000, 0xfffffffffffdffff);
    TEST_RR_OP(60, divuw, 0x0000000000000000, 0x1000000000000, 0xfffffffffffeffff);
    TEST_RR_OP(61, divuw, 0x0000000000000000, 0x2000000000000, 0xffffffffffff7fff);
    TEST_RR_OP(62, divuw, 0x0000000000000000, 0x4000000000000, 0xffffffffffffbfff);
    TEST_RR_OP(63, divuw, 0x0000000000000000, 0x8000000000000, 0xffffffffffffdfff);
    TEST_RR_OP(64, divuw, 0x0000000000000000, 0x10000000000000, 0xffffffffffffefff);
    TEST_RR_OP(65, divuw, 0x0000000000000000, 0x20000000000000, 0xfffffffffffff7ff);
    TEST_RR_OP(66, divuw, 0x0000000000000000, 0x40000000000000, 0xfffffffffffffbff);
    TEST_RR_OP(67, divuw, 0x0000000000000000, 0x80000000000000, 0xfffffffffffffdff);
    TEST_RR_OP(68, divuw, 0x0000000000000000, 0x100000000000000, 0xfffffffffffffeff);
    TEST_RR_OP(69, divuw, 0x0000000000000000, 0x200000000000000, 0xffffffffffffff7f);
    TEST_RR_OP(70, divuw, 0x0000000000000000, 0x400000000000000, 0xffffffffffffffbf);
    TEST_RR_OP(71, divuw, 0x0000000000000000, 0x800000000000000, 0xffffffffffffffdf);
    TEST_RR_OP(72, divuw, 0x0000000000000000, 0x1000000000000000, 0xffffffffffffffef);
    TEST_RR_OP(73, divuw, 0x0000000000000000, 0x2000000000000000, 0xfffffffffffffff7);
    TEST_RR_OP(74, divuw, 0x0000000000000000, 0x4000000000000000, 0xfffffffffffffffb);
    TEST_RR_OP(75, divuw, 0x0000000000000000, 0x8000000000000000, 0xfffffffffffffffd);
    TEST_RR_OP(76, divuw, 0x0000000000000000, 0x0, 0xfffffffffffffffe);
    TEST_RR_OP(77, divuw, 0xffffffffffffffff, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(78, divuw, 0xffffffffffffffff, 0xfffffffffffffffd, 0x8000000000000000);
    TEST_RR_OP(79, divuw, 0xffffffffffffffff, 0xfffffffffffffffb, 0x4000000000000000);
    TEST_RR_OP(80, divuw, 0xffffffffffffffff, 0xfffffffffffffff7, 0x2000000000000000);
    TEST_RR_OP(81, divuw, 0xffffffffffffffff, 0xffffffffffffffef, 0x1000000000000000);
    TEST_RR_OP(82, divuw, 0xffffffffffffffff, 0xffffffffffffffdf, 0x800000000000000);
    TEST_RR_OP(83, divuw, 0xffffffffffffffff, 0xffffffffffffffbf, 0x400000000000000);
    TEST_RR_OP(84, divuw, 0xffffffffffffffff, 0xffffffffffffff7f, 0x200000000000000);
    TEST_RR_OP(85, divuw, 0xffffffffffffffff, 0xfffffffffffffeff, 0x100000000000000);
    TEST_RR_OP(86, divuw, 0xffffffffffffffff, 0xfffffffffffffdff, 0x80000000000000);
    TEST_RR_OP(87, divuw, 0xffffffffffffffff, 0xfffffffffffffbff, 0x40000000000000);
    TEST_RR_OP(88, divuw, 0xffffffffffffffff, 0xfffffffffffff7ff, 0x20000000000000);
    TEST_RR_OP(89, divuw, 0xffffffffffffffff, 0xffffffffffffefff, 0x10000000000000);
    TEST_RR_OP(90, divuw, 0xffffffffffffffff, 0xffffffffffffdfff, 0x8000000000000);
    TEST_RR_OP(91, divuw, 0xffffffffffffffff, 0xffffffffffffbfff, 0x4000000000000);
    TEST_RR_OP(92, divuw, 0xffffffffffffffff, 0xffffffffffff7fff, 0x2000000000000);
    TEST_RR_OP(93, divuw, 0xffffffffffffffff, 0xfffffffffffeffff, 0x1000000000000);
    TEST_RR_OP(94, divuw, 0xffffffffffffffff, 0xfffffffffffdffff, 0x800000000000);
    TEST_RR_OP(95, divuw, 0xffffffffffffffff, 0xfffffffffffbffff, 0x400000000000);
    TEST_RR_OP(96, divuw, 0xffffffffffffffff, 0xfffffffffff7ffff, 0x200000000000);
    TEST_RR_OP(97, divuw, 0xffffffffffffffff, 0xffffffffffefffff, 0x100000000000);
    TEST_RR_OP(98, divuw, 0xffffffffffffffff, 0xffffffffffdfffff, 0x80000000000);
    TEST_RR_OP(99, divuw, 0xffffffffffffffff, 0xffffffffffbfffff, 0x40000000000);
    TEST_RR_OP(100, divuw, 0xffffffffffffffff, 0xffffffffff7fffff, 0x20000000000);
    TEST_RR_OP(101, divuw, 0xffffffffffffffff, 0xfffffffffeffffff, 0x10000000000);
    TEST_RR_OP(102, divuw, 0xffffffffffffffff, 0xfffffffffdffffff, 0x8000000000);
    TEST_RR_OP(103, divuw, 0xffffffffffffffff, 0xfffffffffbffffff, 0x4000000000);
    TEST_RR_OP(104, divuw, 0xffffffffffffffff, 0xfffffffff7ffffff, 0x2000000000);
    TEST_RR_OP(105, divuw, 0xffffffffffffffff, 0xffffffffefffffff, 0x1000000000);
    TEST_RR_OP(106, divuw, 0xffffffffffffffff, 0xffffffffdfffffff, 0x800000000);
    TEST_RR_OP(107, divuw, 0xffffffffffffffff, 0xffffffffbfffffff, 0x400000000);
    TEST_RR_OP(108, divuw, 0xffffffffffffffff, 0xffffffff7fffffff, 0x200000000);
    TEST_RR_OP(109, divuw, 0xffffffffffffffff, 0xfffffffeffffffff, 0x100000000);
    TEST_RR_OP(110, divuw, 0x0000000000000001, 0xfffffffdffffffff, 0x80000000);
    TEST_RR_OP(111, divuw, 0x0000000000000003, 0xfffffffbffffffff, 0x40000000);
    TEST_RR_OP(112, divuw, 0x0000000000000007, 0xfffffff7ffffffff, 0x20000000);
    TEST_RR_OP(113, divuw, 0x000000000000000f, 0xffffffefffffffff, 0x10000000);
    TEST_RR_OP(114, divuw, 0x000000000000001f, 0xffffffdfffffffff, 0x8000000);
    TEST_RR_OP(115, divuw, 0x000000000000003f, 0xffffffbfffffffff, 0x4000000);
    TEST_RR_OP(116, divuw, 0x000000000000007f, 0xffffff7fffffffff, 0x2000000);
    TEST_RR_OP(117, divuw, 0x00000000000000ff, 0xfffffeffffffffff, 0x1000000);
    TEST_RR_OP(118, divuw, 0x00000000000001ff, 0xfffffdffffffffff, 0x800000);
    TEST_RR_OP(119, divuw, 0x00000000000003ff, 0xfffffbffffffffff, 0x400000);
    TEST_RR_OP(120, divuw, 0x00000000000007ff, 0xfffff7ffffffffff, 0x200000);
    TEST_RR_OP(121, divuw, 0x0000000000000fff, 0xffffefffffffffff, 0x100000);
    TEST_RR_OP(122, divuw, 0x0000000000001fff, 0xffffdfffffffffff, 0x80000);
    TEST_RR_OP(123, divuw, 0x0000000000003fff, 0xffffbfffffffffff, 0x40000);
    TEST_RR_OP(124, divuw, 0x0000000000007fff, 0xffff7fffffffffff, 0x20000);
    TEST_RR_OP(125, divuw, 0x000000000000ffff, 0xfffeffffffffffff, 0x10000);
    TEST_RR_OP(126, divuw, 0x000000000001ffff, 0xfffdffffffffffff, 0x8000);
    TEST_RR_OP(127, divuw, 0x000000000003ffff, 0xfffbffffffffffff, 0x4000);
    TEST_RR_OP(128, divuw, 0x000000000007ffff, 0xfff7ffffffffffff, 0x2000);
    TEST_RR_OP(129, divuw, 0x00000000000fffff, 0xffefffffffffffff, 0x1000);
    TEST_RR_OP(130, divuw, 0x00000000001fffff, 0xffdfffffffffffff, 0x800);
    TEST_RR_OP(131, divuw, 0x00000000003fffff, 0xffbfffffffffffff, 0x400);
    TEST_RR_OP(132, divuw, 0x00000000007fffff, 0xff7fffffffffffff, 0x200);
    TEST_RR_OP(133, divuw, 0x0000000000ffffff, 0xfeffffffffffffff, 0x100);
    TEST_RR_OP(134, divuw, 0x0000000001ffffff, 0xfdffffffffffffff, 0x80);
    TEST_RR_OP(135, divuw, 0x0000000003ffffff, 0xfbffffffffffffff, 0x40);
    TEST_RR_OP(136, divuw, 0x0000000007ffffff, 0xf7ffffffffffffff, 0x20);
    TEST_RR_OP(137, divuw, 0x000000000fffffff, 0xefffffffffffffff, 0x10);
    TEST_RR_OP(138, divuw, 0x000000001fffffff, 0xdfffffffffffffff, 0x8);
    TEST_RR_OP(139, divuw, 0x000000003fffffff, 0xbfffffffffffffff, 0x4);
    TEST_RR_OP(140, divuw, 0x000000007fffffff, 0x7fffffffffffffff, 0x2);
    TEST_RR_OP(141, divuw, 0xffffffffffffffff, 0xffffffffffffffff, 0x1);
    TEST_RR_OP(142, divuw, 0xffffffffffffffff, 0x1, 0x0);
    TEST_RR_OP(143, divuw, 0xffffffffffffffff, 0x2, 0x0);
    TEST_RR_OP(144, divuw, 0xffffffffffffffff, 0x4, 0x0);
    TEST_RR_OP(145, divuw, 0xffffffffffffffff, 0x8, 0x0);
    TEST_RR_OP(146, divuw, 0xffffffffffffffff, 0x10, 0x0);
    TEST_RR_OP(147, divuw, 0xffffffffffffffff, 0x20, 0x0);
    TEST_RR_OP(148, divuw, 0xffffffffffffffff, 0x40, 0x0);
    TEST_RR_OP(149, divuw, 0xffffffffffffffff, 0x80, 0x0);
    TEST_RR_OP(150, divuw, 0xffffffffffffffff, 0x100, 0x0);
    TEST_RR_OP(151, divuw, 0xffffffffffffffff, 0x200, 0x0);
    TEST_RR_OP(152, divuw, 0xffffffffffffffff, 0x400, 0x0);
    TEST_RR_OP(153, divuw, 0xffffffffffffffff, 0x800, 0x0);
    TEST_RR_OP(154, divuw, 0xffffffffffffffff, 0x1000, 0x0);
    TEST_RR_OP(155, divuw, 0xffffffffffffffff, 0x2000, 0x0);
    TEST_RR_OP(156, divuw, 0xffffffffffffffff, 0x4000, 0x0);
    TEST_RR_OP(157, divuw, 0xffffffffffffffff, 0x8000, 0x0);
    TEST_RR_OP(158, divuw, 0xffffffffffffffff, 0x10000, 0x0);
    TEST_RR_OP(159, divuw, 0xffffffffffffffff, 0x20000, 0x0);
    TEST_RR_OP(160, divuw, 0xffffffffffffffff, 0x40000, 0x0);
    TEST_RR_OP(161, divuw, 0xffffffffffffffff, 0x80000, 0x0);
    TEST_RR_OP(162, divuw, 0xffffffffffffffff, 0x100000, 0x0);
    TEST_RR_OP(163, divuw, 0xffffffffffffffff, 0x200000, 0x0);
    TEST_RR_OP(164, divuw, 0xffffffffffffffff, 0x400000, 0x0);
    TEST_RR_OP(165, divuw, 0xffffffffffffffff, 0x800000, 0x0);
    TEST_RR_OP(166, divuw, 0xffffffffffffffff, 0x1000000, 0x0);
    TEST_RR_OP(167, divuw, 0xffffffffffffffff, 0x2000000, 0x0);
    TEST_RR_OP(168, divuw, 0xffffffffffffffff, 0x4000000, 0x0);
    TEST_RR_OP(169, divuw, 0xffffffffffffffff, 0x8000000, 0x0);
    TEST_RR_OP(170, divuw, 0xffffffffffffffff, 0x10000000, 0x0);
    TEST_RR_OP(171, divuw, 0xffffffffffffffff, 0x20000000, 0x0);
    TEST_RR_OP(172, divuw, 0xffffffffffffffff, 0x40000000, 0x0);
    TEST_RR_OP(173, divuw, 0xffffffffffffffff, 0x80000000, 0x0);
    TEST_RR_OP(174, divuw, 0xffffffffffffffff, 0x100000000, 0x0);
    TEST_RR_OP(175, divuw, 0xffffffffffffffff, 0x200000000, 0x0);
    TEST_RR_OP(176, divuw, 0xffffffffffffffff, 0x400000000, 0x0);
    TEST_RR_OP(177, divuw, 0xffffffffffffffff, 0x800000000, 0x0);
    TEST_RR_OP(178, divuw, 0xffffffffffffffff, 0x1000000000, 0x0);
    TEST_RR_OP(179, divuw, 0xffffffffffffffff, 0x2000000000, 0x0);
    TEST_RR_OP(180, divuw, 0xffffffffffffffff, 0x4000000000, 0x0);
    TEST_RR_OP(181, divuw, 0xffffffffffffffff, 0x8000000000, 0x0);
    TEST_RR_OP(182, divuw, 0xffffffffffffffff, 0x10000000000, 0x0);
    TEST_RR_OP(183, divuw, 0xffffffffffffffff, 0x20000000000, 0x0);
    TEST_RR_OP(184, divuw, 0xffffffffffffffff, 0x40000000000, 0x0);
    TEST_RR_OP(185, divuw, 0xffffffffffffffff, 0x80000000000, 0x0);
    TEST_RR_OP(186, divuw, 0xffffffffffffffff, 0x100000000000, 0x0);
    TEST_RR_OP(187, divuw, 0xffffffffffffffff, 0x200000000000, 0x0);
    TEST_RR_OP(188, divuw, 0xffffffffffffffff, 0x400000000000, 0x0);
    TEST_RR_OP(189, divuw, 0xffffffffffffffff, 0x800000000000, 0x0);
    TEST_RR_OP(190, divuw, 0xffffffffffffffff, 0x1000000000000, 0x0);
    TEST_RR_OP(191, divuw, 0xffffffffffffffff, 0x2000000000000, 0x0);
    TEST_RR_OP(192, divuw, 0xffffffffffffffff, 0x4000000000000, 0x0);
    TEST_RR_OP(193, divuw, 0xffffffffffffffff, 0x8000000000000, 0x0);
    TEST_RR_OP(194, divuw, 0xffffffffffffffff, 0x10000000000000, 0x0);
    TEST_RR_OP(195, divuw, 0xffffffffffffffff, 0x20000000000000, 0x0);
    TEST_RR_OP(196, divuw, 0xffffffffffffffff, 0x40000000000000, 0x0);
    TEST_RR_OP(197, divuw, 0xffffffffffffffff, 0x80000000000000, 0x0);
    TEST_RR_OP(198, divuw, 0xffffffffffffffff, 0x100000000000000, 0x0);
    TEST_RR_OP(199, divuw, 0xffffffffffffffff, 0x200000000000000, 0x0);
    TEST_RR_OP(200, divuw, 0xffffffffffffffff, 0x400000000000000, 0x0);
    TEST_RR_OP(201, divuw, 0xffffffffffffffff, 0x800000000000000, 0x0);
    TEST_RR_OP(202, divuw, 0xffffffffffffffff, 0x1000000000000000, 0x0);
    TEST_RR_OP(203, divuw, 0xffffffffffffffff, 0x2000000000000000, 0x0);
    TEST_RR_OP(204, divuw, 0xffffffffffffffff, 0x4000000000000000, 0x0);
    TEST_RR_OP(205, divuw, 0xffffffffffffffff, 0x8000000000000000, 0x0);
    TEST_RR_OP(206, divuw, 0xffffffffffffffff, 0x0, 0x0);
    TEST_RR_OP(207, divuw, 0xffffffffffffffff, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(208, divuw, 0xffffffffffffffff, 0xfffffffffffffffd, 0x0);
    TEST_RR_OP(209, divuw, 0xffffffffffffffff, 0xfffffffffffffffb, 0x0);
    TEST_RR_OP(210, divuw, 0xffffffffffffffff, 0xfffffffffffffff7, 0x0);
    TEST_RR_OP(211, divuw, 0xffffffffffffffff, 0xffffffffffffffef, 0x0);
    TEST_RR_OP(212, divuw, 0xffffffffffffffff, 0xffffffffffffffdf, 0x0);
    TEST_RR_OP(213, divuw, 0xffffffffffffffff, 0xffffffffffffffbf, 0x0);
    TEST_RR_OP(214, divuw, 0xffffffffffffffff, 0xffffffffffffff7f, 0x0);
    TEST_RR_OP(215, divuw, 0xffffffffffffffff, 0xfffffffffffffeff, 0x0);
    TEST_RR_OP(216, divuw, 0xffffffffffffffff, 0xfffffffffffffdff, 0x0);
    TEST_RR_OP(217, divuw, 0xffffffffffffffff, 0xfffffffffffffbff, 0x0);
    TEST_RR_OP(218, divuw, 0xffffffffffffffff, 0xfffffffffffff7ff, 0x0);
    TEST_RR_OP(219, divuw, 0xffffffffffffffff, 0xffffffffffffefff, 0x0);
    TEST_RR_OP(220, divuw, 0xffffffffffffffff, 0xffffffffffffdfff, 0x0);
    TEST_RR_OP(221, divuw, 0xffffffffffffffff, 0xffffffffffffbfff, 0x0);
    TEST_RR_OP(222, divuw, 0xffffffffffffffff, 0xffffffffffff7fff, 0x0);
    TEST_RR_OP(223, divuw, 0xffffffffffffffff, 0xfffffffffffeffff, 0x0);
    TEST_RR_OP(224, divuw, 0xffffffffffffffff, 0xfffffffffffdffff, 0x0);
    TEST_RR_OP(225, divuw, 0xffffffffffffffff, 0xfffffffffffbffff, 0x0);
    TEST_RR_OP(226, divuw, 0xffffffffffffffff, 0xfffffffffff7ffff, 0x0);
    TEST_RR_OP(227, divuw, 0xffffffffffffffff, 0xffffffffffefffff, 0x0);
    TEST_RR_OP(228, divuw, 0xffffffffffffffff, 0xffffffffffdfffff, 0x0);
    TEST_RR_OP(229, divuw, 0xffffffffffffffff, 0xffffffffffbfffff, 0x0);
    TEST_RR_OP(230, divuw, 0xffffffffffffffff, 0xffffffffff7fffff, 0x0);
    TEST_RR_OP(231, divuw, 0xffffffffffffffff, 0xfffffffffeffffff, 0x0);
    TEST_RR_OP(232, divuw, 0xffffffffffffffff, 0xfffffffffdffffff, 0x0);
    TEST_RR_OP(233, divuw, 0xffffffffffffffff, 0xfffffffffbffffff, 0x0);
    TEST_RR_OP(234, divuw, 0xffffffffffffffff, 0xfffffffff7ffffff, 0x0);
    TEST_RR_OP(235, divuw, 0xffffffffffffffff, 0xffffffffefffffff, 0x0);
    TEST_RR_OP(236, divuw, 0xffffffffffffffff, 0xffffffffdfffffff, 0x0);
    TEST_RR_OP(237, divuw, 0xffffffffffffffff, 0xffffffffbfffffff, 0x0);
    TEST_RR_OP(238, divuw, 0xffffffffffffffff, 0xffffffff7fffffff, 0x0);
    TEST_RR_OP(239, divuw, 0xffffffffffffffff, 0xfffffffeffffffff, 0x0);
    TEST_RR_OP(240, divuw, 0xffffffffffffffff, 0xfffffffdffffffff, 0x0);
    TEST_RR_OP(241, divuw, 0xffffffffffffffff, 0xfffffffbffffffff, 0x0);
    TEST_RR_OP(242, divuw, 0xffffffffffffffff, 0xfffffff7ffffffff, 0x0);
    TEST_RR_OP(243, divuw, 0xffffffffffffffff, 0xffffffefffffffff, 0x0);
    TEST_RR_OP(244, divuw, 0xffffffffffffffff, 0xffffffdfffffffff, 0x0);
    TEST_RR_OP(245, divuw, 0xffffffffffffffff, 0xffffffbfffffffff, 0x0);
    TEST_RR_OP(246, divuw, 0xffffffffffffffff, 0xffffff7fffffffff, 0x0);
    TEST_RR_OP(247, divuw, 0xffffffffffffffff, 0xfffffeffffffffff, 0x0);
    TEST_RR_OP(248, divuw, 0xffffffffffffffff, 0xfffffdffffffffff, 0x0);
    TEST_RR_OP(249, divuw, 0xffffffffffffffff, 0xfffffbffffffffff, 0x0);
    TEST_RR_OP(250, divuw, 0xffffffffffffffff, 0xfffff7ffffffffff, 0x0);
    TEST_RR_OP(251, divuw, 0xffffffffffffffff, 0xffffefffffffffff, 0x0);
    TEST_RR_OP(252, divuw, 0xffffffffffffffff, 0xffffdfffffffffff, 0x0);
    TEST_RR_OP(253, divuw, 0xffffffffffffffff, 0xffffbfffffffffff, 0x0);
    TEST_RR_OP(254, divuw, 0xffffffffffffffff, 0xffff7fffffffffff, 0x0);
    TEST_RR_OP(255, divuw, 0xffffffffffffffff, 0xfffeffffffffffff, 0x0);
    TEST_RR_OP(256, divuw, 0xffffffffffffffff, 0xfffdffffffffffff, 0x0);
    TEST_RR_OP(257, divuw, 0xffffffffffffffff, 0xfffbffffffffffff, 0x0);
    TEST_RR_OP(258, divuw, 0xffffffffffffffff, 0xfff7ffffffffffff, 0x0);
    TEST_RR_OP(259, divuw, 0xffffffffffffffff, 0xffefffffffffffff, 0x0);
    TEST_RR_OP(260, divuw, 0xffffffffffffffff, 0xffdfffffffffffff, 0x0);
    TEST_RR_OP(261, divuw, 0xffffffffffffffff, 0xffbfffffffffffff, 0x0);
    TEST_RR_OP(262, divuw, 0xffffffffffffffff, 0xff7fffffffffffff, 0x0);
    TEST_RR_OP(263, divuw, 0xffffffffffffffff, 0xfeffffffffffffff, 0x0);
    TEST_RR_OP(264, divuw, 0xffffffffffffffff, 0xfdffffffffffffff, 0x0);
    TEST_RR_OP(265, divuw, 0xffffffffffffffff, 0xfbffffffffffffff, 0x0);
    TEST_RR_OP(266, divuw, 0xffffffffffffffff, 0xf7ffffffffffffff, 0x0);
    TEST_RR_OP(267, divuw, 0xffffffffffffffff, 0xefffffffffffffff, 0x0);
    TEST_RR_OP(268, divuw, 0xffffffffffffffff, 0xdfffffffffffffff, 0x0);
    TEST_RR_OP(269, divuw, 0xffffffffffffffff, 0xbfffffffffffffff, 0x0);
    TEST_RR_OP(270, divuw, 0xffffffffffffffff, 0x7fffffffffffffff, 0x0);
    TEST_RR_OP(271, divuw, 0xffffffffffffffff, 0xffffffffffffffff, 0x0);
    
TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

