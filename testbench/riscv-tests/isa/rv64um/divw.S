# See LICENSE for license details.

#*****************************************************************************
# divw.S
#-----------------------------------------------------------------------------
#
# Test divw instruction.
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

    TEST_RR_OP(2, divw, 0xfffffffffffffffc, 0x10fd3dedadea5195, 0xdf7f3844121bcc23);
    TEST_RR_OP(3, divw, 0x0000000000000000, 0xbd295ce2d2ffbec1, 0xf5adb41aa47d105b);
    TEST_RR_OP(4, divw, 0x0000000000000000, 0xc9649f05a8e1a8bb, 0x82f6747f707af2c0);
    TEST_RR_OP(5, divw, 0xfffffffffffffffe, 0x3541291848c99fcb, 0x73a92fd4e19bfbc3);
    TEST_RR_OP(6, divw, 0x0000000000000000, 0x10a24740461d524f, 0x546b0e54528a10af);
    TEST_RR_OP(7, divw, 0x0000000000000001, 0x546b0e54528a10af, 0x10a24740461d524f);
    TEST_RR_OP(8, divw, 0x0000000000000000, 0x73a92fd4e19bfbc3, 0x3541291848c99fcb);
    TEST_RR_OP(9, divw, 0xffffffffffffffff, 0x82f6747f707af2c0, 0xc9649f05a8e1a8bb);
    TEST_RR_OP(10, divw, 0x0000000000000002, 0xf5adb41aa47d105b, 0xbd295ce2d2ffbec1);
    TEST_RR_OP(11, divw, 0x0000000000000000, 0xdf7f3844121bcc23, 0x10fd3dedadea5195);
    TEST_RR_OP(12, divw, 0xffffffffffffffff, 0x1, 0xffffffffffffffff);
    TEST_RR_OP(13, divw, 0xfffffffffffffffe, 0x2, 0x7fffffffffffffff);
    TEST_RR_OP(14, divw, 0xfffffffffffffffc, 0x4, 0xbfffffffffffffff);
    TEST_RR_OP(15, divw, 0xfffffffffffffff8, 0x8, 0xdfffffffffffffff);
    TEST_RR_OP(16, divw, 0xfffffffffffffff0, 0x10, 0xefffffffffffffff);
    TEST_RR_OP(17, divw, 0xffffffffffffffe0, 0x20, 0xf7ffffffffffffff);
    TEST_RR_OP(18, divw, 0xffffffffffffffc0, 0x40, 0xfbffffffffffffff);
    TEST_RR_OP(19, divw, 0xffffffffffffff80, 0x80, 0xfdffffffffffffff);
    TEST_RR_OP(20, divw, 0xffffffffffffff00, 0x100, 0xfeffffffffffffff);
    TEST_RR_OP(21, divw, 0xfffffffffffffe00, 0x200, 0xff7fffffffffffff);
    TEST_RR_OP(22, divw, 0xfffffffffffffc00, 0x400, 0xffbfffffffffffff);
    TEST_RR_OP(23, divw, 0xfffffffffffff800, 0x800, 0xffdfffffffffffff);
    TEST_RR_OP(24, divw, 0xfffffffffffff000, 0x1000, 0xffefffffffffffff);
    TEST_RR_OP(25, divw, 0xffffffffffffe000, 0x2000, 0xfff7ffffffffffff);
    TEST_RR_OP(26, divw, 0xffffffffffffc000, 0x4000, 0xfffbffffffffffff);
    TEST_RR_OP(27, divw, 0xffffffffffff8000, 0x8000, 0xfffdffffffffffff);
    TEST_RR_OP(28, divw, 0xffffffffffff0000, 0x10000, 0xfffeffffffffffff);
    TEST_RR_OP(29, divw, 0xfffffffffffe0000, 0x20000, 0xffff7fffffffffff);
    TEST_RR_OP(30, divw, 0xfffffffffffc0000, 0x40000, 0xffffbfffffffffff);
    TEST_RR_OP(31, divw, 0xfffffffffff80000, 0x80000, 0xffffdfffffffffff);
    TEST_RR_OP(32, divw, 0xfffffffffff00000, 0x100000, 0xffffefffffffffff);
    TEST_RR_OP(33, divw, 0xffffffffffe00000, 0x200000, 0xfffff7ffffffffff);
    TEST_RR_OP(34, divw, 0xffffffffffc00000, 0x400000, 0xfffffbffffffffff);
    TEST_RR_OP(35, divw, 0xffffffffff800000, 0x800000, 0xfffffdffffffffff);
    TEST_RR_OP(36, divw, 0xffffffffff000000, 0x1000000, 0xfffffeffffffffff);
    TEST_RR_OP(37, divw, 0xfffffffffe000000, 0x2000000, 0xffffff7fffffffff);
    TEST_RR_OP(38, divw, 0xfffffffffc000000, 0x4000000, 0xffffffbfffffffff);
    TEST_RR_OP(39, divw, 0xfffffffff8000000, 0x8000000, 0xffffffdfffffffff);
    TEST_RR_OP(40, divw, 0xfffffffff0000000, 0x10000000, 0xffffffefffffffff);
    TEST_RR_OP(41, divw, 0xffffffffe0000000, 0x20000000, 0xfffffff7ffffffff);
    TEST_RR_OP(42, divw, 0xffffffffc0000000, 0x40000000, 0xfffffffbffffffff);
    TEST_RR_OP(43, divw, 0xffffffff80000000, 0x80000000, 0xfffffffdffffffff);
    TEST_RR_OP(44, divw, 0x0000000000000000, 0x100000000, 0xfffffffeffffffff);
    TEST_RR_OP(45, divw, 0x0000000000000000, 0x200000000, 0xffffffff7fffffff);
    TEST_RR_OP(46, divw, 0x0000000000000000, 0x400000000, 0xffffffffbfffffff);
    TEST_RR_OP(47, divw, 0x0000000000000000, 0x800000000, 0xffffffffdfffffff);
    TEST_RR_OP(48, divw, 0x0000000000000000, 0x1000000000, 0xffffffffefffffff);
    TEST_RR_OP(49, divw, 0x0000000000000000, 0x2000000000, 0xfffffffff7ffffff);
    TEST_RR_OP(50, divw, 0x0000000000000000, 0x4000000000, 0xfffffffffbffffff);
    TEST_RR_OP(51, divw, 0x0000000000000000, 0x8000000000, 0xfffffffffdffffff);
    TEST_RR_OP(52, divw, 0x0000000000000000, 0x10000000000, 0xfffffffffeffffff);
    TEST_RR_OP(53, divw, 0x0000000000000000, 0x20000000000, 0xffffffffff7fffff);
    TEST_RR_OP(54, divw, 0x0000000000000000, 0x40000000000, 0xffffffffffbfffff);
    TEST_RR_OP(55, divw, 0x0000000000000000, 0x80000000000, 0xffffffffffdfffff);
    TEST_RR_OP(56, divw, 0x0000000000000000, 0x100000000000, 0xffffffffffefffff);
    TEST_RR_OP(57, divw, 0x0000000000000000, 0x200000000000, 0xfffffffffff7ffff);
    TEST_RR_OP(58, divw, 0x0000000000000000, 0x400000000000, 0xfffffffffffbffff);
    TEST_RR_OP(59, divw, 0x0000000000000000, 0x800000000000, 0xfffffffffffdffff);
    TEST_RR_OP(60, divw, 0x0000000000000000, 0x1000000000000, 0xfffffffffffeffff);
    TEST_RR_OP(61, divw, 0x0000000000000000, 0x2000000000000, 0xffffffffffff7fff);
    TEST_RR_OP(62, divw, 0x0000000000000000, 0x4000000000000, 0xffffffffffffbfff);
    TEST_RR_OP(63, divw, 0x0000000000000000, 0x8000000000000, 0xffffffffffffdfff);
    TEST_RR_OP(64, divw, 0x0000000000000000, 0x10000000000000, 0xffffffffffffefff);
    TEST_RR_OP(65, divw, 0x0000000000000000, 0x20000000000000, 0xfffffffffffff7ff);
    TEST_RR_OP(66, divw, 0x0000000000000000, 0x40000000000000, 0xfffffffffffffbff);
    TEST_RR_OP(67, divw, 0x0000000000000000, 0x80000000000000, 0xfffffffffffffdff);
    TEST_RR_OP(68, divw, 0x0000000000000000, 0x100000000000000, 0xfffffffffffffeff);
    TEST_RR_OP(69, divw, 0x0000000000000000, 0x200000000000000, 0xffffffffffffff7f);
    TEST_RR_OP(70, divw, 0x0000000000000000, 0x400000000000000, 0xffffffffffffffbf);
    TEST_RR_OP(71, divw, 0x0000000000000000, 0x800000000000000, 0xffffffffffffffdf);
    TEST_RR_OP(72, divw, 0x0000000000000000, 0x1000000000000000, 0xffffffffffffffef);
    TEST_RR_OP(73, divw, 0x0000000000000000, 0x2000000000000000, 0xfffffffffffffff7);
    TEST_RR_OP(74, divw, 0x0000000000000000, 0x4000000000000000, 0xfffffffffffffffb);
    TEST_RR_OP(75, divw, 0x0000000000000000, 0x8000000000000000, 0xfffffffffffffffd);
    TEST_RR_OP(76, divw, 0x0000000000000000, 0x0, 0xfffffffffffffffe);
    TEST_RR_OP(77, divw, 0xffffffffffffffff, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(78, divw, 0xffffffffffffffff, 0xfffffffffffffffd, 0x8000000000000000);
    TEST_RR_OP(79, divw, 0xffffffffffffffff, 0xfffffffffffffffb, 0x4000000000000000);
    TEST_RR_OP(80, divw, 0xffffffffffffffff, 0xfffffffffffffff7, 0x2000000000000000);
    TEST_RR_OP(81, divw, 0xffffffffffffffff, 0xffffffffffffffef, 0x1000000000000000);
    TEST_RR_OP(82, divw, 0xffffffffffffffff, 0xffffffffffffffdf, 0x800000000000000);
    TEST_RR_OP(83, divw, 0xffffffffffffffff, 0xffffffffffffffbf, 0x400000000000000);
    TEST_RR_OP(84, divw, 0xffffffffffffffff, 0xffffffffffffff7f, 0x200000000000000);
    TEST_RR_OP(85, divw, 0xffffffffffffffff, 0xfffffffffffffeff, 0x100000000000000);
    TEST_RR_OP(86, divw, 0xffffffffffffffff, 0xfffffffffffffdff, 0x80000000000000);
    TEST_RR_OP(87, divw, 0xffffffffffffffff, 0xfffffffffffffbff, 0x40000000000000);
    TEST_RR_OP(88, divw, 0xffffffffffffffff, 0xfffffffffffff7ff, 0x20000000000000);
    TEST_RR_OP(89, divw, 0xffffffffffffffff, 0xffffffffffffefff, 0x10000000000000);
    TEST_RR_OP(90, divw, 0xffffffffffffffff, 0xffffffffffffdfff, 0x8000000000000);
    TEST_RR_OP(91, divw, 0xffffffffffffffff, 0xffffffffffffbfff, 0x4000000000000);
    TEST_RR_OP(92, divw, 0xffffffffffffffff, 0xffffffffffff7fff, 0x2000000000000);
    TEST_RR_OP(93, divw, 0xffffffffffffffff, 0xfffffffffffeffff, 0x1000000000000);
    TEST_RR_OP(94, divw, 0xffffffffffffffff, 0xfffffffffffdffff, 0x800000000000);
    TEST_RR_OP(95, divw, 0xffffffffffffffff, 0xfffffffffffbffff, 0x400000000000);
    TEST_RR_OP(96, divw, 0xffffffffffffffff, 0xfffffffffff7ffff, 0x200000000000);
    TEST_RR_OP(97, divw, 0xffffffffffffffff, 0xffffffffffefffff, 0x100000000000);
    TEST_RR_OP(98, divw, 0xffffffffffffffff, 0xffffffffffdfffff, 0x80000000000);
    TEST_RR_OP(99, divw, 0xffffffffffffffff, 0xffffffffffbfffff, 0x40000000000);
    TEST_RR_OP(100, divw, 0xffffffffffffffff, 0xffffffffff7fffff, 0x20000000000);
    TEST_RR_OP(101, divw, 0xffffffffffffffff, 0xfffffffffeffffff, 0x10000000000);
    TEST_RR_OP(102, divw, 0xffffffffffffffff, 0xfffffffffdffffff, 0x8000000000);
    TEST_RR_OP(103, divw, 0xffffffffffffffff, 0xfffffffffbffffff, 0x4000000000);
    TEST_RR_OP(104, divw, 0xffffffffffffffff, 0xfffffffff7ffffff, 0x2000000000);
    TEST_RR_OP(105, divw, 0xffffffffffffffff, 0xffffffffefffffff, 0x1000000000);
    TEST_RR_OP(106, divw, 0xffffffffffffffff, 0xffffffffdfffffff, 0x800000000);
    TEST_RR_OP(107, divw, 0xffffffffffffffff, 0xffffffffbfffffff, 0x400000000);
    TEST_RR_OP(108, divw, 0xffffffffffffffff, 0xffffffff7fffffff, 0x200000000);
    TEST_RR_OP(109, divw, 0xffffffffffffffff, 0xfffffffeffffffff, 0x100000000);
    TEST_RR_OP(110, divw, 0x0000000000000000, 0xfffffffdffffffff, 0x80000000);
    TEST_RR_OP(111, divw, 0x0000000000000000, 0xfffffffbffffffff, 0x40000000);
    TEST_RR_OP(112, divw, 0x0000000000000000, 0xfffffff7ffffffff, 0x20000000);
    TEST_RR_OP(113, divw, 0x0000000000000000, 0xffffffefffffffff, 0x10000000);
    TEST_RR_OP(114, divw, 0x0000000000000000, 0xffffffdfffffffff, 0x8000000);
    TEST_RR_OP(115, divw, 0x0000000000000000, 0xffffffbfffffffff, 0x4000000);
    TEST_RR_OP(116, divw, 0x0000000000000000, 0xffffff7fffffffff, 0x2000000);
    TEST_RR_OP(117, divw, 0x0000000000000000, 0xfffffeffffffffff, 0x1000000);
    TEST_RR_OP(118, divw, 0x0000000000000000, 0xfffffdffffffffff, 0x800000);
    TEST_RR_OP(119, divw, 0x0000000000000000, 0xfffffbffffffffff, 0x400000);
    TEST_RR_OP(120, divw, 0x0000000000000000, 0xfffff7ffffffffff, 0x200000);
    TEST_RR_OP(121, divw, 0x0000000000000000, 0xffffefffffffffff, 0x100000);
    TEST_RR_OP(122, divw, 0x0000000000000000, 0xffffdfffffffffff, 0x80000);
    TEST_RR_OP(123, divw, 0x0000000000000000, 0xffffbfffffffffff, 0x40000);
    TEST_RR_OP(124, divw, 0x0000000000000000, 0xffff7fffffffffff, 0x20000);
    TEST_RR_OP(125, divw, 0x0000000000000000, 0xfffeffffffffffff, 0x10000);
    TEST_RR_OP(126, divw, 0x0000000000000000, 0xfffdffffffffffff, 0x8000);
    TEST_RR_OP(127, divw, 0x0000000000000000, 0xfffbffffffffffff, 0x4000);
    TEST_RR_OP(128, divw, 0x0000000000000000, 0xfff7ffffffffffff, 0x2000);
    TEST_RR_OP(129, divw, 0x0000000000000000, 0xffefffffffffffff, 0x1000);
    TEST_RR_OP(130, divw, 0x0000000000000000, 0xffdfffffffffffff, 0x800);
    TEST_RR_OP(131, divw, 0x0000000000000000, 0xffbfffffffffffff, 0x400);
    TEST_RR_OP(132, divw, 0x0000000000000000, 0xff7fffffffffffff, 0x200);
    TEST_RR_OP(133, divw, 0x0000000000000000, 0xfeffffffffffffff, 0x100);
    TEST_RR_OP(134, divw, 0x0000000000000000, 0xfdffffffffffffff, 0x80);
    TEST_RR_OP(135, divw, 0x0000000000000000, 0xfbffffffffffffff, 0x40);
    TEST_RR_OP(136, divw, 0x0000000000000000, 0xf7ffffffffffffff, 0x20);
    TEST_RR_OP(137, divw, 0x0000000000000000, 0xefffffffffffffff, 0x10);
    TEST_RR_OP(138, divw, 0x0000000000000000, 0xdfffffffffffffff, 0x8);
    TEST_RR_OP(139, divw, 0x0000000000000000, 0xbfffffffffffffff, 0x4);
    TEST_RR_OP(140, divw, 0x0000000000000000, 0x7fffffffffffffff, 0x2);
    TEST_RR_OP(141, divw, 0xffffffffffffffff, 0xffffffffffffffff, 0x1);
    TEST_RR_OP(142, divw, 0xffffffffffffffff, 0x1, 0x0);
    TEST_RR_OP(143, divw, 0xffffffffffffffff, 0x2, 0x0);
    TEST_RR_OP(144, divw, 0xffffffffffffffff, 0x4, 0x0);
    TEST_RR_OP(145, divw, 0xffffffffffffffff, 0x8, 0x0);
    TEST_RR_OP(146, divw, 0xffffffffffffffff, 0x10, 0x0);
    TEST_RR_OP(147, divw, 0xffffffffffffffff, 0x20, 0x0);
    TEST_RR_OP(148, divw, 0xffffffffffffffff, 0x40, 0x0);
    TEST_RR_OP(149, divw, 0xffffffffffffffff, 0x80, 0x0);
    TEST_RR_OP(150, divw, 0xffffffffffffffff, 0x100, 0x0);
    TEST_RR_OP(151, divw, 0xffffffffffffffff, 0x200, 0x0);
    TEST_RR_OP(152, divw, 0xffffffffffffffff, 0x400, 0x0);
    TEST_RR_OP(153, divw, 0xffffffffffffffff, 0x800, 0x0);
    TEST_RR_OP(154, divw, 0xffffffffffffffff, 0x1000, 0x0);
    TEST_RR_OP(155, divw, 0xffffffffffffffff, 0x2000, 0x0);
    TEST_RR_OP(156, divw, 0xffffffffffffffff, 0x4000, 0x0);
    TEST_RR_OP(157, divw, 0xffffffffffffffff, 0x8000, 0x0);
    TEST_RR_OP(158, divw, 0xffffffffffffffff, 0x10000, 0x0);
    TEST_RR_OP(159, divw, 0xffffffffffffffff, 0x20000, 0x0);
    TEST_RR_OP(160, divw, 0xffffffffffffffff, 0x40000, 0x0);
    TEST_RR_OP(161, divw, 0xffffffffffffffff, 0x80000, 0x0);
    TEST_RR_OP(162, divw, 0xffffffffffffffff, 0x100000, 0x0);
    TEST_RR_OP(163, divw, 0xffffffffffffffff, 0x200000, 0x0);
    TEST_RR_OP(164, divw, 0xffffffffffffffff, 0x400000, 0x0);
    TEST_RR_OP(165, divw, 0xffffffffffffffff, 0x800000, 0x0);
    TEST_RR_OP(166, divw, 0xffffffffffffffff, 0x1000000, 0x0);
    TEST_RR_OP(167, divw, 0xffffffffffffffff, 0x2000000, 0x0);
    TEST_RR_OP(168, divw, 0xffffffffffffffff, 0x4000000, 0x0);
    TEST_RR_OP(169, divw, 0xffffffffffffffff, 0x8000000, 0x0);
    TEST_RR_OP(170, divw, 0xffffffffffffffff, 0x10000000, 0x0);
    TEST_RR_OP(171, divw, 0xffffffffffffffff, 0x20000000, 0x0);
    TEST_RR_OP(172, divw, 0xffffffffffffffff, 0x40000000, 0x0);
    TEST_RR_OP(173, divw, 0xffffffffffffffff, 0x80000000, 0x0);
    TEST_RR_OP(174, divw, 0xffffffffffffffff, 0x100000000, 0x0);
    TEST_RR_OP(175, divw, 0xffffffffffffffff, 0x200000000, 0x0);
    TEST_RR_OP(176, divw, 0xffffffffffffffff, 0x400000000, 0x0);
    TEST_RR_OP(177, divw, 0xffffffffffffffff, 0x800000000, 0x0);
    TEST_RR_OP(178, divw, 0xffffffffffffffff, 0x1000000000, 0x0);
    TEST_RR_OP(179, divw, 0xffffffffffffffff, 0x2000000000, 0x0);
    TEST_RR_OP(180, divw, 0xffffffffffffffff, 0x4000000000, 0x0);
    TEST_RR_OP(181, divw, 0xffffffffffffffff, 0x8000000000, 0x0);
    TEST_RR_OP(182, divw, 0xffffffffffffffff, 0x10000000000, 0x0);
    TEST_RR_OP(183, divw, 0xffffffffffffffff, 0x20000000000, 0x0);
    TEST_RR_OP(184, divw, 0xffffffffffffffff, 0x40000000000, 0x0);
    TEST_RR_OP(185, divw, 0xffffffffffffffff, 0x80000000000, 0x0);
    TEST_RR_OP(186, divw, 0xffffffffffffffff, 0x100000000000, 0x0);
    TEST_RR_OP(187, divw, 0xffffffffffffffff, 0x200000000000, 0x0);
    TEST_RR_OP(188, divw, 0xffffffffffffffff, 0x400000000000, 0x0);
    TEST_RR_OP(189, divw, 0xffffffffffffffff, 0x800000000000, 0x0);
    TEST_RR_OP(190, divw, 0xffffffffffffffff, 0x1000000000000, 0x0);
    TEST_RR_OP(191, divw, 0xffffffffffffffff, 0x2000000000000, 0x0);
    TEST_RR_OP(192, divw, 0xffffffffffffffff, 0x4000000000000, 0x0);
    TEST_RR_OP(193, divw, 0xffffffffffffffff, 0x8000000000000, 0x0);
    TEST_RR_OP(194, divw, 0xffffffffffffffff, 0x10000000000000, 0x0);
    TEST_RR_OP(195, divw, 0xffffffffffffffff, 0x20000000000000, 0x0);
    TEST_RR_OP(196, divw, 0xffffffffffffffff, 0x40000000000000, 0x0);
    TEST_RR_OP(197, divw, 0xffffffffffffffff, 0x80000000000000, 0x0);
    TEST_RR_OP(198, divw, 0xffffffffffffffff, 0x100000000000000, 0x0);
    TEST_RR_OP(199, divw, 0xffffffffffffffff, 0x200000000000000, 0x0);
    TEST_RR_OP(200, divw, 0xffffffffffffffff, 0x400000000000000, 0x0);
    TEST_RR_OP(201, divw, 0xffffffffffffffff, 0x800000000000000, 0x0);
    TEST_RR_OP(202, divw, 0xffffffffffffffff, 0x1000000000000000, 0x0);
    TEST_RR_OP(203, divw, 0xffffffffffffffff, 0x2000000000000000, 0x0);
    TEST_RR_OP(204, divw, 0xffffffffffffffff, 0x4000000000000000, 0x0);
    TEST_RR_OP(205, divw, 0xffffffffffffffff, 0x8000000000000000, 0x0);
    TEST_RR_OP(206, divw, 0xffffffffffffffff, 0x0, 0x0);
    TEST_RR_OP(207, divw, 0xffffffffffffffff, 0xfffffffffffffffe, 0x0);
    TEST_RR_OP(208, divw, 0xffffffffffffffff, 0xfffffffffffffffd, 0x0);
    TEST_RR_OP(209, divw, 0xffffffffffffffff, 0xfffffffffffffffb, 0x0);
    TEST_RR_OP(210, divw, 0xffffffffffffffff, 0xfffffffffffffff7, 0x0);
    TEST_RR_OP(211, divw, 0xffffffffffffffff, 0xffffffffffffffef, 0x0);
    TEST_RR_OP(212, divw, 0xffffffffffffffff, 0xffffffffffffffdf, 0x0);
    TEST_RR_OP(213, divw, 0xffffffffffffffff, 0xffffffffffffffbf, 0x0);
    TEST_RR_OP(214, divw, 0xffffffffffffffff, 0xffffffffffffff7f, 0x0);
    TEST_RR_OP(215, divw, 0xffffffffffffffff, 0xfffffffffffffeff, 0x0);
    TEST_RR_OP(216, divw, 0xffffffffffffffff, 0xfffffffffffffdff, 0x0);
    TEST_RR_OP(217, divw, 0xffffffffffffffff, 0xfffffffffffffbff, 0x0);
    TEST_RR_OP(218, divw, 0xffffffffffffffff, 0xfffffffffffff7ff, 0x0);
    TEST_RR_OP(219, divw, 0xffffffffffffffff, 0xffffffffffffefff, 0x0);
    TEST_RR_OP(220, divw, 0xffffffffffffffff, 0xffffffffffffdfff, 0x0);
    TEST_RR_OP(221, divw, 0xffffffffffffffff, 0xffffffffffffbfff, 0x0);
    TEST_RR_OP(222, divw, 0xffffffffffffffff, 0xffffffffffff7fff, 0x0);
    TEST_RR_OP(223, divw, 0xffffffffffffffff, 0xfffffffffffeffff, 0x0);
    TEST_RR_OP(224, divw, 0xffffffffffffffff, 0xfffffffffffdffff, 0x0);
    TEST_RR_OP(225, divw, 0xffffffffffffffff, 0xfffffffffffbffff, 0x0);
    TEST_RR_OP(226, divw, 0xffffffffffffffff, 0xfffffffffff7ffff, 0x0);
    TEST_RR_OP(227, divw, 0xffffffffffffffff, 0xffffffffffefffff, 0x0);
    TEST_RR_OP(228, divw, 0xffffffffffffffff, 0xffffffffffdfffff, 0x0);
    TEST_RR_OP(229, divw, 0xffffffffffffffff, 0xffffffffffbfffff, 0x0);
    TEST_RR_OP(230, divw, 0xffffffffffffffff, 0xffffffffff7fffff, 0x0);
    TEST_RR_OP(231, divw, 0xffffffffffffffff, 0xfffffffffeffffff, 0x0);
    TEST_RR_OP(232, divw, 0xffffffffffffffff, 0xfffffffffdffffff, 0x0);
    TEST_RR_OP(233, divw, 0xffffffffffffffff, 0xfffffffffbffffff, 0x0);
    TEST_RR_OP(234, divw, 0xffffffffffffffff, 0xfffffffff7ffffff, 0x0);
    TEST_RR_OP(235, divw, 0xffffffffffffffff, 0xffffffffefffffff, 0x0);
    TEST_RR_OP(236, divw, 0xffffffffffffffff, 0xffffffffdfffffff, 0x0);
    TEST_RR_OP(237, divw, 0xffffffffffffffff, 0xffffffffbfffffff, 0x0);
    TEST_RR_OP(238, divw, 0xffffffffffffffff, 0xffffffff7fffffff, 0x0);
    TEST_RR_OP(239, divw, 0xffffffffffffffff, 0xfffffffeffffffff, 0x0);
    TEST_RR_OP(240, divw, 0xffffffffffffffff, 0xfffffffdffffffff, 0x0);
    TEST_RR_OP(241, divw, 0xffffffffffffffff, 0xfffffffbffffffff, 0x0);
    TEST_RR_OP(242, divw, 0xffffffffffffffff, 0xfffffff7ffffffff, 0x0);
    TEST_RR_OP(243, divw, 0xffffffffffffffff, 0xffffffefffffffff, 0x0);
    TEST_RR_OP(244, divw, 0xffffffffffffffff, 0xffffffdfffffffff, 0x0);
    TEST_RR_OP(245, divw, 0xffffffffffffffff, 0xffffffbfffffffff, 0x0);
    TEST_RR_OP(246, divw, 0xffffffffffffffff, 0xffffff7fffffffff, 0x0);
    TEST_RR_OP(247, divw, 0xffffffffffffffff, 0xfffffeffffffffff, 0x0);
    TEST_RR_OP(248, divw, 0xffffffffffffffff, 0xfffffdffffffffff, 0x0);
    TEST_RR_OP(249, divw, 0xffffffffffffffff, 0xfffffbffffffffff, 0x0);
    TEST_RR_OP(250, divw, 0xffffffffffffffff, 0xfffff7ffffffffff, 0x0);
    TEST_RR_OP(251, divw, 0xffffffffffffffff, 0xffffefffffffffff, 0x0);
    TEST_RR_OP(252, divw, 0xffffffffffffffff, 0xffffdfffffffffff, 0x0);
    TEST_RR_OP(253, divw, 0xffffffffffffffff, 0xffffbfffffffffff, 0x0);
    TEST_RR_OP(254, divw, 0xffffffffffffffff, 0xffff7fffffffffff, 0x0);
    TEST_RR_OP(255, divw, 0xffffffffffffffff, 0xfffeffffffffffff, 0x0);
    TEST_RR_OP(256, divw, 0xffffffffffffffff, 0xfffdffffffffffff, 0x0);
    TEST_RR_OP(257, divw, 0xffffffffffffffff, 0xfffbffffffffffff, 0x0);
    TEST_RR_OP(258, divw, 0xffffffffffffffff, 0xfff7ffffffffffff, 0x0);
    TEST_RR_OP(259, divw, 0xffffffffffffffff, 0xffefffffffffffff, 0x0);
    TEST_RR_OP(260, divw, 0xffffffffffffffff, 0xffdfffffffffffff, 0x0);
    TEST_RR_OP(261, divw, 0xffffffffffffffff, 0xffbfffffffffffff, 0x0);
    TEST_RR_OP(262, divw, 0xffffffffffffffff, 0xff7fffffffffffff, 0x0);
    TEST_RR_OP(263, divw, 0xffffffffffffffff, 0xfeffffffffffffff, 0x0);
    TEST_RR_OP(264, divw, 0xffffffffffffffff, 0xfdffffffffffffff, 0x0);
    TEST_RR_OP(265, divw, 0xffffffffffffffff, 0xfbffffffffffffff, 0x0);
    TEST_RR_OP(266, divw, 0xffffffffffffffff, 0xf7ffffffffffffff, 0x0);
    TEST_RR_OP(267, divw, 0xffffffffffffffff, 0xefffffffffffffff, 0x0);
    TEST_RR_OP(268, divw, 0xffffffffffffffff, 0xdfffffffffffffff, 0x0);
    TEST_RR_OP(269, divw, 0xffffffffffffffff, 0xbfffffffffffffff, 0x0);
    TEST_RR_OP(270, divw, 0xffffffffffffffff, 0x7fffffffffffffff, 0x0);
    TEST_RR_OP(271, divw, 0xffffffffffffffff, 0xffffffffffffffff, 0x0);
    TEST_RR_OP(272, divw, 0xffffffff80000000, 0x0000000080000000, 0xffffffffffffffff);
    TEST_RR_OP(273, divw, 0xffffffff80000000, 0xffffffff80000000, 0xffffffffffffffff);
    TEST_RR_OP(274, divw, 0xffffffff80000000, 0x0f0f0f0f80000000, 0xffffffffffffffff);

TEST_PASSFAIL
RVTEST_CODE_END
  .data
RVTEST_DATA_BEGIN
  TEST_DATA
RVTEST_DATA_END

